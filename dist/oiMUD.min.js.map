{
  "version": 3,
  "sources": ["../src/lib/inflate_stream.min.js", "../src/lib/buzz.js", "../src/events.ts", "../src/library.ts", "../src/telnet.ts", "../src/ansi.ts", "../src/types.ts", "../src/settings.ts", "../src/profile.ts", "../src/input.ts", "../src/lib/rgbcolor.js", "../src/parser.ts", "../src/display.ts", "../package.json", "../src/plugins/msp.ts", "../src/plugin.ts", "../src/client.ts", "../src/interface/menu.ts", "../src/dialog.ts", "../src/interface/adv.editor.ts", "../src/interface/interface.ts"],
  "sourcesContent": ["/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';var k=void 0,l=!0,aa=this;function s(a,d){var b=a.split(\".\"),c=aa;!(b[0]in c)&&c.execScript&&c.execScript(\"var \"+b[0]);for(var e;b.length&&(e=b.shift());)!b.length&&d!==k?c[e]=d:c=c[e]?c[e]:c[e]={}};var x=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function y(a){var d=a.length,b=0,c=Number.POSITIVE_INFINITY,e,g,f,p,h,q,m,n,r,B;for(n=0;n<d;++n)a[n]>b&&(b=a[n]),a[n]<c&&(c=a[n]);e=1<<b;g=new (x?Uint32Array:Array)(e);f=1;p=0;for(h=2;f<=b;){for(n=0;n<d;++n)if(a[n]===f){q=0;m=p;for(r=0;r<f;++r)q=q<<1|m&1,m>>=1;B=f<<16|n;for(r=q;r<e;r+=h)g[r]=B;++p}++f;p<<=1;h<<=1}return[g,b,c]};function z(a,d,b){this.u=[];this.i=b?b:32768;this.v=0;this.a=d===k?0:d;this.d=this.e=0;this.input=x?new Uint8Array(a):a;this.b=new (x?Uint8Array:Array)(this.i);this.c=0;this.t=this.l=!1;this.f=0;this.status=A}var A=0;\nz.prototype.j=function(a,d){var b=!1;a!==k&&(this.input=a);d!==k&&(this.a=d);for(;!b;)switch(this.status){case A:case 1:var c;var e=k;this.status=1;H(this);if(0>(e=I(this,3)))J(this),c=-1;else{e&1&&(this.l=l);e>>>=1;switch(e){case 0:this.h=0;break;case 1:this.h=1;break;case 2:this.h=2;break;default:throw Error(\"unknown BTYPE: \"+e);}this.status=2;c=k}0>c&&(b=l);break;case 2:case 3:switch(this.h){case 0:var g;var f=k,p=k,h=this.input,q=this.a;this.status=3;if(q+4>=h.length)g=-1;else{f=h[q++]|h[q++]<<\n8;p=h[q++]|h[q++]<<8;if(f===~p)throw Error(\"invalid uncompressed block header: length verify\");this.d=this.e=0;this.a=q;this.m=f;this.status=4;g=k}0>g&&(b=l);break;case 1:this.status=3;this.k=ba;this.n=ca;this.status=4;break;case 2:var m;a:{var n=k,r=k,B=k,V=new (x?Uint8Array:Array)(K.length),W=k;this.status=3;H(this);n=I(this,5)+257;r=I(this,5)+1;B=I(this,4)+4;if(0>n||0>r||0>B)J(this),m=-1;else{try{for(var w=k,D=k,E=0,C=k,u=k,t=k,X=k,t=0;t<B;++t){if(0>(w=I(this,3)))throw Error(\"not enough input\");\nV[K[t]]=w}W=y(V);u=new (x?Uint8Array:Array)(n+r);t=0;for(X=n+r;t<X;){D=O(this,W);if(0>D)throw Error(\"not enough input\");switch(D){case 16:if(0>(w=I(this,2)))throw Error(\"not enough input\");for(C=3+w;C--;)u[t++]=E;break;case 17:if(0>(w=I(this,3)))throw Error(\"not enough input\");for(C=3+w;C--;)u[t++]=0;E=0;break;case 18:if(0>(w=I(this,7)))throw Error(\"not enough input\");for(C=11+w;C--;)u[t++]=0;E=0;break;default:E=u[t++]=D}}new (x?Uint8Array:Array)(n);new (x?Uint8Array:Array)(r);this.k=x?y(u.subarray(0,\nn)):y(u.slice(0,n));this.n=x?y(u.subarray(n)):y(u.slice(n))}catch(pa){J(this);m=-1;break a}this.status=4;m=0}}0>m&&(b=l)}break;case 4:case 5:switch(this.h){case 0:var L;a:{var Y=this.input,F=this.a,M=this.b,G=this.c,N=this.m;for(this.status=5;N--;){G===M.length&&(M=P(this,{o:2}));if(F>=Y.length){this.a=F;this.c=G;this.m=N+1;L=-1;break a}M[G++]=Y[F++]}0>N&&(this.status=6);this.a=F;this.c=G;L=0}0>L&&(b=l);break;case 1:case 2:0>da(this)&&(b=l)}break;case 6:this.l?b=l:this.status=A}var Z,v=this.c,$;Z=\nthis.t?x?new Uint8Array(this.b.subarray(this.f,v)):this.b.slice(this.f,v):x?this.b.subarray(this.f,v):this.b.slice(this.f,v);this.f=v;v>32768+this.i&&(this.c=this.f=32768,x?($=this.b,this.b=new Uint8Array(this.i+32768),this.b.set($.subarray(v-32768,v))):this.b=this.b.slice(v-32768));return Z};\nvar ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],K=x?new Uint16Array(ea):ea,fa=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],ga=x?new Uint16Array(fa):fa,ha=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],ia=x?new Uint8Array(ha):ha,ja=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ka=x?new Uint16Array(ja):ja,la=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,\n11,11,12,12,13,13],ma=x?new Uint8Array(la):la,Q=new (x?Uint8Array:Array)(288),R,na;R=0;for(na=Q.length;R<na;++R)Q[R]=143>=R?8:255>=R?9:279>=R?7:8;var ba=y(Q),S=new (x?Uint8Array:Array)(30),T,oa;T=0;for(oa=S.length;T<oa;++T)S[T]=5;var ca=y(S);function I(a,d){for(var b=a.e,c=a.d,e=a.input,g=a.a,f;c<d;){if(e.length<=g)return-1;f=e[g++];b|=f<<c;c+=8}f=b&(1<<d)-1;a.e=b>>>d;a.d=c-d;a.a=g;return f}\nfunction O(a,d){for(var b=a.e,c=a.d,e=a.input,g=a.a,f=d[0],p=d[1],h,q,m;c<p;){if(e.length<=g)return-1;h=e[g++];b|=h<<c;c+=8}q=f[b&(1<<p)-1];m=q>>>16;if(m>c)throw Error(\"invalid code length: \"+m);a.e=b>>m;a.d=c-m;a.a=g;return q&65535}function H(a){a.s=a.a;a.r=a.d;a.q=a.e}function J(a){a.a=a.s;a.d=a.r;a.e=a.q}\nfunction da(a){var d=a.b,b=a.c,c,e,g,f,p=a.k,h=a.n,q=d.length,m;for(a.status=5;;){H(a);c=O(a,p);if(0>c)return a.c=b,J(a),-1;if(256===c)break;if(256>c)b===q&&(d=P(a),q=d.length),d[b++]=c;else{e=c-257;f=ga[e];if(0<ia[e]){m=I(a,ia[e]);if(0>m)return a.c=b,J(a),-1;f+=m}c=O(a,h);if(0>c)return a.c=b,J(a),-1;g=ka[c];if(0<ma[c]){m=I(a,ma[c]);if(0>m)return a.c=b,J(a),-1;g+=m}b+f>=q&&(d=P(a),q=d.length);for(;f--;)d[b]=d[b++-g];if(a.a===a.input.length)return a.c=b,-1}}for(;8<=a.d;)a.d-=8,a.a--;a.c=b;a.status=\n6}function P(a,d){var b,c=a.input.length/a.a+1|0,e,g,f,p=a.input,h=a.b;d&&(\"number\"===typeof d.o&&(c=d.o),\"number\"===typeof d.p&&(c+=d.p));2>c?(e=(p.length-a.a)/a.k[2],f=258*(e/2)|0,g=f<h.length?h.length+f:h.length<<1):g=h.length*c;x?(b=new Uint8Array(g),b.set(h)):b=h;a.b=b;return a.b};function U(a){this.input=a===k?new (x?Uint8Array:Array):a;this.a=0;this.g=new z(this.input,this.a);this.b=this.g.b}\nU.prototype.j=function(a){var d;if(a!==k)if(x){var b=new Uint8Array(this.input.length+a.length);b.set(this.input,0);b.set(a,this.input.length);this.input=b}else this.input=this.input.concat(a);var c;if(c=this.method===k){var e;var g=this.a,f=this.input,p=f[g++],h=f[g++];if(p===k||h===k)e=-1;else{switch(p&15){case 8:this.method=8;break;default:throw Error(\"unsupported compression method\");}if(0!==((p<<8)+h)%31)throw Error(\"invalid fcheck flag:\"+((p<<8)+h)%31);if(h&32)throw Error(\"fdict flag is not supported\");\nthis.a=g;e=k}c=0>e}if(c)return new (x?Uint8Array:Array);d=this.g.j(this.input,this.a);0!==this.g.a&&(this.input=x?this.input.subarray(this.g.a):this.input.slice(this.g.a),this.a=0);return d};s(\"Zlib.InflateStream\",U);s(\"Zlib.InflateStream.prototype.decompress\",U.prototype.j);}).call(this);\n", " // ----------------------------------------------------------------------------\n // Buzz, a Javascript HTML5 Audio library\n // v1.1.10 - Built 2015-04-20 13:05\n // Licensed under the MIT license.\n // http://buzz.jaysalvat.com/\n // ----------------------------------------------------------------------------\n // Copyright (C) 2010-2015 Jay Salvat\n // http://jaysalvat.com/\n // ----------------------------------------------------------------------------\n\n(function(context, factory) {\n    \"use strict\";\n    if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = factory();\n    } else if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else {\n        context.buzz = factory();\n    }\n})(this, function() {\n    \"use strict\";\n    var AudioContext = window.AudioContext || window.webkitAudioContext;\n    var buzz = {\n        defaults: {\n            autoplay: false,\n            duration: 5e3,\n            formats: [],\n            loop: false,\n            placeholder: \"--\",\n            preload: \"metadata\",\n            volume: 80,\n            webAudioApi: false,\n            document: window.document\n        },\n        types: {\n            mp3: \"audio/mpeg\",\n            ogg: \"audio/ogg\",\n            wav: \"audio/wav\",\n            aac: \"audio/aac\",\n            m4a: \"audio/x-m4a\"\n        },\n        sounds: [],\n        el: document.createElement(\"audio\"),\n        getAudioContext: function() {\n            if (this.audioCtx === undefined) {\n                try {\n                    this.audioCtx = AudioContext ? new AudioContext() : null;\n                } catch (e) {\n                    this.audioCtx = null;\n                }\n            }\n            return this.audioCtx;\n        },\n        sound: function(src, options) {\n            options = options || {};\n            var doc = options.document || buzz.defaults.document;\n            var pid = 0, events = [], eventsOnce = {}, supported = buzz.isSupported();\n            this.load = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.load();\n                return this;\n            };\n            this.play = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.play();\n                return this;\n            };\n            this.togglePlay = function() {\n                if (!supported) {\n                    return this;\n                }\n                if (this.sound.paused) {\n                    this.sound.play();\n                } else {\n                    this.sound.pause();\n                }\n                return this;\n            };\n            this.pause = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.pause();\n                return this;\n            };\n            this.isPaused = function() {\n                if (!supported) {\n                    return null;\n                }\n                return this.sound.paused;\n            };\n            this.stop = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.setTime(0);\n                this.sound.pause();\n                return this;\n            };\n            this.isEnded = function() {\n                if (!supported) {\n                    return null;\n                }\n                return this.sound.ended;\n            };\n            this.loop = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.loop = \"loop\";\n                this.bind(\"ended.buzzloop\", function() {\n                    this.currentTime = 0;\n                    this.play();\n                });\n                return this;\n            };\n            this.unloop = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.removeAttribute(\"loop\");\n                this.unbind(\"ended.buzzloop\");\n                return this;\n            };\n            this.mute = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.muted = true;\n                return this;\n            };\n            this.unmute = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.muted = false;\n                return this;\n            };\n            this.toggleMute = function() {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.muted = !this.sound.muted;\n                return this;\n            };\n            this.isMuted = function() {\n                if (!supported) {\n                    return null;\n                }\n                return this.sound.muted;\n            };\n            this.setVolume = function(volume) {\n                if (!supported) {\n                    return this;\n                }\n                if (volume < 0) {\n                    volume = 0;\n                }\n                if (volume > 100) {\n                    volume = 100;\n                }\n                this.volume = volume;\n                this.sound.volume = volume / 100;\n                return this;\n            };\n            this.getVolume = function() {\n                if (!supported) {\n                    return this;\n                }\n                return this.volume;\n            };\n            this.increaseVolume = function(value) {\n                return this.setVolume(this.volume + (value || 1));\n            };\n            this.decreaseVolume = function(value) {\n                return this.setVolume(this.volume - (value || 1));\n            };\n            this.setTime = function(time) {\n                if (!supported) {\n                    return this;\n                }\n                var set = true;\n                this.whenReady(function() {\n                    if (set === true) {\n                        set = false;\n                        this.sound.currentTime = time;\n                    }\n                });\n                return this;\n            };\n            this.getTime = function() {\n                if (!supported) {\n                    return null;\n                }\n                var time = Math.round(this.sound.currentTime * 100) / 100;\n                return isNaN(time) ? buzz.defaults.placeholder : time;\n            };\n            this.setPercent = function(percent) {\n                if (!supported) {\n                    return this;\n                }\n                return this.setTime(buzz.fromPercent(percent, this.sound.duration));\n            };\n            this.getPercent = function() {\n                if (!supported) {\n                    return null;\n                }\n                var percent = Math.round(buzz.toPercent(this.sound.currentTime, this.sound.duration));\n                return isNaN(percent) ? buzz.defaults.placeholder : percent;\n            };\n            this.setSpeed = function(duration) {\n                if (!supported) {\n                    return this;\n                }\n                this.sound.playbackRate = duration;\n                return this;\n            };\n            this.getSpeed = function() {\n                if (!supported) {\n                    return null;\n                }\n                return this.sound.playbackRate;\n            };\n            this.getDuration = function() {\n                if (!supported) {\n                    return null;\n                }\n                var duration = Math.round(this.sound.duration * 100) / 100;\n                return isNaN(duration) ? buzz.defaults.placeholder : duration;\n            };\n            this.getPlayed = function() {\n                if (!supported) {\n                    return null;\n                }\n                return timerangeToArray(this.sound.played);\n            };\n            this.getBuffered = function() {\n                if (!supported) {\n                    return null;\n                }\n                return timerangeToArray(this.sound.buffered);\n            };\n            this.getSeekable = function() {\n                if (!supported) {\n                    return null;\n                }\n                return timerangeToArray(this.sound.seekable);\n            };\n            this.getErrorCode = function() {\n                if (supported && this.sound.error) {\n                    return this.sound.error.code;\n                }\n                return 0;\n            };\n            this.getErrorMessage = function() {\n                if (!supported) {\n                    return null;\n                }\n                switch (this.getErrorCode()) {\n                  case 1:\n                    return \"MEDIA_ERR_ABORTED\";\n\n                  case 2:\n                    return \"MEDIA_ERR_NETWORK\";\n\n                  case 3:\n                    return \"MEDIA_ERR_DECODE\";\n\n                  case 4:\n                    return \"MEDIA_ERR_SRC_NOT_SUPPORTED\";\n\n                  default:\n                    return null;\n                }\n            };\n            this.getStateCode = function() {\n                if (!supported) {\n                    return null;\n                }\n                return this.sound.readyState;\n            };\n            this.getStateMessage = function() {\n                if (!supported) {\n                    return null;\n                }\n                switch (this.getStateCode()) {\n                  case 0:\n                    return \"HAVE_NOTHING\";\n\n                  case 1:\n                    return \"HAVE_METADATA\";\n\n                  case 2:\n                    return \"HAVE_CURRENT_DATA\";\n\n                  case 3:\n                    return \"HAVE_FUTURE_DATA\";\n\n                  case 4:\n                    return \"HAVE_ENOUGH_DATA\";\n\n                  default:\n                    return null;\n                }\n            };\n            this.getNetworkStateCode = function() {\n                if (!supported) {\n                    return null;\n                }\n                return this.sound.networkState;\n            };\n            this.getNetworkStateMessage = function() {\n                if (!supported) {\n                    return null;\n                }\n                switch (this.getNetworkStateCode()) {\n                  case 0:\n                    return \"NETWORK_EMPTY\";\n\n                  case 1:\n                    return \"NETWORK_IDLE\";\n\n                  case 2:\n                    return \"NETWORK_LOADING\";\n\n                  case 3:\n                    return \"NETWORK_NO_SOURCE\";\n\n                  default:\n                    return null;\n                }\n            };\n            this.set = function(key, value) {\n                if (!supported) {\n                    return this;\n                }\n                this.sound[key] = value;\n                return this;\n            };\n            this.get = function(key) {\n                if (!supported) {\n                    return null;\n                }\n                return key ? this.sound[key] : this.sound;\n            };\n            this.bind = function(types, func) {\n                if (!supported) {\n                    return this;\n                }\n                types = types.split(\" \");\n                var self = this, efunc = function(e) {\n                    func.call(self, e);\n                };\n                for (var t = 0; t < types.length; t++) {\n                    var type = types[t], idx = type;\n                    type = idx.split(\".\")[0];\n                    events.push({\n                        idx: idx,\n                        func: efunc\n                    });\n                    this.sound.addEventListener(type, efunc, true);\n                }\n                return this;\n            };\n            this.unbind = function(types) {\n                if (!supported) {\n                    return this;\n                }\n                types = types.split(\" \");\n                for (var t = 0; t < types.length; t++) {\n                    var idx = types[t], type = idx.split(\".\")[0];\n                    for (var i = 0; i < events.length; i++) {\n                        var namespace = events[i].idx.split(\".\");\n                        if (events[i].idx === idx || namespace[1] && namespace[1] === idx.replace(\".\", \"\")) {\n                            this.sound.removeEventListener(type, events[i].func, true);\n                            events.splice(i, 1);\n                        }\n                    }\n                }\n                return this;\n            };\n            this.bindOnce = function(type, func) {\n                if (!supported) {\n                    return this;\n                }\n                var self = this;\n                eventsOnce[pid++] = false;\n                this.bind(type + \".\" + pid, function() {\n                    if (!eventsOnce[pid]) {\n                        eventsOnce[pid] = true;\n                        func.call(self);\n                    }\n                    self.unbind(type + \".\" + pid);\n                });\n                return this;\n            };\n            this.trigger = function(types, detail) {\n                if (!supported) {\n                    return this;\n                }\n                types = types.split(\" \");\n                for (var t = 0; t < types.length; t++) {\n                    var idx = types[t];\n                    for (var i = 0; i < events.length; i++) {\n                        var eventType = events[i].idx.split(\".\");\n                        if (events[i].idx === idx || eventType[0] && eventType[0] === idx.replace(\".\", \"\")) {\n                            var evt = doc.createEvent(\"HTMLEvents\");\n                            evt.initEvent(eventType[0], false, true);\n                            evt.originalEvent = detail;\n                            this.sound.dispatchEvent(evt);\n                        }\n                    }\n                }\n                return this;\n            };\n            this.fadeTo = function(to, duration, callback) {\n                if (!supported) {\n                    return this;\n                }\n                if (duration instanceof Function) {\n                    callback = duration;\n                    duration = buzz.defaults.duration;\n                } else {\n                    duration = duration || buzz.defaults.duration;\n                }\n                var from = this.volume, delay = duration / Math.abs(from - to), self = this;\n                this.play();\n                function doFade() {\n                    setTimeout(function() {\n                        if (from < to && self.volume < to) {\n                            self.setVolume(self.volume += 1);\n                            doFade();\n                        } else if (from > to && self.volume > to) {\n                            self.setVolume(self.volume -= 1);\n                            doFade();\n                        } else if (callback instanceof Function) {\n                            callback.apply(self);\n                        }\n                    }, delay);\n                }\n                this.whenReady(function() {\n                    doFade();\n                });\n                return this;\n            };\n            this.fadeIn = function(duration, callback) {\n                if (!supported) {\n                    return this;\n                }\n                return this.setVolume(0).fadeTo(100, duration, callback);\n            };\n            this.fadeOut = function(duration, callback) {\n                if (!supported) {\n                    return this;\n                }\n                return this.fadeTo(0, duration, callback);\n            };\n            this.fadeWith = function(sound, duration) {\n                if (!supported) {\n                    return this;\n                }\n                this.fadeOut(duration, function() {\n                    this.stop();\n                });\n                sound.play().fadeIn(duration);\n                return this;\n            };\n            this.whenReady = function(func) {\n                if (!supported) {\n                    return null;\n                }\n                var self = this;\n                if (this.sound.readyState === 0) {\n                    this.bind(\"canplay.buzzwhenready\", function() {\n                        func.call(self);\n                    });\n                } else {\n                    func.call(self);\n                }\n            };\n            this.addSource = function(src) {\n                var self = this, source = doc.createElement(\"source\");\n                source.src = src;\n                if (buzz.types[getExt(src)]) {\n                    source.type = buzz.types[getExt(src)];\n                }\n                this.sound.appendChild(source);\n                source.addEventListener(\"error\", function(e) {\n                    self.trigger(\"sourceerror\", e);\n                });\n                return source;\n            };\n            function timerangeToArray(timeRange) {\n                var array = [], length = timeRange.length - 1;\n                for (var i = 0; i <= length; i++) {\n                    array.push({\n                        start: timeRange.start(i),\n                        end: timeRange.end(i)\n                    });\n                }\n                return array;\n            }\n            function getExt(filename) {\n                return filename.split(\".\").pop();\n            }\n            if (supported && src) {\n                for (var i in buzz.defaults) {\n                    if (buzz.defaults.hasOwnProperty(i)) {\n                        if (options[i] === undefined) {\n                            options[i] = buzz.defaults[i];\n                        }\n                    }\n                }\n                this.sound = doc.createElement(\"audio\");\n                if (options.webAudioApi) {\n                    var audioCtx = buzz.getAudioContext();\n                    if (audioCtx) {\n                        this.source = audioCtx.createMediaElementSource(this.sound);\n                        this.source.connect(audioCtx.destination);\n                    }\n                }\n                if (src instanceof Array) {\n                    for (var j in src) {\n                        if (src.hasOwnProperty(j)) {\n                            this.addSource(src[j]);\n                        }\n                    }\n                } else if (options.formats.length) {\n                    for (var k in options.formats) {\n                        if (options.formats.hasOwnProperty(k)) {\n                            this.addSource(src + \".\" + options.formats[k]);\n                        }\n                    }\n                } else {\n                    this.addSource(src);\n                }\n                if (options.loop) {\n                    this.loop();\n                }\n                if (options.autoplay) {\n                    this.sound.autoplay = \"autoplay\";\n                }\n                if (options.preload === true) {\n                    this.sound.preload = \"auto\";\n                } else if (options.preload === false) {\n                    this.sound.preload = \"none\";\n                } else {\n                    this.sound.preload = options.preload;\n                }\n                this.setVolume(options.volume);\n                buzz.sounds.push(this);\n            }\n        },\n        group: function(sounds) {\n            sounds = argsToArray(sounds, arguments);\n            this.getSounds = function() {\n                return sounds;\n            };\n            this.add = function(soundArray) {\n                soundArray = argsToArray(soundArray, arguments);\n                for (var a = 0; a < soundArray.length; a++) {\n                    sounds.push(soundArray[a]);\n                }\n            };\n            this.remove = function(soundArray) {\n                soundArray = argsToArray(soundArray, arguments);\n                for (var a = 0; a < soundArray.length; a++) {\n                    for (var i = 0; i < sounds.length; i++) {\n                        if (sounds[i] === soundArray[a]) {\n                            sounds.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            };\n            this.load = function() {\n                fn(\"load\");\n                return this;\n            };\n            this.play = function() {\n                fn(\"play\");\n                return this;\n            };\n            this.togglePlay = function() {\n                fn(\"togglePlay\");\n                return this;\n            };\n            this.pause = function(time) {\n                fn(\"pause\", time);\n                return this;\n            };\n            this.stop = function() {\n                fn(\"stop\");\n                return this;\n            };\n            this.mute = function() {\n                fn(\"mute\");\n                return this;\n            };\n            this.unmute = function() {\n                fn(\"unmute\");\n                return this;\n            };\n            this.toggleMute = function() {\n                fn(\"toggleMute\");\n                return this;\n            };\n            this.setVolume = function(volume) {\n                fn(\"setVolume\", volume);\n                return this;\n            };\n            this.increaseVolume = function(value) {\n                fn(\"increaseVolume\", value);\n                return this;\n            };\n            this.decreaseVolume = function(value) {\n                fn(\"decreaseVolume\", value);\n                return this;\n            };\n            this.loop = function() {\n                fn(\"loop\");\n                return this;\n            };\n            this.unloop = function() {\n                fn(\"unloop\");\n                return this;\n            };\n            this.setSpeed = function(speed) {\n                fn(\"setSpeed\", speed);\n                return this;\n            };\n            this.setTime = function(time) {\n                fn(\"setTime\", time);\n                return this;\n            };\n            this.set = function(key, value) {\n                fn(\"set\", key, value);\n                return this;\n            };\n            this.bind = function(type, func) {\n                fn(\"bind\", type, func);\n                return this;\n            };\n            this.unbind = function(type) {\n                fn(\"unbind\", type);\n                return this;\n            };\n            this.bindOnce = function(type, func) {\n                fn(\"bindOnce\", type, func);\n                return this;\n            };\n            this.trigger = function(type) {\n                fn(\"trigger\", type);\n                return this;\n            };\n            this.fade = function(from, to, duration, callback) {\n                fn(\"fade\", from, to, duration, callback);\n                return this;\n            };\n            this.fadeIn = function(duration, callback) {\n                fn(\"fadeIn\", duration, callback);\n                return this;\n            };\n            this.fadeOut = function(duration, callback) {\n                fn(\"fadeOut\", duration, callback);\n                return this;\n            };\n            function fn() {\n                var args = argsToArray(null, arguments), func = args.shift();\n                for (var i = 0; i < sounds.length; i++) {\n                    sounds[i][func].apply(sounds[i], args);\n                }\n            }\n            function argsToArray(array, args) {\n                return array instanceof Array ? array : Array.prototype.slice.call(args);\n            }\n        },\n        all: function() {\n            return new buzz.group(buzz.sounds);\n        },\n        isSupported: function() {\n            return !!buzz.el.canPlayType;\n        },\n        isOGGSupported: function() {\n            return !!buzz.el.canPlayType && buzz.el.canPlayType('audio/ogg; codecs=\"vorbis\"');\n        },\n        isWAVSupported: function() {\n            return !!buzz.el.canPlayType && buzz.el.canPlayType('audio/wav; codecs=\"1\"');\n        },\n        isMP3Supported: function() {\n            return !!buzz.el.canPlayType && buzz.el.canPlayType(\"audio/mpeg;\");\n        },\n        isAACSupported: function() {\n            return !!buzz.el.canPlayType && (buzz.el.canPlayType(\"audio/x-m4a;\") || buzz.el.canPlayType(\"audio/aac;\"));\n        },\n        toTimer: function(time, withHours) {\n            var h, m, s;\n            h = Math.floor(time / 3600);\n            h = isNaN(h) ? \"--\" : h >= 10 ? h : \"0\" + h;\n            m = withHours ? Math.floor(time / 60 % 60) : Math.floor(time / 60);\n            m = isNaN(m) ? \"--\" : m >= 10 ? m : \"0\" + m;\n            s = Math.floor(time % 60);\n            s = isNaN(s) ? \"--\" : s >= 10 ? s : \"0\" + s;\n            return withHours ? h + \":\" + m + \":\" + s : m + \":\" + s;\n        },\n        fromTimer: function(time) {\n            var splits = time.toString().split(\":\");\n            if (splits && splits.length === 3) {\n                time = parseInt(splits[0], 10) * 3600 + parseInt(splits[1], 10) * 60 + parseInt(splits[2], 10);\n            }\n            if (splits && splits.length === 2) {\n                time = parseInt(splits[0], 10) * 60 + parseInt(splits[1], 10);\n            }\n            return time;\n        },\n        toPercent: function(value, total, decimal) {\n            var r = Math.pow(10, decimal || 0);\n            return Math.round(value * 100 / total * r) / r;\n        },\n        fromPercent: function(percent, total, decimal) {\n            var r = Math.pow(10, decimal || 0);\n            return Math.round(total / 100 * percent * r) / r;\n        }\n    };\n    return buzz;\n});", "/**\r\n * A custom event emitter that will work in browsers or nodejs\r\n * Contains naming conventions from all standard formats\r\n */\r\nexport class EventEmitter {\r\n    #events = {};\r\n\r\n    public bind(type: string, listener: Function) {\r\n        if (!Array.isArray(this.#events[type]) || typeof this.#events[type] === 'undefined')\r\n            this.#events[type] = [];\r\n        this.#events[type].push(listener);\r\n    }\r\n\r\n    public on(type: string, listener: Function) {\r\n        this.bind(type, listener);\r\n    }\r\n\r\n    public addEventListener(type: string, listener: Function) {\r\n        this.bind(type, listener);\r\n    }\r\n\r\n    public fire(type, args?, caller?) {\r\n        if (!type || typeof type !== 'string')\r\n            throw new Error('Event missing.');\r\n        if (!Array.isArray(this.#events[type])) return;\r\n        if (!args || args === null || typeof args === 'undefined')\r\n            args = [];\r\n        else if (!Array.isArray(args))\r\n            args = [args];\r\n\r\n        caller = caller || this;\r\n        var events = this.#events[type];\r\n        for (var i = 0, len = events.length; i < len; i++)\r\n            events[i].apply(caller, args);\r\n    }\r\n\r\n    public emit(type, ...args) {\r\n        this.fire(type, args);\r\n    }\r\n\r\n    public dispatchEvent(type:string, args?, caller?) {\r\n        this.fire(type, args, caller);\r\n    }\r\n\r\n    public unbind(type, listener) {\r\n        if (!type || !listener) return;\r\n        if (!Array.isArray(this.#events[type])) return;\r\n        const events = this.#events[type];\r\n        for (let i = 0, len = events.length; i < len; i++) {\r\n            if (events[i] === listener) {\r\n                events.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public remove(type, listener) {\r\n        this.unbind(type, listener);\r\n    }\r\n\r\n    public off(type, listener) {\r\n        this.unbind(type, listener);\r\n    }\r\n\r\n    public removeListener(type, listener) {\r\n        this.unbind(type, listener);\r\n    }\r\n\r\n    public removeAllListeners(type?) {\r\n        if(!type) {\r\n            this.#events = [];\r\n            return;\r\n        }\r\n        if (!Array.isArray(this.#events[type])) return;\r\n        delete this.#events[type];\r\n    }\r\n\r\n    public listeners(type?) {\r\n        if(!type) return this.#events;\r\n        return this.#events[type] || [];\r\n    }\r\n}", "/**\n * @file Core functions and helpers\n *\n * @author William\n */\n//spell-checker:ignore Eisu, Junja, Hanja, Nonconvert, Modechange, printscreen, jisho, Masshou, Touroku, loya, roya\n//spell-checker:ignore Wsctrl, Cusel, Enlw, Backtab, Crsel, Exsel, Ereof rtrim ltrim Dropdown DBLUNDERLINE noflash\ndeclare global {\n    interface String {\n        trimLeft(): string;\n        trimRight(): string;\n        rtrim(): string;\n        addSlashes(): string;\n    }\n\n    interface Uint8Array {\n        charAt;\n        charCodeAt;\n    }\n\n    interface Object {\n        toType;\n    }\n}\n\n/**\n * Copyright (c) Mozilla Foundation http://www.mozilla.org/\n * This code is available under the terms of the MIT License\n */\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function (fun /*, thisp*/) {\n        var len = this.length >>> 0;\n        if (typeof fun != 'function') {\n            throw new TypeError();\n        } ``\n\n        var res = [];\n        var thisp = arguments[1];\n        for (var i = 0; i < len; i++) {\n            if (i in this) {\n                var val = this[i]; // in case fun mutates this\n                if (fun.call(thisp, val, i, this)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}\n\nexport function SortArrayByPriority(a, b) {\n    if (a.priority > b.priority)\n        return -1;\n    if (a.priority < b.priority)\n        return 1;\n    return 0;\n}\n\nexport function SortMapByPriority(a, b) {\n    if (a.priority > b.priority)\n        return -1;\n    if (a.priority < b.priority)\n        return 1;\n    if (a.index < b.index)\n        return -1;\n    if (a.index > b.index)\n        return 1;\n    return 0;\n}\n\nexport function SortItemArrayByPriority(list) {\n    const map = list.map((el, i) => {\n        return { index: i, priority: el.priority };\n    });\n    map.sort(SortMapByPriority);\n    return map.map((el) => {\n        return list[el.index];\n    });\n}\n\nexport function FilterArrayByKeyValue(array, k, v) {\n    const res = [];\n    if (!array || array.length === 0) return res;\n    const al = array.length;\n    for (let i = 0; i < al; i++) {\n        if (array[i]['enabled'] && array[i][k] === v)\n            res.push(array[i]);\n    }\n    if (res.length <= 1) return res;\n    return res.sort(SortArrayByPriority);\n}\n\nconst _edCache = document.createElement('div');\n\nexport function htmlEncode2(value) {\n    _edCache.textContent = value.replace(/ /g, '\\u00A0');\n    return _edCache.innerHTML;\n}\n\nexport function htmlDecode2(value) {\n    _edCache.innerHTML = value;\n    return _edCache.textContent.replace(/\\u00A0/g, ' ');\n}\n\nexport function htmlEncode(value) {\n    _edCache.textContent = value;\n    return _edCache.innerHTML;\n}\n\nexport function htmlDecode(value) {\n    _edCache.innerHTML = value;\n    return _edCache.textContent;\n}\n\nexport function htmlEntities(str) {\n    return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\nexport function stripHTML(html) {\n    _edCache.innerHTML = html;\n    return _edCache.textContent || _edCache.innerText || '';\n}\n\nexport function stripParentheses(str) {\n    return str.replace(/(^\\()|(\\)$)/g, '');\n}\n\nexport function stripQuotes(str) {\n    str = str.replace(/^\"(.+(?=\"$))?\"$/, '$1');\n    str = str.replace(/^'(.+(?='$))?'$/, '$1');\n    return str;\n}\n\nexport function offset(el) {\n    const box = el.getBoundingClientRect();\n    const docElem = document.documentElement;\n    return {\n        top: box.top + window.pageYOffset - docElem.clientTop,\n        left: box.left + window.pageXOffset - docElem.clientLeft\n    };\n}\n\nexport class StringBuffer {\n    public buffer: string[];\n    //public rawbuffer: string[];\n    public length: number = 0;\n    constructor(str?: string) {\n        if (typeof str == 'string' && str.length > 0)\n            this.buffer = [str];\n        else\n            this.buffer = [];\n        //this.rawbuffer = [];\n        this.length = 0;\n    }\n\n    public prepend(string) {\n        this.buffer.unshift(string);\n        //this.rawbuffer.unshift(string.charCodeAt(0));\n        this.length += string.length;\n        return this;\n    }\n\n    public append(string) {\n        this.buffer.push(string);\n        this.length += string.length;\n        //this.rawbuffer.push(string.charCodeAt(0));\n        return this;\n    }\n\n    public push(string) {\n        if (typeof string === 'number')\n            this.appendCode(string);\n        else\n            this.append(string);\n    }\n\n    public appendCode(b) {\n        this.buffer.push(String.fromCharCode(b));\n        //this.rawbuffer.push(b);\n        this.length++;\n        return this;\n    }\n\n    public toString() {\n        return this.buffer.join('');\n    }\n\n    public clear(str?) {\n        this.buffer = [];\n        //this.rawbuffer = [];\n        this.length = 0;\n        if (str && typeof str != 'undefined' && str.length) {\n            this.buffer.push(str);\n            this.length = str.length;\n        }\n        return this;\n    }\n\n    public concat(arr) {\n        this.buffer = this.buffer.concat(arr);\n        //this.rawbuffer.push(arr.charCodeAt(0));\n    }\n\n}\n\nexport function CharAllowedInURL(chr, proto) {\n    if (chr.length > 1)\n        return false;\n    if (\n        chr === '-' ||\n        chr === '_' ||\n        chr === '.' ||\n        chr === '~' ||\n        chr === '!' ||\n        chr === '*' ||\n        chr === '\\'' ||\n        chr === ';' ||\n        chr === ':' ||\n        chr === '@' ||\n        chr === '&' ||\n        chr === '=' ||\n        chr === '+' ||\n        chr === '$' ||\n        chr === ',' ||\n        chr === '/' ||\n        chr === '\\\\' ||\n        chr === '?' ||\n        chr === '%' ||\n        chr === '#' ||\n        chr === '[' ||\n        chr === ']' ||\n        chr === '(' ||\n        chr === ')'\n    )\n        return !proto;\n    const i = chr.charCodeAt(0);\n    if (i > 64 && i < 91)\n        return true;\n    if (i > 96 && i < 123)\n        return true;\n    if (i > 47 && i < 58)\n        return true;\n    if (i >= 160 && i <= 55295)\n        return true;\n    if (i >= 57344 && i <= 64975)\n        return true;\n    if (i >= 65008 && i <= 65533)\n        return true;\n    if (i >= 65536 && i <= 131069)\n        return true;\n    if (i >= 131072 && i <= 196605)\n        return true;\n    if (i >= 196608 && i <= 262141)\n        return true;\n    if (i >= 262144 && i <= 327677)\n        return true;\n    if (i >= 327680 && i <= 393213)\n        return true;\n    if (i >= 393216 && i <= 458749)\n        return true;\n    if (i >= 458752 && i <= 524285)\n        return true;\n    if (i >= 524288 && i <= 589821)\n        return true;\n    if (i >= 589824 && i <= 655357)\n        return true;\n    if (i >= 655360 && i <= 720893)\n        return true;\n    if (i >= 720896 && i <= 786429)\n        return true;\n    if (i >= 786432 && i <= 851965)\n        return true;\n    if (i >= 851968 && i <= 917501)\n        return true;\n    if (i >= 921600 && i <= 983037)\n        return true;\n    if (i >= 983040 && i <= 1048573)\n        return true;\n    if (i >= 1048576 && i <= 1114109)\n        return true;\n    return false;\n}\n\nexport let keyCodeToChar = {\n    3: 'Cancel',\n    6: 'Help',\n    8: 'Backspace',\n    9: 'Tab',\n    19: 'Pause/Break',\n    20: 'Caps Lock',\n    21: 'Kana',\n    22: 'Eisu',\n    23: 'Junja',\n    24: 'Final',\n    25: 'Hanja',\n    27: 'Esc',\n    28: 'Convert',\n    29: 'Nonconvert',\n    30: 'Accept',\n    31: 'Modechange',\n    32: 'Space',\n    33: 'Page Up',\n    34: 'Page Down',\n    35: 'End',\n    36: 'Home',\n    37: 'Left',\n    38: 'Up',\n    39: 'Right',\n    40: 'Down',\n    41: 'Select',\n    42: 'Print',\n    43: 'Execute',\n    44: 'Printscreen',\n    45: 'Insert',\n    46: 'Delete',\n    48: '0',\n    49: '1',\n    50: '2',\n    51: '3',\n    52: '4',\n    53: '5',\n    54: '6',\n    55: '7',\n    56: '8',\n    57: '9',\n    58: 'Colon',\n    59: 'Semicolon',\n    60: 'Less Than',\n    61: 'Equals2',\n    62: 'Greater Than',\n    63: 'Question Mark',\n    65: 'A',\n    66: 'B',\n    67: 'C',\n    68: 'D',\n    69: 'E',\n    70: 'F',\n    71: 'G',\n    72: 'H',\n    73: 'I',\n    74: 'J',\n    75: 'K',\n    76: 'L',\n    77: 'M',\n    78: 'N',\n    79: 'O',\n    80: 'P',\n    81: 'Q',\n    82: 'R',\n    83: 'S',\n    84: 'T',\n    85: 'U',\n    86: 'V',\n    87: 'W',\n    88: 'X',\n    89: 'Y',\n    90: 'Z',\n    93: 'Context Menu',\n    95: 'Sleep',\n    96: 'Numpad 0',\n    97: 'Numpad 1',\n    98: 'Numpad 2',\n    99: 'Numpad 3',\n    100: 'Numpad 4',\n    101: 'Numpad 5',\n    102: 'Numpad 6',\n    103: 'Numpad 7',\n    104: 'Numpad 8',\n    105: 'Numpad 9',\n    106: 'Numpad *',\n    107: 'Numpad +',\n    109: 'Numpad -',\n    110: 'Numpad .',\n    111: 'Numpad /',\n    112: 'F1',\n    113: 'F2',\n    114: 'F3',\n    115: 'F4',\n    116: 'F5',\n    117: 'F6',\n    118: 'F7',\n    119: 'F8',\n    120: 'F9',\n    121: 'F10',\n    122: 'F11',\n    123: 'F12',\n    124: 'F13',\n    125: 'F14',\n    126: 'F15',\n    127: 'F16',\n    128: 'F17',\n    129: 'F18',\n    130: 'F19',\n    131: 'F20',\n    132: 'F21',\n    133: 'F22',\n    134: 'F23',\n    135: 'F24',\n    144: 'Num Lock',\n    145: 'Scroll Lock',\n    146: 'Win Oem Fj Jisho',\n    147: 'Win Oem Fj Masshou',\n    148: 'Win Oem Fj Touroku',\n    149: 'Win Oem Fj Loya',\n    150: 'Win Oem Fj Roya',\n    160: 'Circumflex',\n    161: 'Exclamation',\n    162: 'Double Quote',\n    163: 'Hash',\n    164: 'Dollar',\n    165: 'Percent',\n    166: 'Ampersand',\n    167: 'Underscore',\n    168: 'Open Paren',\n    169: 'Close Paren',\n    170: 'Asterisk',\n    171: 'Plus',\n    172: 'Pipe',\n    173: 'Hyphen Minus',\n    174: 'Open Curly Bracket',\n    175: 'Close Curly Bracket',\n    176: 'Tilde',\n    181: 'Volume Mute',\n    182: 'Volume Down',\n    183: 'Volume Up',\n    186: ';',\n    187: 'Equals',\n    188: ',',\n    189: 'Minus',\n    190: '.',\n    191: '/',\n    192: '`',\n    219: '[',\n    220: '\\\\',\n    221: ']',\n    222: '\\'',\n    227: 'Win Ico Help',\n    228: 'Win Ico 00',\n    230: 'Win Ico Clear',\n    233: 'Win Oem Reset',\n    234: 'Win Oem Jump',\n    235: 'Win Oem Pa1',\n    236: 'Win Oem Pa2',\n    237: 'Win Oem Pa3',\n    238: 'Win Oem Wsctrl',\n    239: 'Win Oem Cusel',\n    240: 'Win Oem Attn',\n    241: 'Win Oem Finish',\n    242: 'Win Oem Copy',\n    243: 'Win Oem Auto',\n    244: 'Win Oem Enlw',\n    245: 'Win Oem Backtab',\n    246: 'Attn',\n    247: 'Crsel',\n    248: 'Exsel',\n    249: 'Ereof',\n    250: 'Play',\n    251: 'Zoom',\n    253: 'Pa1',\n    254: 'Win Oem Clear'\n};\n\nexport let keyCharToCode = {\n    Cancel: 3,\n    Help: 6,\n    Backspace: 8,\n    Tab: 9,\n    'Pause/Break': 19,\n    'Caps Lock': 20,\n    Esc: 27,\n    Space: 32,\n    'Page Up': 33,\n    'Page Down': 34,\n    End: 35,\n    Home: 36,\n    Left: 37,\n    Up: 38,\n    Right: 39,\n    Down: 40,\n    Insert: 45,\n    Delete: 46,\n    0: 48,\n    1: 49,\n    2: 50,\n    3: 51,\n    4: 52,\n    5: 53,\n    6: 54,\n    7: 55,\n    8: 56,\n    9: 57,\n    A: 65,\n    B: 66,\n    C: 67,\n    D: 68,\n    E: 69,\n    F: 70,\n    G: 71,\n    H: 72,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    M: 77,\n    N: 78,\n    O: 79,\n    P: 80,\n    Q: 81,\n    R: 82,\n    S: 83,\n    T: 84,\n    U: 85,\n    V: 86,\n    W: 87,\n    X: 88,\n    Y: 89,\n    Z: 90,\n    'Numpad 0': 96,\n    'Numpad 1': 97,\n    'Numpad 2': 98,\n    'Numpad 3': 99,\n    'Numpad 4': 100,\n    'Numpad 5': 101,\n    'Numpad 6': 102,\n    'Numpad 7': 103,\n    'Numpad 8': 104,\n    'Numpad 9': 105,\n    'Numpad *': 106,\n    'Numpad +': 107,\n    'Numpad -': 109,\n    'Numpad .': 110,\n    'Numpad /': 111,\n    F1: 112,\n    F2: 113,\n    F3: 114,\n    F4: 115,\n    F5: 116,\n    F6: 117,\n    F7: 118,\n    F8: 119,\n    F9: 120,\n    F10: 121,\n    F11: 122,\n    F12: 123,\n    'Num Lock': 144,\n    'Scroll Lock': 145,\n    ';': 186,\n    ',': 188,\n    '.': 190,\n    '/': 191,\n    '`': 192,\n    '[': 219,\n    '\\\\': 220,\n    ']': 221,\n    '\\'': 222,\n    Kana: 21,\n    Eisu: 22,\n    Junja: 23,\n    Final: 24,\n    Hanja: 25,\n    Convert: 28,\n    Nonconvert: 29,\n    Accept: 30,\n    Modechange: 31,\n    Select: 41,\n    Print: 42,\n    Execute: 43,\n    Printscreen: 44,\n    Colon: 58,\n    Semicolon: 59,\n    'Less Than': 60,\n    Equals2: 61,\n    'Greater Than': 62,\n    'Question Mark': 63,\n    'Context Menu': 93,\n    Sleep: 95,\n    F13: 124,\n    F14: 125,\n    F15: 126,\n    F16: 127,\n    F17: 128,\n    F18: 129,\n    F19: 130,\n    F20: 131,\n    F21: 132,\n    F22: 133,\n    F23: 134,\n    F24: 135,\n    'Win Oem Fj Jisho': 146,\n    'Win Oem Fj Masshou': 147,\n    'Win Oem Fj Touroku': 148,\n    'Win Oem Fj Loya': 149,\n    'Win Oem Fj Roya': 150,\n    Circumflex: 160,\n    Exclamation: 161,\n    'Double Quote': 162,\n    Hash: 163,\n    Dollar: 164,\n    Percent: 165,\n    Ampersand: 166,\n    Underscore: 167,\n    'Open Paren': 168,\n    'Close Paren': 169,\n    Asterisk: 170,\n    Plus: 171,\n    Pipe: 172,\n    'Hyphen Minus': 173,\n    'Open Curly Bracket': 174,\n    'Close Curly Bracket': 175,\n    Tilde: 176,\n    'Volume Mute': 181,\n    'Volume Down': 182,\n    'Volume Up': 183,\n    Equals: 187,\n    Minus: 189,\n    'Win Ico Help': 227,\n    'Win Ico 00': 228,\n    'Win Ico Clear': 230,\n    'Win Oem Reset': 233,\n    'Win Oem Jump': 234,\n    'Win Oem Pa1': 235,\n    'Win Oem Pa2': 236,\n    'Win Oem Pa3': 237,\n    'Win Oem Wsctrl': 238,\n    'Win Oem Cusel': 239,\n    'Win Oem Attn': 240,\n    'Win Oem Finish': 241,\n    'Win Oem Copy': 242,\n    'Win Oem Auto': 243,\n    'Win Oem Enlw': 244,\n    'Win Oem Backtab': 245,\n    Attn: 246,\n    Crsel: 247,\n    Exsel: 248,\n    Ereof: 249,\n    Play: 250,\n    Zoom: 251,\n    Pa1: 253,\n    'Win Oem Clear': 254\n\n};\n\n//var hasHorizontalScrollbar = div.scrollWidth > div.clientWidth;\n//var hasVerticalScrollbar = div.scrollHeight > div.clientHeight;\n(function ($) {\n    $.fn.hasHorizontalScrollBar = function () {\n        return $(this)[0].scrollWidth > $(this).innerWidth();\n    };\n})(jQuery);\n\nexport function clone(obj, replacer?) {\n    return JSON.parse(JSON.stringify(obj, replacer));\n}\n\nexport function cloneObject(obj) {\n    if (!obj) return obj;\n    const nObj = {};\n    let prop;\n    for (prop in obj) {\n        if (!obj.hasOwnProperty(prop)) continue;\n        if (obj[prop])\n            nObj[prop] = obj[prop];\n        else if (typeof obj[prop] === 'object')\n            nObj[prop] = cloneObject(obj[prop]);\n        else if (Array.isArray(obj[prop]))\n            nObj[prop] = cloneArray(obj[prop]);\n        else\n            nObj[prop] = obj[prop];\n    }\n    return nObj;\n}\n\nexport function cloneArray(arr) {\n    if (!arr || arr.length === 0) return new Array();\n    const nArr = new Array(arr.length);\n    let l = arr.length;\n    while (l--) {\n        if (typeof arr[l] === 'object')\n            nArr[l] = cloneObject(arr[l]);\n        else if (Array.isArray(arr[l]))\n            nArr[l] = cloneArray(arr[l]);\n        else\n            nArr[l] = cloneObject(arr[l]);\n    }\n    return nArr;\n}\n\nexport function copy(o) {\n    let output;\n    let v;\n    let key;\n    if (!o || (typeof o !== 'object' && !Array.isArray(o)))\n        return o;\n    output = Array.isArray(o) ? [] : {};\n    for (key in o) {\n        if (!o.hasOwnProperty(key)) continue;\n        v = o[key];\n        output[key] = (v && (typeof v === 'object' || Array.isArray(v))) ? copy(v) : v;\n    }\n    return output;\n}\n\nexport function setSelectionRange(input, selectionStart, selectionEnd) {\n    if (input.setSelectionRange) {\n        input.focus();\n        input.setSelectionRange(selectionStart, selectionEnd);\n    }\n    else if (input.createTextRange) {\n        const range = input.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', selectionEnd);\n        range.moveStart('character', selectionStart);\n        range.select();\n    }\n}\n\nexport function selectAll(input) {\n    if (!input || input.value.length === 0) return;\n    if (input.setSelectionRange) {\n        input.focus();\n        input.setSelectionRange(0, input.value.length);\n    }\n    else\n        input.select();\n}\n\nexport function getSelectionText() {\n    var text = \"\";\n    if (window.getSelection)\n        text = window.getSelection().toString();\n    return text;\n}\n\nCanvasRenderingContext2D.prototype.fillRoundedRect = function (this, x: number, y: number, w: number, h: number, r: number) {\n    this.beginPath();\n    this.moveTo(x + r, y);\n    this.lineTo(x + w - r, y);\n    this.quadraticCurveTo(x + w, y, x + w, y + r);\n    this.lineTo(x + w, y + h - r);\n    this.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    this.lineTo(x + r, y + h);\n    this.quadraticCurveTo(x, y + h, x, y + h - r);\n    this.lineTo(x, y + r);\n    this.quadraticCurveTo(x, y, x + r, y);\n    this.closePath();\n    this.fill();\n};\n\nCanvasRenderingContext2D.prototype.strokeRoundedRect = function (this, x: number, y: number, w: number, h: number, r: number) {\n    this.beginPath();\n    this.moveTo(x + r, y);\n    this.lineTo(x + w - r, y);\n    this.quadraticCurveTo(x + w, y, x + w, y + r);\n    this.lineTo(x + w, y + h - r);\n    this.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    this.lineTo(x + r, y + h);\n    this.quadraticCurveTo(x, y + h, x, y + h - r);\n    this.lineTo(x, y + r);\n    this.quadraticCurveTo(x, y, x + r, y);\n    this.closePath();\n    this.stroke();\n};\n\nif (!Object.keys) Object.keys = function (o) {\n    if (o !== Object(o))\n        throw new TypeError('Object.keys called on a non-object');\n    var k = [], p;\n    for (p in o) if (Object.prototype.hasOwnProperty.call(o, p)) k.push(p);\n    return k;\n};\n\nif (!Object.toType) Object.toType = function (obj) {\n    return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n};\n\nif (typeof String.prototype.startsWith != 'function') {\n    String.prototype.startsWith = function (str) {\n        return this.slice(0, str.length) == str;\n    };\n}\n\nif (typeof String.prototype.endsWith != 'function') {\n    String.prototype.endsWith = function (str) {\n        return this.slice(-str.length) == str;\n    };\n}\n\nif (typeof String.prototype.splice !== 'function') {\n    String.prototype.splice = function (this: string, idx: number, s: string, rem?: number) {\n        if (typeof rem === 'undefined') rem = 0;\n        return (this.slice(0, idx) + s + this.slice(idx + Math.abs(rem)));\n    };\n}\n\nif (typeof String.prototype.padStart !== 'function') {\n    String.prototype.padStart = function (this: string, paddingValue: (string | number)) {\n        if (typeof paddingValue === 'number')\n            paddingValue = ' '.repeat(paddingValue);\n        return String(paddingValue + this).slice(-paddingValue.length);\n    };\n}\n\nif (typeof String.prototype.padEnd !== 'function') {\n    String.prototype.padEnd = function (this: string, paddingValue: (string | number)) {\n        if (typeof paddingValue === 'number') {\n            if (paddingValue <= this.length) return this;\n            paddingValue = ' '.repeat(paddingValue - this.length);\n            return this + paddingValue;\n        }\n        if (paddingValue.length <= this.length) return this;\n        return this + paddingValue.slice(-this.length);\n    };\n}\n\nif (!String.prototype.replaceAll) {\n    String.prototype.replaceAll = function (str, newStr) {\n\n        // If a regex pattern\n        if (Object.prototype.toString.call(str).toLowerCase() === '[object regexp]') {\n            return this.replace(str, newStr);\n        }\n\n        // If a string\n        return this.replace(new RegExp(str, 'g'), newStr);\n    };\n}\n\n\nif (typeof Uint8Array.prototype.charAt != 'function') {\n    Uint8Array.prototype.charAt = function (this: Uint8Array, idx: number) {\n        return String.fromCharCode(this[idx]);\n    };\n}\n\nif (typeof Uint8Array.prototype.charCodeAt != 'function') {\n    Uint8Array.prototype.charCodeAt = function (this: Uint8Array, idx: number) {\n        return this[idx];\n    };\n}\n\nexport function addSlashes(string, all?) {\n    if (!string || !string.length) return string;\n    if (all)\n        return string.replace(/\\\\/g, '\\\\\\\\').\n            replace(/\\u0008/g, '\\\\b').\n            replace(/\\t/g, '\\\\t').\n            replace(/\\n/g, '\\\\n').\n            replace(/\\f/g, '\\\\f').\n            replace(/\\r/g, '\\\\r').\n            replace(/'/g, '\\\\\\'').\n            replace(/\"/g, '\\\\\"').\n            replace(/\\u0000/g, '\\\\0');\n    return string.replace(/\\\\/g, '\\\\\\\\').\n        replace(/'/g, '\\\\\\'').\n        replace(/\"/g, '\\\\\"');\n}\n\nString.prototype.addSlashes = function (this: string) {\n    //no need to do (str+'') anymore because 'this' can only be a string\n    return addSlashes(this);\n}\n\nString.prototype.splitQuote = function (this: string, sep: string, type?, escape?, escapeChar?) {\n    if (this.length === 0)\n        return [];\n    if (!sep || !sep.length)\n        return [this];\n    if (!type) type = 1 | 2;\n    if (!escape) escape = 1 | 2;\n    if (!escapeChar) escapeChar = '\\\\';\n    let quote: boolean = false;\n    let sQuote: boolean = false;\n    const str = [];\n    let pS = 0;\n    let s = 0;\n    let c: string;\n    let pC = '';\n    let sp;\n    const spl = sep.length;\n    let spC: string;\n    const tl = this.length;\n    for (; s < tl; s++) {\n        c = this.charAt(s);\n        if (c === '\"' && (type & 2) === 2) {\n            if ((escape & 2) === 2) {\n                if (s === 0 || pC !== escapeChar)\n                    quote = !quote;\n            }\n            else\n                quote = !quote;\n        }\n        else if (c === '\\'' && (type & 1) === 1) {\n            if ((escape & 1) === 1) {\n                if (s === 0 || pC !== escapeChar)\n                    sQuote = !sQuote;\n            }\n            else\n                sQuote = !sQuote;\n        }\n        else if (!quote && !sQuote) {\n            for (sp = 0; sp < spl; sp++) {\n                spC = sep.charAt(sp);\n                if (c === spC) {\n                    if (s > pS || s === 0) {\n                        str.push(this.substr(pS, s - pS));\n                        pS = s + 1;\n                        break;\n                    }\n                    else if (s === pS) {\n                        str.push('');\n                        pS = s + 1;\n                        break;\n                    }\n                    else if (s === tl - 1)\n                        str.push('');\n                }\n            }\n        }\n        pC = c;\n    }\n    if (s === tl && s === pS && sep.indexOf(pC) !== -1) {\n        str.push('');\n        pS = s + 1;\n    }\n    if (s > pS)\n        str.push(this.substr(pS, s - pS));\n    return str;\n};\n\nexport function getTimeSpan(i: number): string {\n    let al;\n    const tmp = [];\n\n    al = Math.floor(i / (1000 * 60 * 60 * 24));\n    i -= al * (1000 * 60 * 60 * 24);\n    if (al === 1) tmp.push(al + ' day');\n    else if (al > 0) tmp.push(al + ' days');\n\n    al = Math.floor(i / (1000 * 60 * 60));\n    i -= al * (1000 * 60 * 60);\n    if (al === 1) tmp.push(al + ' hour');\n    else if (al > 0) tmp.push(al + ' hours');\n\n    al = Math.floor(i / (1000 * 60));\n    i -= al * (1000 * 60);\n    if (al === 1) tmp.push(al + ' minute');\n    else if (al > 0) tmp.push(al + ' minutes');\n\n    al = Math.floor(i / (1000));\n    i -= al * (1000);\n    if (al === 1) tmp.push(al + ' second');\n    else if (al > 0) tmp.push(al + ' seconds');\n    if (tmp.length === 0)\n        tmp.push('0 seconds');\n    return tmp.join(', ');\n}\n\nexport function naturalCompare(a, b) {\n    const ax = [];\n    const bx = [];\n\n    a.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => { ax.push([$1 || Infinity, $2 || '']); });\n    b.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => { bx.push([$1 || Infinity, $2 || '']); });\n\n    while (ax.length && bx.length) {\n        const an = ax.shift();\n        const bn = bx.shift();\n        const nn = (an[0] - bn[0]) || an[1].localeCompare(bn[1]);\n        if (nn) return nn;\n    }\n\n    return ax.length - bx.length;\n}\n\nexport function getScrollBarWidth(el) {\n    if (!el) return 0;\n    const inner = document.createElement('p');\n    inner.style.width = '100%';\n    inner.style.height = '100%';\n    inner.style.position = 'absolute';\n    inner.style.top = '0px';\n    inner.style.left = '0px';\n    inner.style.visibility = 'hidden';\n\n    el.style.overflowY = 'hidden';\n    el.style.overflowX = 'hidden';\n\n    el.appendChild(inner);\n    const w1 = inner.offsetWidth;\n    el.style.overflowY = '';\n    el.style.overflowX = '';\n\n    let w2 = inner.offsetWidth;\n    if (w1 === w2) w2 = el.clientWidth;\n\n    el.removeChild(inner);\n\n    return (w1 - w2);\n}\n\nexport function getScrollBarHeight(el) {\n    if (!el) return 0;\n    const inner = document.createElement('p');\n    inner.style.width = '100%';\n    inner.style.height = '100%';\n    inner.style.position = 'absolute';\n    inner.style.top = '0px';\n    inner.style.left = '0px';\n    inner.style.visibility = 'hidden';\n\n    el.style.overflowY = 'hidden';\n    el.style.overflowX = 'hidden';\n\n    el.appendChild(inner);\n    const w1 = inner.offsetHeight;\n    el.style.overflowY = '';\n    el.style.overflowX = '';\n\n    let w2 = inner.offsetHeight;\n    if (w1 === w2) w2 = el.clientHeight;\n\n    el.removeChild(inner);\n\n    return (w1 - w2);\n}\n\nexport function getScrollBarSize(el) {\n    if (!el) return 0;\n    const inner = document.createElement('p');\n    inner.style.width = '100%';\n    inner.style.height = '100%';\n    inner.style.position = 'absolute';\n    inner.style.top = '0px';\n    inner.style.left = '0px';\n    inner.style.visibility = 'hidden';\n\n    el.style.overflowY = 'hidden';\n    el.style.overflowX = 'hidden';\n\n    el.appendChild(inner);\n\n    const w1 = inner.offsetWidth;\n    const h1 = inner.offsetHeight;\n\n    el.style.overflowY = '';\n    el.style.overflowX = '';\n\n    let w2 = inner.offsetWidth;\n    let h2 = inner.offsetHeight;\n    if (w1 === w2) w2 = el.clientWidth;\n    if (h1 === h2) h2 = el.clientHeight;\n\n    el.removeChild(inner);\n\n    return [(w1 - w2), (h1 - h2)];\n}\n\nexport function formatSize(size) {\n    if (size >= 1073741824)\n        return Math.round(size / 1073741824).toLocaleString() + ' GB';\n    else if (size >= 1048576)\n        return Math.round(size / 1048576).toLocaleString() + ' MB';\n    else if (size >= 1024)\n        return Math.round(size / 1024).toLocaleString() + ' KB';\n    return size.toLocaleString() + ' B';\n}\n\nexport function capitalize(s, first?) {\n    if (!s) return '';\n    s = s.split(' ');\n    let c;\n    let i;\n    let p;\n    const il = first ? 1 : s.length;\n    for (i = 0; i < il; i++) {\n        const pl = s[i].length;\n        for (p = 0; p < pl; p++) {\n            c = s[i].charAt(p);\n            if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\n                s[i] = s[i].substr(0, p) + c.toUpperCase() + s[i].substr(p + 1).toLowerCase();\n                break;\n            }\n        }\n    }\n    return s.join(' ');\n}\n\nexport function capitalizePinkfish(s) {\n    const p = string_parts(s);\n    if (p.length !== 3)\n        return capitalize(s, true);\n    return p[0] + capitalize(p[1], true) + p[2];\n}\n\nfunction is_color(str) {\n    if (!_colorCodes)\n        loadColors();\n    if (!str)\n        return false;\n    if (_colorCodes[str])\n        return true;\n    switch (str) {\n        case 'ITALIC':\n        case 'UNDERLINE':\n        case 'STRIKEOUT':\n        case 'DBLUNDERLINE':\n        case 'OVERLINE':\n        case 'FLASH':\n        case 'REVERSE':\n        case 'RESET':\n        case 'DEFAULT':\n        case 'BOLD':\n            return true;\n    }\n    return false;\n}\n\nfunction string_parts(str) {\n    let tmp;\n    let t2;\n    let ss;\n    let se;\n    let sm;\n    let s;\n    let e;\n    let c;\n    //more accurate then a regex even if slower in some cases\n    if (!str.length) return ['', '', ''];\n    tmp = str.split('%^');\n    c = tmp.length;\n    if (c === 1)\n        return ['', str, ''];\n\n    if (tmp[0].length === 0) {\n        for (s = 0; s < c; s++) {\n            t2 = tmp[s];\n            if (!t2.length) continue;\n            if (!is_color(t2)) {\n                s--;\n                break;\n            }\n        }\n    }\n    else\n        s--;\n    if (tmp[c - 1].length === 0) {\n        for (e = c - 1; e > s; e--) {\n            t2 = tmp[e];\n            if (!t2.length) continue;\n            if (!is_color(t2)) {\n                e++;\n                break;\n            }\n        }\n    }\n    else\n        e = c;\n    sm = tmp.slice(s + 1, e).join('%^');\n    if (!sm.length)\n        return [str, '', ''];\n    ss = tmp.slice(0, s + 1).join('%^');\n    se = tmp.slice(e).join('%^');\n    if (sm.length) {\n        if (ss.length)\n            ss += '%^';\n        if (se.length)\n            se = '%^' + se;\n    }\n    return [ss, sm, se];\n}\n\nexport function inverse(s) {\n    if (!s) return '';\n    s = s.split(' ');\n    let c;\n    let i;\n    let p;\n    const il = s.length;\n    for (i = 0; i < il; i++) {\n        const pl = s[i].length;\n        for (p = 0; p < pl; p++) {\n            c = s[i].charAt(p);\n            if (c >= 'A' && c <= 'Z')\n                s[i] = s[i].substr(0, p) + c.toLowerCase() + s[i].substr(p + 1);\n            else if (c >= 'a' && c <= 'z')\n                s[i] = s[i].substr(0, p) + c.toUpperCase() + s[i].substr(p + 1);\n        }\n    }\n    return s.join(' ');\n}\n\nexport function invert(obj) {\n    const new_obj = {};\n    let prop;\n    for (prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            new_obj[obj[prop]] = prop;\n        }\n    }\n    return new_obj;\n}\n\nexport function Cardinal(x) {\n    let str;\n    if (x === 0) return 'zero';\n    if (x < 0) {\n        str = 'negative ';\n        x = Math.abs(x);\n    }\n    else\n        str = '';\n    switch (x) {\n        case 1:\n            return str + 'one';\n        case 2:\n            return str + 'two';\n        case 3:\n            return str + 'three';\n        case 4:\n            return str + 'four';\n        case 5:\n            return str + 'five';\n        case 6:\n            return str + 'six';\n        case 7:\n            return str + 'seven';\n        case 8:\n            return str + 'eight';\n        case 9:\n            return str + 'nine';\n        case 10:\n            return str + 'ten';\n        case 11:\n            return str + 'eleven';\n        case 12:\n            return str + 'twelve';\n        case 13:\n            return str + 'thirteen';\n        case 14:\n            return str + 'fourteen';\n        case 15:\n            return str + 'fifteen';\n        case 16:\n            return str + 'sixteen';\n        case 17:\n            return str + 'seventeen';\n        case 18:\n            return str + 'eighteen';\n        case 19:\n            return str + 'nineteen';\n        case 20:\n            return str + 'twenty';\n        default:\n            if (x > 1000000000)\n                return 'over a billion';\n            else if (x / 1000000 > 0) {\n                if (x % 1000000 > 0)\n                    return +' million ' + Cardinal(x % 1000000);\n                return Cardinal((x / 1000000) >> 0) + ' million';\n            }\n            else if (x / 1000 > 0) {\n                if (x % 1000 > 0)\n                    return Cardinal((x / 1000) >> 0) + ' thousand ' + Cardinal(x % 1000);\n                return Cardinal((x / 1000) >> 0) + ' thousand';\n            }\n            else if (x / 100 > 0) {\n                if (x % 100 > 0)\n                    return Cardinal((x / 100) >> 0) + ' hundred' + Cardinal(x % 100);\n                return Cardinal((x / 100) >> 0) + ' hundred';\n            }\n            else {\n                if (x % 10 > 0)\n                    str = '-' + Cardinal(x % 10);\n                else\n                    str = '';\n                switch (x / 10) {\n                    case 2:\n                        return 'twenty' + str;\n                    case 3:\n                        return 'thirty' + str;\n                    case 4:\n                        return 'forty' + str;\n                    case 5:\n                        return 'fifty' + str;\n                    case 6:\n                        return 'sixty' + str;\n                    case 7:\n                        return 'seventy' + str;\n                    case 8:\n                        return 'eighty' + str;\n                    case 9:\n                        return 'ninety' + str;\n                    default:\n                        return 'error';\n                }\n            }\n    }\n}\n\nexport function wordwrap(str, maxWidth, newLineStr?) {\n    let done = false;\n    let res = '';\n    let found;\n    let i;\n    newLineStr = newLineStr || '\\n';\n    do {\n        found = false;\n        // Inserts new line at first whitespace of the line\n        for (i = maxWidth - 1; i >= 0; i--) {\n            if (testWhite(str.charAt(i))) {\n                res = res + [str.slice(0, i + 1), newLineStr].join('');\n                str = str.slice(i + 1);\n                found = true;\n                break;\n            }\n        }\n        // Inserts new line at maxWidth position, the word is too long to wrap\n        if (!found) {\n            res += [str.slice(0, maxWidth), newLineStr].join('');\n            str = str.slice(maxWidth);\n        }\n\n        if (str.length < maxWidth)\n            done = true;\n    } while (!done);\n    if (str.length > 0)\n        return res + str;\n    return res;\n}\n\nfunction testWhite(x) {\n    return /^\\s$/.test(x.charAt(0));\n}\n\nexport function splitQuoted(str, sep, t?, e?, ec?) {\n    if (typeof (t) === 'undefined') t = 1 | 2;\n    if (typeof (e) === 'undefined') e = 0;\n    if (typeof (ec) === 'undefined') ec = '\\\\';\n    if (!str || str.length === 0)\n        return [];\n    if (!sep || sep.length === 0)\n        return [str];\n    sep = sep.split('');\n    let q = false;\n    let sq = false;\n    const strings = [];\n    let ps = 0;\n    let s = 0;\n    const sl = str.length;\n    let c;\n    for (; s < sl; s++) {\n        c = str.charAt(s);\n        if (c === '\"' && (t & 2) === 2) {\n            if ((e & 2) === 2 && s > 0) {\n                if (s - 1 > 0 && str.charAt(s - 1) !== ec)\n                    q = !q;\n            }\n            else\n                q = !q;\n        }\n        else if (c === '\\'' && (t & 1) === 1) {\n            if ((e & 1) === 1 && s > 0) {\n                if (s - 1 > 0 && str.charAt(s - 1) !== ec)\n                    sq = !sq;\n            }\n            else\n                sq = !sq;\n        }\n        else if (!sq && !q) {\n            const spl = sep.length;\n            for (let sp = 0; sp < spl; sp++) {\n                if (c === sep[sp]) {\n                    if (s > ps || s === 0) {\n                        strings.push(str.substring(ps, s));\n                        ps = s + 1;\n                        break;\n                    }\n                    else if (s === ps) {\n                        strings.push('');\n                        ps = s + 1;\n                        break;\n                    }\n                    else if (s === (sl - 1))\n                        strings.push('');\n                }\n            }\n        }\n    }\n    if (s === sl && s === ps && sep.indexOf(str.charAt(s - 1)) > -1) {\n        strings.push('');\n        ps = s + 1;\n    }\n    if (s > ps)\n        strings.push(str.substring(ps, s));\n    return strings;\n}\n\nexport function leadingZeros(num, totalChars: number, padWith: string, trim?: boolean) {\n    num = num + '';\n    padWith = (padWith) ? padWith : '0';\n    if (num.length < totalChars) {\n        while (num.length < totalChars) {\n            num = padWith + num;\n        }\n    }\n    if (trim && num.length > totalChars) {\n        num = num.substring((num.length - totalChars), totalChars);\n    }\n    return num;\n}\n\nexport function resetCursor(txtElement) {\n    txtElement.scrollTop = 0;\n    txtElement.scrollLeft = 0;\n    if (typeof txtElement.selectionStart === 'number') {\n        txtElement.selectionStart = 0;\n        txtElement.selectionEnd = 0;\n    }\n    else if (txtElement.setSelectionRange) {\n        txtElement.focus();\n        txtElement.setSelectionRange(0, 0);\n        txtElement.focus();\n    } else if (txtElement.createTextRange) {\n        const range = txtElement.createTextRange();\n        range.moveStart('character', 0);\n        range.select();\n    }\n}\n\nexport function moveCursorToEnd(el) {\n    el.scrollTop = el.scrollHeight;\n    if (typeof el.selectionStart === 'number') {\n        el.selectionStart = el.selectionEnd = el.value.length;\n    } else if (typeof el.createTextRange !== 'undefined') {\n        el.focus();\n        const range = el.createTextRange();\n        range.collapse(false);\n        range.select();\n    }\n}\n\nexport function getCursor(el) {\n    if (!el) return 0;\n    if (typeof el.selectionStart === 'number') {\n        return el.selectionDirection == 'backward' ? el.selectionStart : el.selectionEnd;\n    } else if ((<any>document).selection) {\n        // Set focus on the element\n        el.focus();\n        // To get cursor position, get empty selection range\n        var oSel = (<any>document).selection.createRange();\n        // Move selection start to 0 position\n        oSel.moveStart('character', -el.value.length);\n        // The caret position is selection length\n        return oSel.text.length;\n    }\n    return 0;\n}\n\nexport function stringToEnum(str, en, ignoreCase?) {\n    if (!str || !en) return 0;\n    if (ignoreCase)\n        str = str.toUpperCase();\n    //split strip and trim spaces\n    str = str.split(',').map(v => v.trim());\n    //init value\n    let value = 0;\n    let sl = str.length;\n    //get the enum keys\n    const values = Object.keys(en).filter(key => !isNaN(Number(en[key])));\n    let test = values.slice(0);\n    //ignore case just make everything upper\n    if (ignoreCase)\n        test = test.map(v => v.toUpperCase());\n    //loop the strings\n    while (sl--) {\n        let vl = values.length;\n        //loop the enum to try and find the string value\n        while (vl--) {\n            //found value add it on\n            if (test[vl] === str[sl]) {\n                value |= en[values[vl].replace(/ /g, '_')];\n                break;\n            }\n        }\n    }\n    //return final value\n    return value;\n}\n\nexport function enumToString(value, en, exact?) {\n    let state;\n    const states = Object.keys(en).filter(key => !isNaN(Number(en[key])));\n    if (value === 0)\n        return en[0];\n    const f = [];\n    state = states.length;\n    while (state--) {\n        if (en[states[state]] === 0) continue;\n        if (exact) {\n            if (value === en[states[state]])\n                f.push(capitalize(states[state].replace(/_/g, ' ')));\n        }\n        else if ((value & en[states[state]]) === en[states[state]])\n            f.push(capitalize(states[state].replace(/_/g, ' ')));\n    }\n    return f.join(', ');\n}\n\n//https://j11y.io/snippets/wordwrap-for-javascript/\nexport function wordWrap(str, width, brk, cut) {\n    brk = brk || 'n';\n    width = width || 75;\n    cut = cut || false;\n    if (!str) return str;\n    const regex = '.{1,' + width + '}(\\s|$)' + (cut ? '|.{' + width + '}|.+$' : '|\\S+?(\\s|$)');\n    return str.match(RegExp(regex, 'g')).join(brk);\n}\n\nexport function wordBreak(str, start, length) {\n    if (length < 0) return 0;\n    let wBreak = length - 1;\n    if (start + wBreak >= str.length)\n        return str.length - start;\n    while (wBreak >= 0 && str.charAt(start + wBreak) !== ' ' && str.charAt(start + wBreak) !== '\\\\')\n        wBreak--;\n    if (wBreak <= 0)\n        return length;\n    wBreak++;\n    return wBreak;\n}\n\nexport function formatString(str, indent, width?, prefix?, postFix?, preIdent?) {\n    if (!str || str.length === 0) return '';\n    width = width || 66;\n    if (width < 40) width = 40;\n    if (typeof prefix !== 'string')\n        prefix = '\"';\n    if (typeof postFix !== 'string')\n        postFix = '\"';\n    preIdent = preIdent || '';\n    if (str.length <= width)\n        return prefix + str + postFix;\n    const list = [];\n    let wBreak = wordBreak(str, 0, width);\n    list.push(str.substr(0, wBreak));\n    let len = str.length - wBreak;\n    let tmp = wBreak; // set start of next line at window width\n    while (len / width > 0) { // while full lines loop\n        wBreak = wordBreak(str, tmp, width);\n        list.push(str.substr(tmp, wBreak));\n        tmp += wBreak; // move to next line\n        len -= wBreak; // remove line width\n    }\n    if (len > 0) // left over\n        list.push(str.substr(tmp, len));\n    return prefix + list.join(postFix + '\\n' + preIdent + ' '.repeat(indent) + prefix) + postFix;\n}\n\nexport function consolidate(amt, str) {\n    let y;\n    let l;\n    let e = '';\n    if (!amt || !str || amt < 2) return str;\n    if (str.endsWith(' ')) {\n        e = ' ';\n        str = str.trim();\n    }\n    str = str.split(' ');\n    if (str[0].toLowerCase() === 'a' || str[0].toLowerCase() === 'an' || str[0].toLowerCase() === 'the')\n        str.shift();\n    l = str.length;\n    y = str.indexOf('of');\n    if (y > 0)\n        str[y - 1] = pluralize(str[y - 1]);\n    else if (str[l - 1].endsWith(')')) {\n        y = l - 1;\n        while (y >= 0) {\n            if (str[y].startsWith('('))\n                break;\n            y--;\n        }\n        if (y - 1 >= 0)\n            str[y - 1] = pluralize(str[y - 1]);\n    }\n    else if (str[l - 1].match(/\\(.*\\)/)) {\n        if (l - 2 >= 0)\n            str[l - 2] = pluralize(str[l - 2]);\n    }\n    else\n        str[l - 1] = pluralize(str[l - 1]);\n    if (amt > 10)\n        return 'numerous ' + str.join(' ') + e;\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'][amt] + ' ' + str.join(' ') + e;\n}\n\n//spell-checker:disable\nexport function pluralize(revert) {\n    const plural = {\n        '(quiz)$': '$1zes',\n        '^(ox)$': '$1en',\n        '([m|l])ouse$': '$1ice',\n        '(matr|vert|ind)ix|ex$': '$1ices',\n        '(x|ch|ss|sh)$': '$1es',\n        '([^aeiouy]|qu)y$': '$1ies',\n        '(hive)$': '$1s',\n        '(?:([^f])fe|([lr])f)$': '$1$2ves',\n        '(shea|lea|loa|thie)f$': '$1ves',\n        sis$: 'ses',\n        '([ti])um$': '$1a',\n        '(tomat|potat|ech|her|vet)o$': '$1oes',\n        '(bu)s$': '$1ses',\n        '(alias)$': '$1es',\n        '(octop)us$': '$1i',\n        '(ax|test)is$': '$1es',\n        '(us)$': '$1es',\n        '([^s]+)$': '$1s'\n    };\n\n    const singular = {\n        '(quiz)zes$': '$1',\n        '(matr)ices$': '$1ix',\n        '(vert|ind)ices$': '$1ex',\n        '^(ox)en$': '$1',\n        '(alias)es$': '$1',\n        '(octop|vir)i$': '$1us',\n        '(cris|ax|test)es$': '$1is',\n        '(shoe)s$': '$1',\n        '(o)es$': '$1',\n        '(bus)es$': '$1',\n        '([m|l])ice$': '$1ouse',\n        '(x|ch|ss|sh)es$': '$1',\n        '(m)ovies$': '$1ovie',\n        '(s)eries$': '$1eries',\n        '([^aeiouy]|qu)ies$': '$1y',\n        '([lr])ves$': '$1f',\n        '(tive)s$': '$1',\n        '(hive)s$': '$1',\n        '(li|wi|kni)ves$': '$1fe',\n        '(shea|loa|lea|thie)ves$': '$1f',\n        '(^analy)ses$': '$1sis',\n        '((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$': '$1$2sis',\n        '([ti])a$': '$1um',\n        '(n)ews$': '$1ews',\n        '(h|bl)ouses$': '$1ouse',\n        '(corpse)s$': '$1',\n        '(us)es$': '$1',\n        s$: ''\n    };\n\n    const irregular = {\n        move: 'moves',\n        foot: 'feet',\n        goose: 'geese',\n        sex: 'sexes',\n        child: 'children',\n        man: 'men',\n        tooth: 'teeth',\n        person: 'people'\n    };\n\n    const uncountable = [\n        'sheep',\n        'fish',\n        'deer',\n        'moose',\n        'series',\n        'species',\n        'money',\n        'rice',\n        'information',\n        'equipment'\n    ];\n\n    // save some time in the case that singular and plural are the same\n    if (uncountable.indexOf(revert.toLowerCase()) >= 0)\n        return revert;\n    let word;\n    // check for irregular forms\n    for (word in irregular) {\n        if (!irregular.hasOwnProperty(word)) continue;\n        let pattern;\n        let replace;\n        if (revert) {\n            pattern = new RegExp(irregular[word] + '$', 'i');\n            replace = word;\n        } else {\n            pattern = new RegExp(word + '$', 'i');\n            replace = irregular[word];\n        }\n        if (pattern.test(revert))\n            return revert.replace(pattern, replace);\n    }\n    let array;\n    if (revert) array = singular;\n    else array = plural;\n    let reg;\n\n    // check for matches using regular expressions\n    for (reg in array) {\n        if (!array.hasOwnProperty(reg)) continue;\n        const pattern = new RegExp(reg, 'i');\n\n        if (pattern.test(revert))\n            return revert.replace(pattern, array[reg]);\n    }\n\n    return revert;\n}\n//spell-checker:enable\n\nexport function stripPinkfish(text) {\n    text = text || '';\n    text = text.split('%^');\n    const stack = [];\n    let t = 0;\n    const tl = text.length;\n    for (; t < tl; t++) {\n        if (text[t].startsWith('B_') && is_color(text[t].substr(2)))\n            continue;\n        else if (is_color(text[t]))\n            continue;\n        stack.push(text[t]);\n    }\n    return stack.join('');\n}\n\nlet _colorCodes;\nexport function pinkfishToHTML(text) {\n    text = text || '';\n    text = text.split('%^');\n    if (!_colorCodes)\n        loadColors();\n    const stack = [];\n    let codes = [];\n    let t = 0;\n    let tl = text.length;\n    let bold = false;\n    let boldNest = false;\n    let classes = [];\n    for (; t < tl; t++) {\n        switch (text[t]) {\n            case 'ITALIC':\n                stack.push('<em>');\n                codes.push('</em>');\n                break;\n            case 'UNDERLINE':\n                classes.push('underline');\n                break;\n            case 'STRIKEOUT':\n                classes.push('strikeout');\n                break;\n            case 'DBLUNDERLINE':\n                classes.push('dblunderline');\n                break;\n            case 'OVERLINE':\n                classes.push('overline');\n                break;\n            case 'FLASH':\n                classes.push('noflash');\n                break;\n            case 'REVERSE':\n                classes.push('reverse');\n                break;\n            case 'RESET':\n            case 'DEFAULT':\n                const cl = codes.length;\n                for (let c = 0; c < cl; c++)\n                    stack.push(codes[c]);\n                codes = [];\n                classes = [];\n                break;\n            case 'BOLD':\n                bold = true;\n                break;\n            case '':\n                break;\n            default:\n                if (text[t].startsWith('B_')) {\n                    text[t] = text[t].substr(2);\n                    if (bold) {\n                        stack.push('<span style=\"border: inherit;text-decoration:inherit;color: #' + _colorCodes['BOLD%^%^WHITE'] + '\">');\n                        codes.push('</span>');\n                    }\n                    stack.push('<span style=\"border: inherit;text-decoration:inherit;background-color: #' + _colorCodes[text[t]] + '\">');\n                    codes.push('</span>');\n                    bold = false;\n                    continue;\n                }\n                else if (_colorCodes[text[t]]) {\n                    if (bold && !_colorCodes['BOLD%^%^' + text[t]]) {\n                        stack.push('<span style=\"border: inherit;text-decoration:inherit;color: #' + _colorCodes['BOLD%^%^WHITE'] + '\">');\n                        codes.push('</span>');\n                        boldNest = true;\n                    }\n                    else if (bold) {\n                        stack.push('<span style=\"border: inherit;text-decoration:inherit;color: #' + _colorCodes['BOLD%^%^' + text[t]] + '\">');\n                        codes.push('</span>');\n                        boldNest = true;\n                        continue;\n                    }\n                    stack.push('<span style=\"border: inherit;text-decoration:inherit;color: #' + _colorCodes[text[t]] + '\">');\n                    codes.push('</span>');\n                    continue;\n                }\n                else if (bold && !boldNest) {\n                    stack.push('<span style=\"border: inherit;text-decoration:inherit;color: #' + _colorCodes['BOLD%^%^WHITE'] + '\">');\n                    codes.push('</span>');\n                }\n                if (classes.length) {\n                    stack.push('<span class=\"' + classes.join(' ') + '\">');\n                    codes.push('</span>');\n                    classes = [];\n                }\n                stack.push(text[t]);\n                bold = false;\n                boldNest = false;\n                break;\n        }\n    }\n    if (classes.length) {\n        stack.push('<span class=\"' + classes.join(' ') + '\">');\n        codes.push('</span>');\n    }\n    for (t = 0, tl = codes.length; t < tl; t++)\n        stack.push(codes[t]);\n    return stack.join('');\n}\n\nfunction loadColors() {\n    let c;\n    let color;\n    let r;\n    let g;\n    let b;\n    let idx;\n    _colorCodes = {};\n\n    _colorCodes['BLACK'] = '000000';\n    _colorCodes['RED'] = '800000';\n    _colorCodes['GREEN'] = '008000';\n    _colorCodes['ORANGE'] = '808000';\n    _colorCodes['BLUE'] = '0000EE';\n    _colorCodes['MAGENTA'] = '800080';\n    _colorCodes['CYAN'] = '008080';\n    _colorCodes['WHITE'] = 'BBBBBB';\n    _colorCodes['mono11'] = '808080';\n    _colorCodes['BOLD%^%^RED'] = 'FF0000';\n    _colorCodes['BOLD%^%^GREEN'] = '00FF00';\n    _colorCodes['YELLOW'] = 'FFFF00';\n    _colorCodes['BOLD%^%^YELLOW'] = 'FFFF00';\n    _colorCodes['BOLD%^%^BLUE'] = '5C5CFF';\n    _colorCodes['BOLD%^%^MAGENTA'] = 'FF00FF';\n    _colorCodes['BOLD%^%^CYAN'] = '00FFFF';\n    _colorCodes['BOLD%^%^WHITE'] = 'FFFFFF';\n    _colorCodes['BOLD%^%^BLACK'] = '808080';\n\n    for (r = 0; r < 6; r++) {\n        for (g = 0; g < 6; g++) {\n            for (b = 0; b < 6; b++) {\n                idx = `RGB${r}${g}${b}`;\n                color = '';\n                c = 0;\n                c = r * 40 + 55;\n                if (c < 16)\n                    color += '0';\n                color += c.toString(16);\n                c = 0;\n                c = g * 40 + 55;\n                if (c < 16)\n                    color += '0';\n                color += c.toString(16);\n                c = 0;\n                c = b * 40 + 55;\n                if (c < 16)\n                    color += '0';\n                color += c.toString(16);\n                if (!_colorCodes[idx])\n                    _colorCodes[idx] = color.toUpperCase();\n            }\n        }\n    }\n\n    for (r = 232; r <= 255; r++) {\n        g = (r - 232) * 10 + 8;\n        if (g < 16)\n            g = '0' + g.toString(16).toUpperCase();\n        else\n            g = g.toString(16).toUpperCase();\n        g = g + g + g;\n        if (r < 242)\n            _colorCodes['mono0' + (r - 232)] = g;\n        else\n            _colorCodes['mono' + (r - 232)] = g;\n    }\n}\n\nexport function getColors() {\n    const _ColorTable = [];\n    let r;\n    let g;\n    let b;\n    let idx;\n    for (r = 0; r < 6; r++) {\n        for (g = 0; g < 6; g++) {\n            for (b = 0; b < 6; b++) {\n                idx = 16 + (r * 36) + (g * 6) + b;\n                _ColorTable[idx] = 'rgb(';\n                if (r > 0)\n                    _ColorTable[idx] += r * 40 + 55;\n                else\n                    _ColorTable[idx] += '0';\n                _ColorTable[idx] += ',';\n                if (g > 0)\n                    _ColorTable[idx] += g * 40 + 55;\n                else\n                    _ColorTable[idx] += '0';\n                _ColorTable[idx] += ',';\n                if (b > 0)\n                    _ColorTable[idx] += b * 40 + 55;\n                else\n                    _ColorTable[idx] += '0';\n                _ColorTable[idx] += ')';\n            }\n        }\n    }\n    for (r = 232; r <= 255; r++) {\n        g = (r - 232) * 10 + 8;\n        _ColorTable[r] = ['rgb(', g, ',', g, ',', g, ')'].join('');\n    }\n    _ColorTable[0] = 'rgb(0,0,0)'; //black fore\n    _ColorTable[1] = 'rgb(128, 0, 0)'; //red fore\n    _ColorTable[2] = 'rgb(0, 128, 0)'; //green fore\n    _ColorTable[3] = 'rgb(128, 128, 0)'; //yellow fore\n    _ColorTable[4] = 'rgb(0, 0, 238)'; //blue fore\n    _ColorTable[5] = 'rgb(128, 0, 128)'; //magenta fore\n    _ColorTable[6] = 'rgb(0, 128, 128)'; //cyan fore\n    _ColorTable[7] = 'rgb(187, 187, 187)'; //white fore\n    _ColorTable[8] = 'rgb(128, 128, 128)'; //black  bold\n    _ColorTable[9] = 'rgb(255, 0, 0)'; //Red bold\n    _ColorTable[10] = 'rgb(0, 255, 0)'; //green bold\n    _ColorTable[11] = 'rgb(255, 255, 0)'; //yellow bold\n    _ColorTable[12] = 'rgb(92, 92, 255)'; //blue bold\n    _ColorTable[13] = 'rgb(255, 0, 255)'; //magenta bold\n    _ColorTable[14] = 'rgb(0, 255, 255)'; //cyan bold\n    _ColorTable[15] = 'rgb(255, 255, 255)'; //white bold\n    _ColorTable[256] = 'rgb(0, 0, 0)'; //black faint\n    _ColorTable[257] = 'rgb(118, 0, 0)'; //red  faint\n    _ColorTable[258] = 'rgb(0, 108, 0)'; //green faint\n    _ColorTable[259] = 'rgb(145, 136, 0)'; //yellow faint\n    _ColorTable[260] = 'rgb(0, 0, 167)'; //blue faint\n    _ColorTable[261] = 'rgb(108, 0, 108)'; //magenta faint\n    _ColorTable[262] = 'rgb(0, 108, 108)'; //cyan faint\n    _ColorTable[263] = 'rgb(161, 161, 161)'; //white faint\n    _ColorTable[264] = 'rgb(0, 0, 0)'; //BackgroundBlack\n    _ColorTable[265] = 'rgb(128, 0, 0)'; //red back\n    _ColorTable[266] = 'rgb(0, 128, 0)'; //greenback\n    _ColorTable[267] = 'rgb(128, 128, 0)'; //yellow back\n    _ColorTable[268] = 'rgb(0, 0, 238)'; //blue back\n    _ColorTable[269] = 'rgb(128, 0, 128)'; //magenta back\n    _ColorTable[270] = 'rgb(0, 128, 128)'; //cyan back\n    _ColorTable[271] = 'rgb(187, 187, 187)'; //white back\n    _ColorTable[272] = 'rgb(0,0,0)'; //InfoBackground\n    _ColorTable[273] = 'rgb(0, 255, 255)'; //InfoText\n    _ColorTable[274] = 'rgb(0,0,0)'; //LocalEchoBackground\n    _ColorTable[275] = 'rgb(255, 255, 0)'; //LocalEchoText\n    _ColorTable[276] = 'rgb(0, 0, 0)'; //DefaultBack\n    _ColorTable[277] = 'rgb(229, 229, 229)'; //DefaultFore\n    _ColorTable[278] = 'rgb(205, 0, 0)'; //ErrorFore\n    _ColorTable[279] = 'rgb(229, 229, 229)'; //ErrorBack\n    _ColorTable[280] = 'rgb(255,255,255)'; //DefaultBrightFore\n    return _ColorTable;\n}\n\nexport function formatUnit(str, ch?) {\n    if (!str) return str;\n    if (/^\\d+c$/.test(str)) {\n        if (ch)\n            return (parseInt(str, 10) * ch) + 'px';\n        return str + 'h';\n    }\n    if (/^\\d+$/.test(str))\n        return parseInt(str, 10) + 'px';\n    return str;\n}\n\nexport function replaceHtml(el, html) {\n    const oldEl = typeof el === 'string' ? document.getElementById(el) : el;\n    /*@cc_on // Pure innerHTML is slightly faster in IE\n        oldEl.innerHTML = html;\n        return oldEl;\n    @*/\n    const newEl = oldEl.cloneNode(false);\n    newEl.innerHTML = html;\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    /* Since we just removed the old element from the DOM, return a reference\n    to the new element, which can be used to restore variable references. */\n    return newEl;\n}\n\nexport function isValidIdentifier(str: string): boolean {\n    if (!str || str.length === 0) return false;\n    //valid character check\n    if (!str.match(/^[a-zA-Z_$][a-zA-Z_$0-9]*$/g))\n        return false;\n    //not a keyword\n    return ['break', 'case', 'catch', 'continue', 'debugger', 'default', 'delete', 'do', 'else', 'finally', 'for', 'function', 'if', 'in', 'instanceof', 'new', 'return', 'switch', 'this', 'throw', 'try', 'typeof', 'var', 'void', 'while', 'with', 'class', 'const', 'enum', 'export', 'extends', 'import', 'super', 'implements', 'interface', 'let', 'package', 'private', 'protected', 'public', 'static', 'yield', 'null', 'true', 'false', 'NaN', 'Infinity', 'undefined', 'eval', 'arguments'].indexOf(str) === -1;\n}\n\nexport function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function insertValue(input, value) {\n    if (!input) return;\n    const active = <HTMLElement>document.activeElement;\n    if (!active || active != input)\n        input.focus();\n    document.execCommand(\"insertText\", false, value);\n    if (active && active != input)\n        active.focus();\n}\n\n\nif (!Array.isArray) {\n    (<any>Array.isArray) = function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\n\nlet txtDecoder;\nexport function ArrayBufferToString(buffer) {\n    if (window.TextDecoder !== undefined) {\n        return (txtDecoder || (txtDecoder = new TextDecoder())).decode(new Uint8Array(buffer));\n    }\n    return BinaryToString(String.fromCharCode.apply(null, Array.prototype.slice.apply(new Uint8Array(buffer))));\n}\n\nexport function Uint8ArrayToString(buffer) {\n    if (window.TextDecoder !== undefined)\n        return (txtDecoder || (txtDecoder = new TextDecoder())).decode(buffer);\n    return BinaryToString(String.fromCharCode.apply(null, Array.prototype.slice.apply(buffer)));\n}\n\nexport function StringToArrayBuffer(string) {\n    return StringToUint8Array(string).buffer;\n}\n\nexport function BinaryToString(binary) {\n    var error;\n\n    try {\n        return decodeURIComponent(escape(binary));\n    } catch (_error) {\n        error = _error;\n        if (error instanceof URIError) {\n            return binary;\n        } else {\n            throw error;\n        }\n    }\n}\n\nexport function StringToBinary(string) {\n    var chars, code, i, isUCS2, len, _i;\n\n    len = string.length;\n    chars = [];\n    isUCS2 = false;\n    for (i = _i = 0; 0 <= len ? _i < len : _i > len; i = 0 <= len ? ++_i : --_i) {\n        code = String.prototype.charCodeAt.call(string, i);\n        if (code > 255) {\n            isUCS2 = true;\n            chars = null;\n            break;\n        } else {\n            chars.push(code);\n        }\n    }\n    if (isUCS2 === true) {\n        return unescape(encodeURIComponent(string));\n    } else {\n        return String.fromCharCode.apply(null, Array.prototype.slice.apply(chars));\n    }\n}\n\nlet txtEncoder;\nexport function StringToUint8Array(string) {\n    var binary, binLen, buffer, chars, i, _i;\n    if (window.TextEncoder !== undefined)\n        return (txtEncoder || (txtEncoder = new TextEncoder())).encode(string);\n    binary = StringToBinary(string);\n    binLen = binary.length;\n    buffer = new ArrayBuffer(binLen);\n    chars = new Uint8Array(buffer);\n    for (i = _i = 0; 0 <= binLen ? _i < binLen : _i > binLen; i = 0 <= binLen ? ++_i : --_i) {\n        chars[i] = String.prototype.charCodeAt.call(binary, i);\n    }\n    return chars;\n}\n\n//attempt to copy text to clipboard, may or may not always work depending on permissions and browser\nexport function copyText(text: string) {\n    return new Promise(function (resolve, reject) {\n        try {\n            if (typeof navigator !== \"undefined\" && typeof navigator.clipboard !== \"undefined\" && typeof navigator.permissions !== \"undefined\") {\n                var blob = new Blob([text], { type: \"text/plain\" });\n                var data = [new ClipboardItem({ \"text/plain\": blob })];\n                navigator.permissions.query({ name: \"clipboardWrite\" as PermissionName }).then(function (permission) {\n                    if (permission.state === \"granted\" || permission.state === \"prompt\") {\n                        navigator.clipboard.write(data).then(resolve, reject).catch(reject);\n                    }\n                    else {\n                        reject(new Error(\"Permission not granted!\"));\n                    }\n                });\n            }\n            else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\n                var textarea = document.createElement(\"textarea\");\n                textarea.value = text;\n                textarea.textContent = text;\n                textarea.style.position = \"fixed\";\n                textarea.style.width = '2em';\n                textarea.style.height = '2em';\n                textarea.style.padding = '0';\n                textarea.style.border = 'none';\n                textarea.style.outline = 'none';\n                textarea.style.boxShadow = 'none';\n                textarea.style.background = 'transparent';\n                document.body.appendChild(textarea);\n                textarea.focus();\n                textarea.select();\n                try {\n                    document.execCommand(\"copy\");\n                    document.body.removeChild(textarea);\n                    resolve(null);\n                }\n                catch (e) {\n                    document.body.removeChild(textarea);\n                    reject(e);\n                }\n            }\n            else {\n                reject(new Error(\"None of copying methods are supported by this browser!\"));\n            }\n        } catch (err) {\n            reject(err);\n        }\n    });\n}\n\nexport function pasteText() {\n    return new Promise<string>(function (resolve, reject) {\n        try {\n            if (typeof navigator !== \"undefined\" && typeof navigator.clipboard !== \"undefined\" && typeof navigator.permissions !== \"undefined\") {\n                navigator.permissions.query({ name: \"clipboardRead\" as PermissionName }).then(function (permission) {\n                    if (permission.state === \"granted\" || permission.state === \"prompt\") {\n                        navigator.clipboard.readText().then(resolve, reject).catch(reject);\n                    }\n                    else {\n                        reject(new Error(\"Permission not granted!\"));\n                    }\n                });\n            }\n            else if (document.queryCommandSupported && document.queryCommandSupported(\"paste\")) {\n                var textarea = document.createElement(\"textarea\");\n                textarea.style.position = \"fixed\";\n                textarea.style.width = '2em';\n                textarea.style.height = '2em';\n                textarea.style.padding = '0';\n                textarea.style.border = 'none';\n                textarea.style.outline = 'none';\n                textarea.style.boxShadow = 'none';\n                textarea.style.background = 'transparent';\n                document.body.appendChild(textarea);\n                textarea.focus();\n                textarea.select();\n                try {\n                    document.execCommand(\"paste\", false, null);\n                    resolve(textarea.value);\n                    document.body.removeChild(textarea);\n                }\n                catch (e) {\n                    document.body.removeChild(textarea);\n                    reject(e);\n                }\n            }\n            else {\n                reject(new Error(\"None of pasting methods are supported by this browser!\"));\n            }\n        } catch (err) {\n            reject(err);\n        }\n    });\n}\n\nexport function getParameterByName(name: string, url?: string): string {\n    if (!name) return null;\n    if (!url) url = window.location.href;\n    name = name.replace(/[[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nexport function fSaveAs() {\n    // Feature test: Does this browser support the download attribute on anchor tags? (currently only Chrome)\n    var DownloadAttributeSupport = 'download' in document.createElement('a');\n\n    // Use any available BlobBuilder/URL implementation:\n    var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    // IE 10 has a handy navigator.msSaveBlob method. Maybe other browsers will emulate that interface?\n    // See: http://msdn.microsoft.com/en-us/library/windows/apps/hh441122.aspx\n    navigator.saveBlob = navigator.saveBlob || navigator.msSaveBlob || navigator.mozSaveBlob || navigator.webkitSaveBlob;\n\n    // Anyway, HMTL5 defines a very similar but more powerful window.saveAs function:\n    // http://www.w3.org/TR/file-writer-api/#the-filesaver-interface\n    window.saveAs = window.saveAs || window.webkitSaveAs || window.mozSaveAs || window.msSaveAs;\n    // However, this is not supported by any browser yet. But there is a compatibility library that\n    // adds this function to browsers that support Blobs (except Internet Exlorer):\n    // http://eligrey.com/blog/post/saving-generated-files-on-the-client-side\n    // https://github.com/eligrey/FileSaver.js\n\n    // mime types that (potentially) don't trigger a download when opened in a browser:\n    var BrowserSupportedMimeTypes = {\n        'image/jpeg': true,\n        'image/png': true,\n        'image/gif': true,\n        'image/svg+xml': true,\n        'image/bmp': true,\n        'image/x-windows-bmp': true,\n        'image/webp': true,\n        'audio/wav': true,\n        'audio/mpeg': true,\n        'audio/webm': true,\n        'audio/ogg': true,\n        'video/mpeg': true,\n        'video/webm': true,\n        'video/ogg': true,\n        'text/plain': true,\n        'text/html': true,\n        'text/xml': true,\n        'application/xhtml+xml': true,\n        'application/json': true\n    };\n\n    // Blobs and saveAs (or saveBlob)\t:\n    if (BlobBuilder && (window.saveAs || navigator.saveBlob)) {\n        // Currently only IE 10 supports this, but I hope other browsers will also implement the saveAs/saveBlob method eventually.\n        this.show = function (data, name, mimetype) {\n            var builder = new BlobBuilder();\n            builder.append(data);\n            var blob = builder.getBlob(mimetype || 'application/octet-stream');\n            if (!name) name = 'Download.bin';\n            // I don't assign saveAs to navigator.saveBlob (or the other way around)\n            // because I cannot know at this point whether future implementations\n            // require these methods to be called with 'this' assigned to window (or\n            // naviagator) in order to work. E.g. console.log won't work when not called\n            // with this === console.\n            if (window.saveAs) {\n                window.saveAs(blob, name);\n            }\n            else {\n                navigator.saveBlob(blob, name);\n            }\n        };\n    }\n    // Blobs and object URLs:\n    else if (BlobBuilder && URL) {\n        // Currently WebKit and Gecko support BlobBuilder and object URLs.\n        this.show = function (data, name, mimetype) {\n            var blob, url, builder = new BlobBuilder();\n            builder.append(data);\n            if (!mimetype) mimetype = 'application/octet-stream';\n            if (DownloadAttributeSupport) {\n                blob = builder.getBlob(mimetype);\n                url = URL.createObjectURL(blob);\n                // Currently only Chrome (since 14-dot-something) supports the download attribute for anchor elements.\n                var link = document.createElement('a');\n                link.setAttribute('href', url);\n                link.setAttribute('download', name || 'Download.bin');\n                // Now I need to simulate a click on the link.\n                // IE 10 has the better msSaveBlob method and older IE versions do not support the BlobBuilder interface\n                // and object URLs, so we don't need the MS way to build an event object here.\n                var event = document.createEvent('MouseEvents');\n                event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n                link.dispatchEvent(event);\n            }\n            else {\n                // In other browsers I open a new window with the object URL.\n                // In order to trigger a download I have to use the generic binary data mime type\n                // \"application/octet-stream\" for mime types that browsers would display otherwise.\n                // Of course the browser won't show a nice file name here.\n                if (BrowserSupportedMimeTypes[mimetype.split(';')[0]] === true) {\n                    mimetype = 'application/octet-stream';\n                }\n\n                blob = builder.getBlob(mimetype);\n                url = URL.createObjectURL(blob);\n                window.open(url, '_blank', '');\n            }\n            // The timeout is probably not necessary, but just in case that some browser handle the click/window.open\n            // asynchronously I don't revoke the object URL immediately.\n            setTimeout(function () {\n                URL.revokeObjectURL(url);\n            }, 250);\n\n            // Using the filesystem API (http://www.w3.org/TR/file-system-api/) you could do something very similar.\n            // However, I think this is only supported by Chrome right now and it is much more complicated than this\n            // solution. And chrome supports the download attribute anyway.\n        };\n    }\n    else if (Blob && URL) {\n        this.show = function (data, name, mimetype) {\n            var blob, url;\n            if (!mimetype) mimetype = 'application/octet-stream';\n            blob = new Blob([data], { type: mimetype });\n            if (DownloadAttributeSupport) {\n                url = URL.createObjectURL(blob);\n                // Currently only Chrome (since 14-dot-something) supports the download attribute for anchor elements.\n                var link = document.createElement('a');\n                link.setAttribute('href', url);\n                link.setAttribute('download', name || 'Download.bin');\n                // Now I need to simulate a click on the link.\n                // IE 10 has the better msSaveBlob method and older IE versions do not support the BlobBuilder interface\n                // and object URLs, so we don't need the MS way to build an event object here.\n                var event = document.createEvent('MouseEvents');\n                event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n                link.dispatchEvent(event);\n            }\n            else {\n                // In other browsers I open a new window with the object URL.\n                // In order to trigger a download I have to use the generic binary data mime type\n                // \"application/octet-stream\" for mime types that browsers would display otherwise.\n                // Of course the browser won't show a nice file name here.\n                if (BrowserSupportedMimeTypes[mimetype.split(';')[0]] === true) {\n                    mimetype = 'application/octet-stream';\n                }\n                url = URL.createObjectURL(blob);\n                window.open(url, '_blank', '');\n            }\n            // The timeout is probably not necessary, but just in case that some browser handle the click/window.open\n            // asynchronously I don't revoke the object URL immediately.\n            setTimeout(function () {\n                URL.revokeObjectURL(url);\n            }, 250);\n\n            // Using the filesystem API (http://www.w3.org/TR/file-system-api/) you could do something very similar.\n            // However, I think this is only supported by Chrome right now and it is much more complicated than this\n            // solution. And chrome supports the download attribute anyway.\n        };\n    }\n    // data:-URLs:\n    else if (!/\\bMSIE\\b/.test(navigator.userAgent)) {\n        // IE does not support URLs longer than 2048 characters (actually bytes), so it is useless for data:-URLs.\n        // Also it seems not to support window.open in combination with data:-URLs at all.\n        this.show = function (data, name, mimetype) {\n            if (!mimetype) mimetype = 'application/octet-stream';\n            // Again I need to filter the mime type so a download is forced.\n            if (BrowserSupportedMimeTypes[mimetype.split(';')[0]] === true) {\n                mimetype = 'application/octet-stream';\n            }\n            // Note that encodeURIComponent produces UTF-8 encoded text. The mime type should contain\n            // the charset=UTF-8 parameter. In case you don't want the data to be encoded as UTF-8\n            // you could use escape(data) instead.\n            window.open('data:' + mimetype + ',' + encodeURIComponent(data), '_blank', '');\n        };\n    }\n    // Internet Explorer before version 10 does not support any of the methods above.\n    // If it is text data you could show it in an textarea and tell the user to copy it into a text file.\n}\n\nwindow.fileSaveAs = new fSaveAs();\n\n\nfunction utf8() {\n    var intc, i;\n\n    //http://siphon9.net/loune/2009/10/javascript-snippet-to-convert-raw-utf8-to-unicode/\n    function TryGetCharUTF8(b, count) {\n        var c = b.charCodeAt(i);\n        /*\n         * 10000000 80\n         * 11000000 C0\n         * 11100000 E0\n         * 11110000 F0\n         * 11111000 F8\n         * 11111100 FC\n         * \n         * FEFF = 65279 = BOM\n         * \n         * string musicalbassclef = \"\" + (char)0xD834 + (char)0xDD1E; 119070 0x1D11E\n         */\n        if ((c & 0x80) === 0)\n            intc = c;\n        else {\n            if ((c & 0xE0) == 0xC0) {\n                intc = ((c & 0x1F) << 6) | ((b.charCodeAt(i + 1) & 0x3F));\n                i += 1;\n            }\n            else if ((c & 0xF0) == 0xE0) {\n                // 3 bytes Covers the rest of the BMP\n                //if (i+2 >= count) return false;\n                intc = ((c & 0xF) << 12) | ((b.charCodeAt(i + 1) & 0x3F) << 6) | ((b.charCodeAt(i + 2) & 0x3F));\n                //alert(c + ' '+b.charCodeAt(i + 1) +' '+b.charCodeAt(i + 2));\n                i += 2;\n            }\n            else if ((c & 0xF8) == 0xF0) {\n                intc = ((c & 0x7) << 18) | ((b.charCodeAt(i + 1) & 0x3F) << 12) | ((b.charCodeAt(i + 2) & 0x3F) << 6) | ((b.charCodeAt(i + 3) & 0x3F));\n                i += 1;\n            }\n            else\n                return false;\n        }\n        return true;\n    }\n\n    this.decode = function (s) {\n        var ss = new StringBuffer();\n        var sl = s.length;\n        for (i = 0; i < sl; i++) {\n            if (TryGetCharUTF8(s, sl))\n                ss.appendCode(intc);\n        }\n        return ss.toString();\n    };\n\n    this.decode2 = function (s) {\n        var ss = new StringBuffer();\n        var sl = s.length;\n        var i, c;\n        for (i = 0; i < sl; i++) {\n            c = s.charCodeAt(i);\n            if ((c & 0x80) !== 0) {\n                if ((c & 0xE0) == 0xC0) {\n                    c = ((c & 0x1F) << 6) | ((s.charCodeAt(i + 1) & 0x3F));\n                    i += 1;\n                }\n                else if ((c & 0xF0) == 0xE0) {\n                    c = ((c & 0xF) << 12) | ((s.charCodeAt(i + 1) & 0x3F) << 6) | ((s.charCodeAt(i + 2) & 0x3F));\n                    i += 2;\n                }\n                else if ((c & 0xF8) == 0xF0) {\n                    c = ((c & 0x7) << 18) | ((s.charCodeAt(i + 1) & 0x3F) << 12) | ((s.charCodeAt(i + 2) & 0x3F) << 6) | ((s.charCodeAt(i + 3) & 0x3F));\n                    i += 1;\n                }\n                else\n                    continue;\n            }\n            ss.appendCode(c);\n        }\n        return ss.toString();\n    };\n\n}\n\nwindow.UTF8 = new utf8();\n\nexport function printArray(data) {\n    if (data === null || typeof data == 'undefined') return data;\n    var dl, ba;\n    var idx = 0;\n    dl = data.byteLength;\n    ba = new StringBuffer();\n    for (; idx < dl; idx++) {\n        if (data[idx] < 32 || data[idx] >= 127)\n            ba.append('<' + data[idx] + '>');\n        else\n            ba.append(String.fromCharCode(data[idx]));\n    }\n    //save newly escaped string\n    return ba.toString();\n}\n\nexport function getScrollbarWidth() {\n\n    // Creating invisible container\n    const outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll'; // forcing scrollbar to appear\n    (<any>outer.style).msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n    document.body.appendChild(outer);\n\n    // Creating inner element and placing it in the container\n    const inner = document.createElement('div');\n    outer.appendChild(inner);\n\n    // Calculating difference between container's full width and the child width\n    const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n\n    // Removing temporary elements from the DOM\n    outer.parentNode.removeChild(outer);\n\n    return scrollbarWidth;\n\n}\n\nexport function openFileDialog(title?: string, multiple?: boolean, accept?:string) {\n    return new Promise<FileList>((resolve, reject) => {\n        let dialog = document.createElement('dialog');\n        if (typeof dialog.showModal !== \"function\") {\n            reject(\"Browser does not support dialogs.\");\n            return;\n        }\n        dialog.id = 'openFileDialog';\n        dialog.style.zIndex = '2000';\n        dialog.style.height = '155px';\n        dialog.style.width = '350px';\n        dialog.innerHTML = `<div class=\"dialog-header\" style=\"font-weight: bold\"><button type=\"button\" class=\"btn btn-close float-end btn-danger\" data-dismiss=\"modal\" onclick=\"document.getElementById('openFileDialog').close();\"></button><div>${title || 'Open file...'}</div></div><div class=\"dialog-body\"><div class=\"m-3\"><input class=\"form-control\" type=\"file\" id=\"openFileDialog-files\"${multiple ? ' multiple' : ''} required${accept && accept.length ? (' accept=\"'+accept+'\"') :''}></div></div><div class=\"dialog-footer\"><button id=\"openFileDialog-cancel\" style=\"float: right\" type=\"button\" class=\"btn btn-default\" onclick=\"document.getElementById('openFileDialog').close();\">Cancel</button><button id=\"openFileDialog-ok\" style=\"float: right\" type=\"button\" class=\"btn btn-primary\">Ok</button></div>`;\n        document.body.appendChild(dialog);\n        //dialog.addEventListener('open', onOpen);\n        dialog.addEventListener('close', e => {\n            if (e.target !== dialog) return;\n            document.body.removeChild(dialog);\n            if (dialog.returnValue !== 'file-ok')\n                reject('closed');\n        });\n        dialog.addEventListener('cancel', e => {\n            if (e.target !== dialog) return;\n            document.body.removeChild(dialog);\n            if (dialog.returnValue !== 'file-ok')\n                reject('canceled');\n        });\n        document.getElementById('openFileDialog-ok').addEventListener('click', () => {\n            const input: HTMLInputElement = (<HTMLInputElement>document.getElementById('openFileDialog-files'));\n            if (!input.files || input.files.length === 0) {\n                input.classList.add('is-invalid')\n                return;\n            }\n            input.classList.remove('is-invalid');\n            dialog.close();\n            dialog.returnValue = 'files-ok';\n            resolve(input.files);\n        });\n        dialog.showModal();\n    });\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        if (!file) reject(new Error('Invalid file'));\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onload = evt => {\n            resolve(evt.target.result);\n        };\n        reader.readAsText(file);\n    });\n}\n\nconst _timers = {};\nexport function debounce(mainFunction, delay, key?) {\n    key = key || 'default';\n    // Clear the previous timer to prevent the execution of 'mainFunction'\n    clearTimeout(_timers[key]);\n    // Set a new timer that will execute 'mainFunction' after the specified delay\n    _timers[key] = setTimeout(() => {\n        mainFunction();\n        delete _timers[key];\n    }, delay);\n}", "// spell-checker:words TELOP, TERMINALTYPE, NEWENVIRON, Achaea, Webdings, ENDOFRECORD, USERVAR keepalive, DONT\nimport { EventEmitter } from './events';\nimport { StringBuffer, StringToUint8Array, ArrayBufferToString, printArray } from './library';\n\ndeclare global {\n    interface Window {\n        telnet: Telnet;\n    }\n}\n\ndeclare let UTF8;\nimport { Zlib } from './lib/inflate_stream.min.js';\n\nexport interface TelnetOption {\n    telnet: Telnet;\n    option: number;\n    verb: number;\n    value: string;\n    handled: boolean;\n}\n\nexport interface TelnetOptions {\n    MCCP: boolean;\n    MXP: boolean;\n    NAWS: boolean;\n    MSDP: boolean;\n    GMCP: boolean;\n    MSSP: boolean;\n    ECHO: boolean;\n    TTYPE: boolean;\n    EOR: boolean;\n    NEWENVIRON: boolean;\n    ZMP: boolean;\n    ATCP: boolean;\n    CHARSET: boolean;\n}\n\nexport interface TelnetOptionsServer {\n    MCCP1: boolean;\n    MCCP2: boolean;\n    MXP: boolean;\n    NAWS: boolean;\n    MSDP: boolean;\n    GMCP: boolean;\n    MSSP: boolean;\n    EOR: boolean;\n    NEWENVIRON: boolean;\n    ZMP: boolean;\n    ATCP: boolean;\n    CHARSET: boolean;\n}\n\n/**\n * A telnet base telnet object to create a connection to a host:port and handle\n * the base telnet protocol. In addition to the base protocol it also handles MCCP 1 & 2,\n * NAWS, MXP, GMCP, MSSP, CHARSET for UTF-8. To support MCCP it requires the module {@link module:src/lib/zlib-inflate}.\n *\n * @author Icewolfz\n * @copyright Icewolfz 2013\n * @class Telnet\n * @extends {EventEmitter}\n * @version 2.0\n * @requires module:src/lib/zlib-inflate\n * @namespace Telnet\n * @constructor\n * @param {Object} options\t\t\t\t- The options to start off with\n * @param {Object} options.host\t\t\t- The host to connect to\n * @param {Object} options.port\t\t\t- The port to connect to\n *\n * @todo add ZMP support\n * @todo add ENVIRON/NEWENVIRON exactly the same, but for var/value reversed, and there are rules to detect this so just treat ENVIRON as NEWENVIRON\n * @todo add ATCP support similar to GMCP\n * @todo add MSDP table/array support\n * @todo add MCP (Mud client protocol) - encodes protocol in text that is processed out and separates into an in bound (normal text), and out of bound (protocol data) see http://www.moo.mud.org/mcp/\n * @todo add CHARSET ttable support\n * \n * @property {Object}  options\t\t\t\t\t\t- The telnet options to enable or disable\n * @property {Boolean} [options.ECHO=1]\t\t\t\t- Enable/disable Echo (1)\n * @property {Boolean} [options.TTYPE=1]\t\t\t- Enable/disable Terminal Type - Does MTTS (http://tintin.sourceforge.net/mtts/) (TTYPE) (24)\n * @property {Boolean} [options.EOR=1]\t\t\t\t- Enable/disable End of record (EOR) (25/239)\n * @property {Boolean} [options.NAWS=1]\t\t\t\t- Enable/disable Negotiate About Window Size (NAWS) (31)\n * @property {Boolean} [options.NEWENVIRON=0]\t    - Enable/disable Environment Option (36/39)\n * @property {Boolean} [options.MSDP=1]\t\t\t\t- Enable/disable Mud Server Data Protocol (MSDP) (69)\n * @property {Boolean} [options.MSSP=0]\t\t\t\t- Enable/disable Mud Server Status Protocol (MSSP) (70)\n * @property {Boolean} [options.MCCP=1]\t\t\t\t- Enable/disable MUD Compression Protocol (MCCP) (85/86)\n * @property {Boolean} [options.MXP=1]\t\t\t\t- Enable/disable MUD eXtension Protocol  (MXP) (91)\n * @property {Boolean} [options.ZMP=0]\t\t\t\t- Enable/disable Zenith MUD Protocol (ZMP) (93)\n * @property {Boolean} [options.GMCP=1]\t\t\t\t- Enable/disable Generic Mud Communication Protocol/ATCP2 protocol (GMCP) (201)\n * @property {Boolean} [options.ATCP=0]\t\t\t\t- Enable/disable Achaea Telnet Client Protocol (ATCP) (200)\n * @property {Boolean} [options.CHARSET=1]\t\t    - Enable/disable CHARSET enabled, and which type, 1 is UTF-8\n * @property {Object}  server\t\t\t\t\t\t- The telnet options the server has enabled or disabled\n * @property {Boolean} [server.NAWS=0]\t\t\t\t- Is NAWS enabled\n * @property {Boolean} [server.MSDP=0]\t\t\t\t- Is MSDP enabled\n * @property {Boolean} [server.GMCP=0]\t\t\t\t- Is GMCP enabled\n * @property {Boolean} [server.MXP=0]\t\t\t\t- Is MXP enabled\n * @property {Boolean} [server.MCCP1=0]\t\t\t\t- Is MCCP1 enabled\n * @property {Boolean} [server.MCCP2=0]\t\t\t\t- Is MCCP2 enabled\n * @property {Boolean} [server.MSSP=0]\t\t\t\t- Is MSSP enabled\n * @property {Boolean} [server.NEWENVIRON=0]\t    - Is NEWENVIRON enabled\n * @property {Boolean} [server.ZMP=0]\t\t\t\t- Is ZMP enabled\n * @property {Boolean} [server.EOR=0]\t\t\t\t- Is EOR enabled\n * @property {Boolean} [server.ATCP=0]\t\t\t\t- Is ATCP enabled\n * @property {Boolean} [server.CHARSET=0]\t\t\t- Is CHARSET enabled, and which type, 1 is UTF-8\n * @property {String}  host\t\t\t\t\t\t\t- The host, may include ws://, wss://, http://, or https://, if not supplied uses set scheme\n * @property {Number}  port\t\t\t\t\t\t\t- The port, if set to < 1 it will use host only\n * @property {Boolean} [prompt=false]\t\t\t\t- The prompt state to determine if current end of line is a prompt or not\n * @property {Boolean} [echo=true]\t\t\t\t\t- The echo state to determine if you should echo text to the screen\n * @property {Boolean} [firstSent=true]\t\t\t\t- Weather anything has been sent yet, excluding telnet options\n * @property {Boolean} [firstReceived=true]\t\t    - Weather anything has been received yet, excluding telnet options\n * @property {String}  version\t\t\t\t\t\t- The version of the client to send for GMCP Core.Hello\n * @property {String}  [terminal=ansi]\t\t\t\t- The terminal type to send the first time for TTYPE\n * @property {Boolean} [UTF8=true]\t\t\t\t\t- Force process data after telnet options as UTF8 character\n * @property {Object}  [MSSP={}]\t\t\t\t\t- MSSP object that contains all variables and their assigned values.\n * @property {Object}  [socket=null]\t\t\t\t- The websocket object\n * @property {Number}  [latency=0]\t\t\t\t\t- The milliseconds between the last send and the current received data\n * @property {Boolean} [enableLatency=false]\t    - Attempt to calculate the latency between a send/receive, and if sent on receive send a GMCP ping back and attempt to get latency of a connection\n * @property {Number}  [latencyAvg=0]\t\t\t\t- The average milliseconds between the last send and the current received data\n * @property {Number}  [enablePing=false]\t\t\t- Enable GMCP ping back to better track latency\n * @property {Array}   GMCPSupports\t\t\t\t\t- An array of supported GMCP modules for mat of \"Modulate 0|1\", defaults are \"Core 1\", \"Char 1\", \"Char.Vitals 1\", \"Char.Experience 1\"\n * @property {string}  scheme                       - The websocket scheme to use, ws://, wss://, http://, or https:// must include the ://\n * @property {string}  protocol                     - The websocket protocol to use, defaults to binary\n */\nexport class Telnet extends EventEmitter {\n    private _splitBuffer: number[] = [];\n    private _connected: boolean = false;\n    private _MTTS: number = 0;\n    private zStream: any = 0;\n    private _latencyTime: Date = null;\n    private _doPing: boolean = false;\n    private _closed: boolean = true;\n    private _zlib: boolean = false;\n\n    public options: TelnetOptions = { MCCP: true, MXP: true, NAWS: true, MSDP: true, GMCP: true, MSSP: false, ECHO: true, TTYPE: true, EOR: true, NEWENVIRON: false, ZMP: false, ATCP: false, CHARSET: true };\n    public host: string = '';\n    public port: number = 23;\n    public prompt: boolean = false;\n    public echo: boolean = true;\n    public firstSent: boolean = true;\n    public firstReceived: boolean = true;\n    public server: TelnetOptionsServer = { NAWS: false, MSDP: false, GMCP: false, MXP: false, MCCP1: false, MCCP2: false, MSSP: false, NEWENVIRON: false, ZMP: false, EOR: false, ATCP: false, CHARSET: false };\n    public version: string = '2.0';\n    public terminal: string = 'ansi';\n    public UTF8: boolean = true;\n    public MSSP = {};\n    public socket: WebSocket = null;\n    public latency: number = 0;\n    public latencyAvg: number = null;\n    public enableLatency: boolean = false;\n    public enablePing: boolean = false;\n    public GMCPSupports: string[] = ['Core 1', 'Char 1', 'Char.Vitals 1', 'Char.Experience 1'];\n    public enableDebug: boolean = false;\n    public scheme: string = 'ws://';\n    public protocol: string = 'binary';\n\n    /**\n     * Creates an instance of Telnet.\n     *\n     * @param {any} options a list of options to set\n     *\n     * @memberOf Telnet\n     */\n    constructor(options?: TelnetOptions | any) {\n        super();\n        if (options) {\n            if ('host' in options) {\n                if (options.host && options.host.length)\n                    this.host = options.host;\n                delete options.host;\n            }\n            if ('port' in options) {\n                this.port = options.port;\n                delete options.port;\n            }\n            if ('scheme' in options) {\n                if (options.scheme && options.scheme.length)\n                    this.scheme = options.scheme;\n                delete options.scheme;\n            }\n            if ('protocol' in options) {\n                if (options.protocol && options.protocol.length)\n                    this.protocol = options.protocol;\n                delete options.protocol;\n            }\n        }\n        this.options = Object.assign(this.options, options || {});\n    }\n\n    /**\n     * @name connected\n     * @desc determine if connected to host\n     * @returns {Boolean} weather connected to host or not\n     *\n     * @readonly\n     *\n     * @memberOf Telnet\n     */\n    get connected(): boolean {\n        if (!this.socket || typeof this.socket === 'undefined')\n            return false;\n        return this._connected;\n    }\n\n    /**\n         * @name Telnet#reset\n         * @desc reset state in preparation for a connect\n         */\n    public reset() {\n        this._MTTS = 0;\n        this.firstSent = true;\n        this.firstReceived = true;\n        this.prompt = false;\n        this.echo = true;\n        this.server = { NAWS: false, MSDP: false, GMCP: false, MXP: false, MCCP1: false, MCCP2: false, MSSP: false, EOR: false, NEWENVIRON: false, ATCP: false, CHARSET: false, ZMP: false };\n        this._splitBuffer = [];\n        this._endMCCP();\n        this._connected = false;\n        this._closed = false;\n        if (this.enableDebug)\n            this.emit('debug', 'Reset');\n    }\n\n    /**\n     * @name connect\n     * @desc connect to target host\n     *\n     * @fires Telnet#connecting\n     */\n    public connect() {\n        this._destroySocket();\n        this.reset();\n        this.emit('connecting');\n        this.socket = this._createSocket(this.host, this.port);\n        if (this.enableDebug)\n            this.emit('debug', 'Connecting to ' + this.host + ':' + this.port);\n    }\n\n    /**\n     * @name Telnet#close\n     * @desc close the connection ot host and reset state in preparation for next connection\n     *\n     * @fires Telnet#close\n     */\n    public close() {\n        if (this._closed) return;\n        this._destroySocket();\n        this.reset();\n        this.emit('close');\n        this._closed = true;\n        if (this.enableDebug)\n            this.emit('debug', 'Closed');\n    }\n\n    /**\n     * @name Telnet#receivedData\n     * @desc data that is received from the host to be processed\n     *\n     * @param {String} data string received from host\n     * @fires Telnet#received-data\n     */\n    public receivedData(data: Uint8Array, skipDecompress?: boolean, prependSplit?: boolean) {\n        if (this.enableLatency) {\n            if (this._latencyTime !== null) {\n                this.latency = new Date().getTime() - this._latencyTime.getTime();\n                if (this.latencyAvg == null)\n                    this.latencyAvg = this.latency;\n                else\n                    this.latencyAvg = (this.latency + this.latencyAvg) / 2;\n                this._latencyTime = null;\n                this._doPing = false;\n                this.emit('latency-changed', this.latency, this.latencyAvg);\n            }\n            else if (!this._doPing && this.enablePing)\n                this._doPing = true;\n            else {\n                this._latencyTime = null;\n                this._doPing = false;\n            }\n        }\n        if (this.enableDebug)\n            this.emit('debug', 'PreProcess:' + data, 1);\n        data = this.processData(data, skipDecompress, false, prependSplit);\n        if (this.enableDebug)\n            this.emit('debug', 'PostProcess:' + data, 1);\n        this.emit('received-data', data);\n        if (this.enableLatency) {\n            //split packet more then likely so reset timer for next part\n            if (this._splitBuffer.length > 0) {\n                if (this.enablePing) this._doPing = true;\n                this._latencyTime = null;\n            }\n            //gmcp ping, send after process to have a more accurate time\n            else if (this._doPing && this.enablePing) {\n                setTimeout(() => {\n                    this._latencyTime = new Date();\n                    this.sendGMCP('Core.Ping ' + this.latencyAvg);\n                });\n            }\n            else\n                this._doPing = false;\n        }\n    }\n\n    /**\n     * @name Telnet#sendTerminal\n     * @desc Send terminal type telnet option to mud to identify the terminal\n     */\n    public sendTerminal() {\n        if (this.enableDebug) {\n            if (this._MTTS === 0)\n                this.emit('debug', 'REPLY: <IAC><SB><TERMINALTYPE><IS>' + this.terminal + '<IAC><SE>');\n            else if (this._MTTS === 1)\n                this.emit('debug', 'REPLY: <IAC><SB><TERMINALTYPE><IS>ANSI-256COLOR<IAC><SE>');\n            else if (this._MTTS >= 2)\n                this.emit('debug', 'REPLY: <IAC><SB><TERMINALTYPE><IS>MTTS 9<IAC><SE>');\n        }\n        if (this._MTTS === 0) {\n            var tmp = new Uint8Array(6 + this.terminal.length);\n            tmp.set([255, 250, 24, 0], 0);\n            tmp.set(StringToUint8Array(this.terminal), 4);\n            tmp.set([255, 240], 4 + this.terminal.length);\n            this.sendData(tmp, true);\n        }\n        else if (this._MTTS === 1)\n            this.sendData([255, 250, 24, 0, 65, 78, 83, 73, 45, 50, 53, 54, 67, 79, 76, 79, 82, 255, 240], true);\n        else if (this._MTTS >= 2)\n            this.sendData([255, 250, 24, 0, 77, 84, 84, 83, 32, 57, 255, 240], true);\n    }\n\n    /**\n     * @name Telnet#sendData\n     * @desc Send data to the host\n     *\n     * @param {String} data string to send\n     * @param {Boolean} raw send raw unescaped telnet data to host, other wise it will escape the IAC for proper telnet\n     * @fires Telnet#data-sent\n     */\n    public sendData(data: any, raw?: boolean) {\n        if (data == null || typeof data === 'undefined' || data.length === 0)\n            return;\n        if (this.connected) {\n            try {\n                if (!raw) {\n                    //goAhead ended\n                    this.prompt = false;\n                    //if not an option and need to ensure proper escaping of IAC\n                    data = this._escapeData(data);\n                    if (this.enableLatency) this._latencyTime = new Date();\n                }\n                if (this.socket !== null) {\n                    if (data instanceof Uint8Array) {\n                        if (this.enableDebug)\n                            this.emit('debug', 'sendDataU8:' + printArray(data));\n                        this.socket.send(data);\n                    }\n                    else if (Array.isArray(data)) {\n                        if (this.enableDebug)\n                            this.emit('debug', 'sendDataBA' + printArray(new Uint8Array(data)));\n                        this.socket.send(new Uint8Array(data));\n                    }\n                    else {\n                        if (this.enableDebug)\n                            this.emit('debug', 'sendDataR:' + printArray(StringToUint8Array(data)));\n                        this.socket.send(data);\n                    }\n                    if (!raw) this.firstSent = false;\n                }\n\n            }\n            catch (e) {\n                this.emit('error', e);\n            }\n        }\n        else if (this.enableLatency)\n            this._latencyTime = null;\n        this.emit('data-sent', data, raw);\n    }\n\n    /**\n     * @name Telnet#processData\n     * @desc Process raw incoming data\n     *\n     * @param {string} data The data to process\n     * @returns {string} The results of the processed data\n     * @fires Telnet#receive-option\n     * @fires Telnet#receive-MSDP\n     * @fires Telnet#receive-GMCP\n     * @fires Telnet#receive-MSSP\n     * @fires Telnet#receive-NEWENVIRON\n     * @fires Telnet#receive-CHARSET\n     */\n    //this.processData = function(data) { return data; };\n    public processData(data: Uint8Array, skipDecompress?: boolean, returnRaw?: boolean, prependSplit?: boolean) {\n        let len: number;\n        let tmp: (string | boolean | Uint8Array) = '';\n        let _sb;\n        if (data == null)\n            return data;\n        if (!skipDecompress)\n            data = this._decompressData(data);\n        len = data.byteLength;\n        if (len === 0)\n            return data;\n        _sb = this._splitBuffer;\n        if (_sb.length > 0) {\n            if (this.enableDebug) this.emit('debug', 'Split buffer length: ' + _sb.length, 1);\n            tmp = new Uint8Array(len + _sb.length);\n            if (prependSplit) {\n                tmp.set(data, 0);\n                tmp.set(_sb, data.byteLength);\n            }\n            else {\n                tmp.set(_sb, 0);\n                tmp.set(data, _sb.length);\n            }\n            data = tmp;\n            _sb = [];\n            len = data.byteLength;\n        }\n        let state: number = 0;\n        let pState: number = 0;\n        let processed: StringBuffer = new StringBuffer();\n\n        const ga: boolean = this.prompt;\n        let verb: number = 0;\n        let option: number = 0;\n        let msdp_val: string = '';\n        let msdp_var: string = '';\n        let _MSSP;\n        let i: number = 0;\n        let ne: number;\n        let idx: number = 0;\n        tmp = '';\n        //reset for new state\n        this.prompt = false;\n        let debugOp = '';\n        try {\n            for (; idx < len; idx++) {\n                i = data[idx];\n                switch (state) {\n                    case 0:\n                        // If the current byte is the \"Interpret as Command\" code, set the state to 1.\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp = 'TELOP: <IAC>';\n                            //store in case it is split;\n                            _sb.push(i);\n                            state = 1;\n                        }\n                        else if (this.UTF8 || (this.options.CHARSET && this.server.CHARSET)) {\n                            //If current byte has first bit on unicode\n                            if ((i & 0x80) === 0x80 && idx >= len - 4) {\n                                let uLen = 0;\n                                //Get byte count based on bits turned on\n                                if ((i & 0xC0) === 0xC0)\n                                    uLen = 1;\n                                else if ((i & 0xE0) === 0xE0)\n                                    uLen = 2;\n                                else if ((i & 0xF0) === 0xF0)\n                                    uLen = 3;\n                                //if idx + length larger then current length, good chance the unicode character is split so store and end process\n                                if (idx + uLen >= len) {\n                                    _sb.push(...data.slice(idx));\n                                    if (this.enableDebug) {\n                                        this.emit('debug', 'Unicode split length: ' + uLen, 1);\n                                        this.emit('debug', 'Split buffer length: ' + _sb.length, 1);\n                                    }\n                                    break;\n                                }\n                                /**\n                                 * https://stackoverflow.com/questions/22404493/is-there-a-drastic-difference-between-utf-8-and-utf-16/22404874\n                                    0xxxxxxx // 1 byte\n                                    110xxxxx 10xxxxxx //2 bytes  0xC0\n                                    1110xxxx 10xxxxxx 10xxxxxx //3 bytes 0xE0\n                                    11110xxx 10xxxxxx 10xxxxxx 10xxxxxx //4 bytes 0xF0\n                                 */\n                            }\n                            processed.appendCode(i);\n                        }\n                        else\n                            processed.appendCode(i);\n                        break;\n                    case 1: // Telnet Option\n                        if (i === 255) //escaped\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<IAC>');\n                                debugOp = '';\n                            }\n                            processed.appendCode(i);\n                            _sb = [];\n                            state = 0;\n                        }\n                        else if ((!this.options.EOR || !this.server.EOR) && i === 239) //EOR, if not enabled treat as NOP\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<NOP>');\n                                debugOp = '';\n                            }\n                            _sb = [];\n                            state = 0;\n                        }\n                        else if (i === 241 || i === 130) //no operation, just continue on\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<NOP>');\n                                debugOp = '';\n                            }\n                            _sb = [];\n                            state = 0;\n                        }\n                        else if (i === 249 || i === 239) //EOR | GA\n                        {\n                            if (this.enableDebug) {\n                                if (i === 239)\n                                    this.emit('debug', debugOp + '<EOR>');\n                                else\n                                    this.emit('debug', debugOp + '<GA>');\n                                debugOp = '';\n                            }\n                            //more data to read, so ga means nothing but a new line\n                            if (idx + 1 < len && len - idx > 2) {\n                                processed.push('\\n');\n                                this.prompt = false;\n                            }\n                            else\n                                this.prompt = true;\n                            _sb = [];\n                            state = 0;\n                        }\n                        else if (i === 253 || i === 254 || i === 251 || i === 252) //WILL DONT WONT DO\n                        {\n                            if (this.enableDebug) {\n                                switch (i) {\n                                    case 253: debugOp += '<DO>'; break;\n                                    case 254: debugOp += '<DONT>'; break;\n                                    case 251: debugOp += '<WILL>'; break;\n                                    case 252: debugOp += '<WONT>'; break;\n                                }\n                            }\n                            //store in case it is split;\n                            _sb.push(i);\n                            verb = i;\n                            state = 2;\n                        }\n                        else if (i === 250) // Sub negotiation\n                        {\n                            if (this.enableDebug) debugOp += '<SB>';\n                            _sb.push(i);\n                            state = 3;\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            _sb = [];\n                            state = 0;\n                        }\n                        break;\n                    case 2: //WILL DONT WONT DO response\n                        if (i === 1) // ECHO\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<ECHO>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                if (this.options.ECHO) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><ECHO>');\n                                    this.replyToOption(i, 251, verb);\n                                    this.echo = false;\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><ECHO>');\n                                    this.echo = true;\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><ECHO>');\n                                this.replyToOption(i, 252, verb);\n                                this.echo = true;\n                            }\n                            else if (verb === 251) {\n                                if (this.options.ECHO) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><ECHO>');\n                                    this.replyToOption(i, 253, verb);\n                                    this.echo = false;\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><ECHO>');\n                                    this.echo = true;\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><ECHO>');\n                                this.echo = true;\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 24) // TERMINALTYPE\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<TERMINALTYPE>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                if (this.options.TTYPE) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><TERMINALTYPE>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><TERMINALTYPE>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><TERMINALTYPE>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                if (this.options.TTYPE) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><TERMINALTYPE>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><TERMINALTYPE>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><TERMINALTYPE>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 25) // END OF RECORD\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<ENDOFRECORD>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.EOR = true;\n                                if (this.options.EOR) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><ENDOFRECORD>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><ENDOFRECORD>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><ENDOFRECORD>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.EOR = true;\n                                if (this.options.EOR) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><ENDOFRECORD>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><ENDOFRECORD>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><ENDOFRECORD>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 31) // NAWS\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<NAWS>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.NAWS = true;\n                                if (this.options.NAWS) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><NAWS>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><NAWS>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.NAWS = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><NAWS>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.NAWS = true;\n                                if (this.options.NAWS) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><NAWS>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><NAWS>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.NAWS = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><NAWS>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            this.emit('windowSize');\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 36 || i === 39) // NEWENVIRON\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<NEWENVIRON>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.NEWENVIRON = true;\n                                if (this.options.NEWENVIRON) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><NEWENVIRON>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><NEWENVIRON>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><NEWENVIRON>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.NEWENVIRON = true;\n                                if (this.options.NEWENVIRON) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><NEWENVIRON>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><NEWENVIRON>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><NEWENVIRON>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 69) // MSDP\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<MSDP>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.MSDP = true;\n                                if (this.options.MSDP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><MSDP>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MSDP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.MSDP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><MSDP>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.MSDP = true;\n                                if (this.options.MSDP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><MSDP>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MSDP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.MSDP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MSDP>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 70) // MSSP\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<MSSP>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.MSSP = true;\n                                if (this.options.MSSP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><MSSP>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MSSP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.MSSP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><MSSP>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.MSSP = true;\n                                if (this.options.MSSP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><MSSP>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MSSP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.MSSP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MSSP>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 85) // MCCP1\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<MCCP1>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.MCCP1 = true;\n                                if (this.options.MCCP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><MCCP1>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MCCP1>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.MCCP1 = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><MCCP1>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.MCCP1 = true;\n                                if (this.options.MCCP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><MCCP1>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MCCP1>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.MCCP1 = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MCCP1>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 86) // MCCP2\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<MCCP2>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.MCCP2 = true;\n                                if (this.options.MCCP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><MCCP2>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MCCP2>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.MCCP2 = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><MCCP2>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.MCCP2 = true;\n                                if (this.options.MCCP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><MCCP2>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MCCP2>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.MCCP2 = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MCCP2>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 91) // MXP\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<MXP>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.MXP = true;\n                                if (this.options.MXP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><MXP>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MXP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.MXP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><MXP>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.MXP = true;\n                                if (this.options.MXP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><MXP>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MXP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.MXP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><MXP>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 130 || i === 241) // NOP\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<NOP>');\n                                debugOp = '';\n                            }\n                            this._fireReceiveOption(i, verb, '');\n                            _sb = [];\n                            state = 0;\n                        }\n                        else if (i === 201) //GMCP\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<GMCP>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.GMCP = true;\n                                if (this.options.GMCP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><GMCP>');\n                                    this.replyToOption(i, 251, verb);\n                                    this._startGMCP();\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><GMCP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.GMCP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><GMCP>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.GMCP = true;\n                                if (this.options.GMCP) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><GMCP>');\n                                    this.replyToOption(i, 253, verb);\n                                    this._startGMCP();\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><GMCP>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.GMCP = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><GMCP>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 42) //CHARSET\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<CHARSET>');\n                                debugOp = '';\n                            }\n                            if (verb === 253) {\n                                this.server.CHARSET = true;\n                                if (this.options.CHARSET) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WILL><CHARSET>');\n                                    this.replyToOption(i, 251, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><CHARSET>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 254) {\n                                this.server.CHARSET = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><CHARSET>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            else if (verb === 251) {\n                                this.server.CHARSET = true;\n                                if (this.options.CHARSET) {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DO><CHARSET>');\n                                    this.replyToOption(i, 253, verb);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><CHARSET>');\n                                    this.replyToOption(i, 254, verb);\n                                }\n                            }\n                            else if (verb === 252) {\n                                this.server.CHARSET = false;\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><CHARSET>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else // Blindly reject the option.\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + this._formatByte(i));\n                                debugOp = '';\n                            }\n                            if (verb === 251 || verb === 252) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><DONT><' + i + '>');\n                                this.replyToOption(i, 254, verb);\n                            }\n                            else if (verb === 254 || verb === 253) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><WONT><' + i + '>');\n                                this.replyToOption(i, 252, verb);\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        break;\n                    case 3: // Sub negotiation\n                        option = i;\n                        if (i === 24) // TERMINALTYPE\n                        {\n                            if (this.enableDebug) debugOp += '<TERMINALTYPE>';\n                            _sb.push(i);\n                            option = i;\n                            state = 4;\n                        }\n                        else if (i === 36 || i === 39) // NEWENVIRON\n                        {\n                            if (this.enableDebug) debugOp += '<NEWENVIRON>';\n                            _sb.push(i);\n                            option = i;\n                            state = 12;\n                            ne = -1;\n                        }\n                        else if (i === 69) // MSDP\n                        {\n                            if (this.enableDebug) debugOp += '<MSDP>';\n                            _sb.push(i);\n                            option = i;\n                            state = 4;\n                        }\n                        else if (i === 70) // MSSP\n                        {\n                            if (this.enableDebug) debugOp += '<MSSP>';\n                            _sb.push(i);\n                            option = i;\n                            state = 8;\n                            _MSSP = {};\n                        }\n                        else if (i === 85 || i === 86) // MCCP1 & MCCP2\n                        {\n                            if (this.enableDebug) debugOp += i === 85 ? '<MCCP1>' : '<MCCP2>';\n                            _sb.push(i);\n                            option = i;\n                            state = 11;\n                        }\n                        else if (i === 201) {\n                            if (this.enableDebug) debugOp += '<GMCP>';\n                            _sb.push(i);\n                            option = i;\n                            state = 7;\n                        }\n                        //IAC SB MXP IAC SE - this tells the client that from now on we are sending MXP sequences.\n                        //http://www.mushclient.com/mushclient/addingservermxp.htm\n                        //Not sure what to reply once you receive this from a sever\n                        //else if(i === 91)\n                        //{\n                        //}\n                        else if (i === 240) // SE\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            tmp = ArrayBufferToString(_sb.slice(1, _sb.length - 4));\n                            this._fireReceiveOption(option, 250, tmp);\n                            tmp = null;\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 42) //CHARSET\n                        {\n                            if (this.enableDebug) debugOp += '<CHARSET>';\n                            _sb.push(i);\n                            option = i;\n                            state = 17;\n                            msdp_val = '';\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 4: //MSDP negotiation\n                        if (option === 24 && i === 1) // TERMINALTYPE SEND\n                        {\n                            if (this.enableDebug) debugOp += '<SEND>';\n                            _sb.push(i);\n                            verb = 1;\n                        }\n                        else if (i === 240) // SE\n                        {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            if (option === 24 && verb === 1) // TERMINALTYPE\n                            {\n                                tmp = false;\n                                this._fireReceiveOption(option, 250, '');\n                                if (!tmp) {\n                                    this.sendTerminal(); //sending it once doesn't seem to work, sending it a 2nd time seems to register it correctly\n                                    this.sendTerminal();\n                                    this._MTTS++;\n                                }\n                            }\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (option === 69 && i === 1) // MSDP\n                        {\n                            if (this.enableDebug) debugOp += '<MSDP_VAR>';\n                            _sb.push(i);\n                            msdp_var = '';\n                            state = 5;\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 5: // MSDP Variable\n                        if (i === 2) {\n                            if (this.enableDebug) debugOp += '<MSDP_VAL>';\n                            _sb.push(i);\n                            msdp_val = '';\n                            state = 6;\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_var += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 6: // MSDP Value\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 1) {\n                            if (this.enableDebug) debugOp += '<MSDP_VAR>';\n                            this._fireReceiveMSDP(msdp_var, msdp_val);\n                            msdp_val = '';\n                            msdp_var = '';\n                            _sb.push(i);\n                            state = 5;\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            tmp = ArrayBufferToString(_sb.slice(1, _sb.length - 4));\n                            this._fireReceiveOption(option, 250, tmp);\n                            tmp = null;\n                            this._fireReceiveMSDP(msdp_var, msdp_val);\n                            msdp_val = '';\n                            msdp_var = '';\n                            state = 0;\n                            _sb = [];\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_val += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 7: // GMCP Sub Sub negotiation\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            tmp = ArrayBufferToString(_sb.slice(1, _sb.length - 4));\n                            this._fireReceiveOption(option, 250, tmp);\n                            tmp = null;\n                            this._fireReceiveGMCP(msdp_val);\n                            state = 0;\n                            msdp_val = '';\n                            _sb = [];\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_val += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 8: // MSSP Sub negotiation\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                this.emit('debug', this.MSSP);\n                                debugOp = '';\n                            }\n                            tmp = ArrayBufferToString(_sb.slice(1, _sb.length - 4));\n                            this._fireReceiveOption(option, 250, tmp);\n                            tmp = null;\n                            this.emit('receive-MSSP', _MSSP);\n                            msdp_val = '';\n                            msdp_var = '';\n                            _MSSP = 0;\n                            state = 0;\n                            _sb = [];\n                        }\n                        else if (i === 1) {\n                            if (this.enableDebug) debugOp += '<MSSP_VAR>';\n                            _sb.push(i);\n                            msdp_var = '';\n                            state = 9;\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 9: // MSSP Variable\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                            state = 8;\n                        }\n                        else if (i === 1) {\n                            if (this.enableDebug) debugOp += '<MSSP_VAR>';\n                            _sb.push(i);\n                            msdp_var = '';\n                        }\n                        else if (i === 2) {\n                            if (this.enableDebug) debugOp += '<MSSP_VAL>';\n                            _sb.push(i);\n                            this.MSSP[msdp_var] = '';\n                            _MSSP[msdp_var] = '';\n                            state = 10;\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_var += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 10: // MSSP Value\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                            state = 8;\n                        }\n                        else if (i === 1) {\n                            if (this.enableDebug) debugOp += '<MSSP_VAR>';\n                            _sb.push(i);\n                            msdp_var = '';\n                            state = 9;\n                        }\n                        else if (i === 2) {\n                            if (this.enableDebug) debugOp += '<MSSP_VAL>';\n                            _sb.push(i);\n                            this.MSSP[msdp_var] = '';\n                            _MSSP[msdp_var] = '';\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            this.MSSP[msdp_var] += String.fromCharCode(i);\n                            _MSSP[msdp_var] += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 11: // MCCP Sub negotiation\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            this._fireReceiveOption(option, 86, '');\n                            this._startMCCP();\n                            state = 0;\n                            _sb = [];\n                            if (idx < len - 1)\n                                processed.append(this.processData(data.subarray(idx + 1), skipDecompress, true));\n                            idx = len;\n                        }\n                        break;\n                    case 12: // NEWENVIRON Sub sub negotiation\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            tmp = ArrayBufferToString(_sb.slice(1, _sb.length - 4));\n                            this._fireReceiveOption(option, 250, tmp);\n                            tmp = null;\n                            this._fireReceiveGMCP(msdp_val);\n                            state = 0;\n                            msdp_val = '';\n                            _sb = [];\n                        }\n                        else if (i === 0) // IS\n                        {\n                            if (this.enableDebug) debugOp += '<IS>';\n                            _sb.push(i);\n                            state = 13;\n                            verb = i;\n                        }\n                        else if (i === 1) // SEND\n                        {\n                            if (this.enableDebug) debugOp += '<SEND>';\n                            _sb.push(i);\n                            state = 13;\n                            verb = i;\n                        }\n                        else if (i === 2) // INFO\n                        {\n                            if (this.enableDebug) debugOp += '<SEND>';\n                            _sb.push(i);\n                            state = 13;\n                            verb = i;\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_val += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 13: // NEWENVIRON\n                        if (i === 0) //var\n                        {\n                            if (this.enableDebug) debugOp += '<VAR>';\n                            _sb.push(i);\n                            state = 14;\n                            verb = i;\n                            msdp_var = '';\n                            if (ne === -1) ne = 0;\n                        }\n                        else if (i === 1) //value\n                        {\n                            if (this.enableDebug) debugOp += '<VALUE>';\n                            _sb.push(i);\n                            state = 13;\n                            verb = i;\n                            if (ne === -1) ne = 1;\n                        }\n                        else if (i === 3) //user var\n                        {\n                            if (this.enableDebug) debugOp += '<USERVAR>';\n                            _sb.push(i);\n                            state = 13;\n                            verb = i;\n                        }\n                        else if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            tmp = ArrayBufferToString(_sb.slice(1, _sb.length - 4));\n                            tmp = this._fireReceiveOption(option, 250, tmp);\n                            this.emit('receive-NEWENVIRON', msdp_val);\n                            //custom handled so don't do defaults\n                            if (!tmp) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><SB><NEWENVIRON><IS><IAC><SE>');\n                                this.sendData(new Uint8Array([255, 250]), true);\n                                this.sendData(option, true);\n                                this.sendData(new Uint8Array([0, 255, 240]), true);\n                            }\n                            state = 0;\n                            msdp_val = '';\n                            _sb = [];\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_val += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 14:  // NEWENVIRON Var\n                        if (i === 2) //escape\n                        {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            _sb.push(i);\n                            state = 15;\n                            pState = 14;\n                        }\n                        else if (i === 255 || i <= 3) {\n                            idx--;\n                            state = 13;\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_var += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 15:\n                        if (this.enableDebug) debugOp += this._formatByte(i);\n                        if (pState === 16)\n                            msdp_val += String.fromCharCode(i);\n                        else\n                            msdp_var += String.fromCharCode(i);\n                        state = pState;\n                        _sb.push(i);\n                        break;\n                    case 16:\n                        break;\n                    case 17: //CHARSET\n                        if (i === 1) //REQUEST\n                        {\n                            if (this.enableDebug) debugOp += '<REQUEST>';\n                            _sb.push(i);\n                            state = 18;\n                            msdp_val = '';\n                        }\n                        //TODO add ttable support\n                        //https://www.rfc-editor.org/rfc/rfc2066.html\n                        else if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            tmp = this._fireReceiveOption(option, 250, msdp_val);\n                            this.emit('receive-CHARSET', msdp_val);\n                            if (!tmp) {\n                                if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><SB><CHARSET><REJECTED><IAC><SE>');\n                                this.sendData(new Uint8Array([255, 250, 42, 3, 255, 240]), true);\n                            }\n                            state = 0;\n                            msdp_val = '';\n                            _sb = [];\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_val += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                    case 18: //CHARSET REQUEST\n                        if (i === 255) {\n                            if (this.enableDebug) debugOp += '<IAC>';\n                            _sb.push(i);\n                        }\n                        else if (i === 240) {\n                            if (this.enableDebug) {\n                                this.emit('debug', debugOp + '<SE>');\n                                debugOp = '';\n                            }\n                            tmp = this._fireReceiveOption(option, 250, msdp_val);\n                            this.emit('receive-CHARSET', msdp_val.slice(1));\n                            if (!tmp) {\n                                if (this.options.CHARSET && msdp_val.slice(1).toLowerCase() === 'utf-8') {\n                                    this.server.CHARSET = true;\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><SB><ACCEPTED>UTF-8<IAC><SE>');\n                                    this.sendData(new Uint8Array([255, 250, 42, 2]), true);\n                                    this.sendData('UTF-8', true);\n                                    this.sendData(new Uint8Array([255, 240]), true);\n                                }\n                                else {\n                                    if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><SB><CHARSET><REJECTED><IAC><SE>');\n                                    this.sendData(new Uint8Array([255, 250, 42, 3, 255, 240]), true);\n                                }\n                            }\n                            state = 0;\n                            msdp_val = '';\n                            _sb = [];\n                        }\n                        else {\n                            if (this.enableDebug) debugOp += this._formatByte(i);\n                            msdp_val += String.fromCharCode(i);\n                            _sb.push(i);\n                        }\n                        break;\n                }\n            }\n        }\n        catch (e) {\n            this.emit('error', e);\n        }\n        if (this.enableDebug) {\n            {\n                if (debugOp.length > 0)\n                    this.emit('debug', debugOp);\n            }\n            this.emit('debug', 'Post Split buffer length: ' + _sb.length, 1);\n            this.emit('debug', 'PostSplit buffer  ' + printArray(new Uint8Array(_sb)), 1);\n        }\n        //if processed and was prev goAhead, it needs to starts a new line to correctly end goAhead\n        if (ga && processed.length > 0)\n            processed.prepend('\\n');\n        else if (ga)  //go ahead wasn't effected and if prev true, so reset back to true\n            this.prompt = true;\n        if (processed.length > 0)\n            this.firstReceived = false;\n        this._splitBuffer = _sb;\n        if (returnRaw)\n            return processed;\n        //force UTF8 or if charset is enabled and type is UTF8 process data as UTF8 data\n        if (this.UTF8 || (this.options.CHARSET && this.server.CHARSET))\n            return UTF8.decode2(processed.toString());\n        return processed.toString();\n    }\n\n    /**\n     * @name Telnet#replyToOption\n     * @desc Replay to a telnet option\n     *\n     * @param {Number} op The telnet option code\n     * @param {Number} verb The telnet verb to reply with\n     * @param {Number} reply The telnet verb your reply from\n     * @param {String|undefined} val The value if the option has one\n     * @return boolean returns if the reply was handled or not\n     * @fires Telnet#receive-option\n     */\n    public replyToOption(op: number, verb: number, reply: number, val?: string): boolean {\n        if (typeof val === 'undefined') val = '';\n        if (this._fireReceiveOption(op, reply, val))\n            return false;\n        this.sendData(new Uint8Array([255, verb, op]), true);\n        return true;\n    }\n\n    /**\n     * @name Telnet#updateWindow\n     * @desc Send a NAWS Window update\n     *\n     * @param {Number} w The current width in lines of the window\n     * @param {Number} h The current height in characters of the window\n     */\n    public updateWindow(w, h) {\n        if (h < 1 || w < 1 || !this.connected || !this.server.NAWS) return;\n        try {\n            let w1;\n            let w2;\n            let h1;\n            let h2;\n            const mf = Math.floor;\n            w1 = mf(w / 256);\n            if (w1 > 256)\n                w1 = 255;\n            w2 = w % 256;\n            h1 = mf(h / 256);\n            if (h1 > 256)\n                h1 = 255;\n            h2 = h % 256;\n            if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><SB><NAWS><' + w1 + '><' + w2 + '><' + h1 + '><' + h2 + '><IAC><SE>');\n            this.sendData(new Uint8Array([255, 250, 31, w1, w2, h1, h2, 255, 240]), true);\n        }\n        catch (e) {\n            this.emit('error', { message: 'UpdateWindow Error: ' + e, err: e });\n        }\n    }\n\n    /**\n     * @name Telnet#sendGMCP\n     * @desc Send a GMCP formatted string\n     *\n     * @param {String} str The GMCP formatted string to send to the host\n     */\n    public sendGMCP(str) {\n        if (this.connected && this.server.GMCP) {\n            if (this.enableDebug) this.emit('debug', 'REPLY: <IAC><SB><GMCP>' + this._escapeData(str).toString('binary') + '<IAC><SE>');\n            this.sendData(new Uint8Array([255, 250, 201]), true);\n            this.sendData(this._escapeData(str), true);\n            this.sendData(new Uint8Array([255, 240]), true);\n        }\n    }\n\n    /**\n     * @name Telnet#startGMCP\n     * @desc Start GMCP and send Core.Hello and Core.Support.Set\n     */\n    private _startGMCP() {\n        if (this.server.GMCP) {\n            if (this.enableDebug)\n                this.emit('debug', 'REPLY: <IAC><SB><GMCP>Core.Hello { \"client\": \"' + this.terminal + '\", \"version\": \"' + this.version + '\" }<IAC><SE>');\n            this.sendData(new Uint8Array([255, 250, 201]), true);\n            this.sendData('Core.Hello { \"client\": \"' + this.terminal + '\", \"version\": \"' + this.version + '\" }', true);\n            this.sendData(new Uint8Array([255, 240]), true);\n            this.sendData(new Uint8Array([255, 250, 201]), true);\n\n            if (this.GMCPSupports.length > 0) {\n                //ensure we at least support core module\n                if (this.GMCPSupports.indexOf('Core 1') === -1)\n                    this.GMCPSupports.unshift('Core 1');\n                if (this.enableDebug)\n                    this.emit('debug', 'REPLY: <IAC><SB><GMCP>' + JSON.stringify(this.GMCPSupports) + '<IAC><SE>');\n                this.sendData('Core.Supports.Set ' + JSON.stringify(this.GMCPSupports));\n            }\n            else {\n                if (this.enableDebug)\n                    this.emit('debug', 'REPLY: <IAC><SB><GMCP>Core.Supports.Set [ \"Core 1\" ]<IAC><SE>');\n                this.sendData('Core.Supports.Set [ \"Core 1\" ]', true);\n            }\n            this.sendData(new Uint8Array([255, 240]), true);\n        }\n    }\n\n    /**\n     * @name Telnet#startMCCP\n     * @desc Start MCCP compression protocol and set compress state on\n     */\n    private _startMCCP() {\n        this._zlib = true;\n    }\n\n    /**\n     * @name Telnet#endMCCP\n     * @desc End MCCP compression protocol and set compress state off\n     */\n    private _endMCCP() {\n        this._zlib = false;\n        this.zStream = 0;\n    }\n\n    /**\n     * @name Telnet#decompressData\n     * @desc Decompresses a ZLIB stream if ZLIB is present and compress state is on\n     *\n     * @param {String} data The compressed data string\n     * @returns {String} The decompressed data or the original data i ZLIB is not found or compress state is off\n     */\n    private _decompressData(data) {\n        if (!this._zlib) return data;\n        if (!this.zStream)\n            this.zStream = new Zlib.InflateStream();\n        if (this.enableDebug) this.emit('debug', 'Pre decompress:' + printArray(data), 1);\n        data = this.zStream.decompress(data);\n        if (this.enableDebug) this.emit('debug', 'Post decompress:' + printArray(data), 1);\n        return new Uint8Array(data);\n    }\n\n    /**\n     * @name Telnet#escapeData\n     * @desc Escape data for sending over telnet, IAC should become IAC IAC and \\r to \\r\\0 and \\n to \\r\\n\n     *\n     * @param {String} data the data to be escaped\n     * @returns {String} the data after being escaped\n     *\n     */\n    private _escapeData(data) {\n        if (data == null || typeof data === 'undefined') return data;\n        let dl;\n        let ba;\n        let idx = 0;\n        let i;\n        let c;\n        if (data instanceof Uint8Array) {\n            dl = data.byteLength;\n            ba = new StringBuffer();\n            for (; idx < dl; idx++) {\n                ba.appendCode(data[idx]);\n                if (data[idx] === 255)\n                    ba.appendCode(255);\n                else if (data[idx] === 13 && dl === 1)\n                    ba.append('\\r\\n');\n                else if (data[idx] === 10 && dl === 1)\n                    ba.append('\\r\\0');\n            }\n            return ba.toString();\n        }\n        dl = data.length;\n        ba = new StringBuffer();\n        for (; idx < dl; idx++) {\n            c = data.charAt(idx);\n            i = data.charCodeAt(idx);\n            ba.append(c);\n            if (i === 255)\n                ba.append(c);\n            else if (i === 13 && dl === 1)\n                ba.append('\\r\\n');\n            else if (i === 10 && dl === 1)\n                ba.append('\\r\\0');\n        }\n        return ba.toString();\n    }\n\n    /**\n     * @name Telnet#createSocket \n     * @desc Create a websocket object and assign events\n     *\n     * @returns {object} returns the socket object\n     */\n    private _createSocket(host, port) {\n        let _socket;\n        try {\n            //test if host has a scheme:// at the start and use it, does not care if it is a valid one or not let websocket worry about that\n            const hasScheme = /^[a-z0-9]+:\\/\\//.test(host);\n            //if scheme and has a port set append the port\n            if (hasScheme && port > 0)\n                _socket = new WebSocket(host + ':' + port, this.protocol || 'binary');\n            //no port but a scheme so use host and let websocket use default ports\n            else if (hasScheme)\n                _socket = new WebSocket(host, this.protocol || 'binary');\n            //host and port, prepend scheme and append port\n            else if (host && port > 0)\n                _socket = new WebSocket((this.scheme || 'ws://') + host + ':' + port, this.protocol || 'binary');\n            //when all else fails just try and use host prepended with scheme\n            else if (host)\n                _socket = new WebSocket((this.scheme || 'ws://') + host, this.protocol || 'binary');\n            _socket.binaryType = 'arraybuffer';\n            //the socket was closed for some reason, any code but 1000 means some type of error so send it to the error system, call close for cleanup and then trigger teh onClose event\n            _socket.onclose = (evt) => {\n                if (evt.code === 1006 && evt.type === 'close' && !this._closed)\n                    this.close();\n                else if (evt.code !== 1000 && !this._closed) {\n                    this.emit('error', { message: 'Closed due to transmission error', err: evt });\n                    this.close();\n                }\n            };\n            //trigger the onConnect event when the socket has been opened\n            _socket.onopen = () => {\n                this._connected = true;\n                this.emit('connect');\n            };\n            //data was received, process the data\n            _socket.onmessage = (evt) => {\n                if (evt.data instanceof ArrayBuffer) {\n                    var data = new Uint8Array(evt.data);\n                    if (this.enableDebug) this.emit('debug', 'Data ArrayBuffer received:' + printArray(data));\n                    this.receivedData(data);\n                }\n                else if (evt.data instanceof Blob) {\n                    var reader = new FileReader();\n                    reader.onloadend = () => {\n                        var data = new Uint8Array(<ArrayBuffer>reader.result);\n                        this.receivedData(data);\n                        if (this.enableDebug) this.emit('debug', 'Data Blob received:' + printArray(reader.result));\n                    };\n                    reader.readAsArrayBuffer(evt.data);\n                }\n                else {\n                    if (this.enableDebug) this.emit('debug', 'Data received:' + evt.data);\n                    this.receivedData(evt.data);\n                }\n            };\n            //an error happened so let the error function fire\n            _socket.onerror = (evt) => {\n                if (!this._closed)\n                    this.emit('error', evt);\n            };\n            return _socket;\n        }\n        catch (e) {\n            this.emit('error', e);\n        }\n        return null;\n    }\n\n    /**\n    * @name Telnet#destroySocket\n    * @desc Destroy the current websocket object by assigning all functions to be empty\n    *\n    * @returns {object} returns null\n    */\n    private _destroySocket() {\n        if (!this.socket || this.socket == null) return;\n        try {\n            this.socket.onopen = function () { };\n            this.socket.onclose = function () { };\n            this.socket.onmessage = function () { };\n            this.socket.onerror = function () { };\n            if (this.connected)\n                this.socket.close();\n            delete this.socket;\n        }\n        catch (e) {\n            this.emit('error', e);\n        }\n        this.socket = null;\n    }\n\n    /**\n    * @name Telnet#fireTelnetOption \n    * @desc Fire the onTelnetOption e\n    *\n    * @returns {object} returns null\n    */\n    private _fireReceiveOption(option, verb, val) {\n        const data: TelnetOption = { telnet: this, option: option, verb: 250, value: val, handled: false };\n        this.emit('received-option', data);\n        return data.handled;\n    }\n\n    private _fireReceiveMSDP(msdp_var, msdp_val) {\n        const data = { telnet: this, variable: msdp_var, value: msdp_val, handled: false };\n        this.emit('received-MSDP', data);\n        return data.handled;\n    }\n\n    private _fireReceiveGMCP(val) {\n        const data = { telnet: this, value: val, handled: false };\n        this.emit('received-GMCP', data);\n        return data.handled;\n    }\n\n    private _formatByte(b) {\n        if (b < 32 || b >= 127)\n            return '<' + b + '>';\n        return String.fromCharCode(b);\n    }\n\n    /**\n     * @name Telnet#onError\n     * @desc Fired when an error happens\n     * @method \n     * @event Telnet#onError\n     * @property {String|Object} err - the err object or message\n     */\n\n    /**\n     * @name Telnet#onConnecting\n     * @desc Fired when attempting to connect to host\n     * @method  \n     * @event Telnet#onConnecting\n     */\n\n    /**\n     * @name Telnet#onConnect\n     * @desc Fired when successfully connected to host\n     * @method  \n     * @event Telnet#onConnect\n     */\n\n    /**\n    * @name Telnet#onClose\n    * @desc Fired when connection is closed to host\n    * @method  \n    * @event Telnet#onClose\n    */\n\n    /**\n     * @name Telnet#onReceivedData\n     * @desc Fired when data is received from the host\n     * @method  \n     * @event Telnet#onReceivedData\n     * @property {String} data - received from the host after being processed for telnet options\n     */\n\n    /**\n     * @name Telnet#onDataSent\n     * @desc Fired when data is sent to the host\n     * @method  \n     * @event Telnet#onDataSent\n     * @property {String} data - data that was sent to the host\n     */\n\n    /**\n     * @name Telnet#onReceiveMSDP\n     * @desc Fired when a MSDP variable is received from host\n     * @method  \n     * @event Telnet#onReceiveMSDP\n     * @property {String} msdp_var - MSDP variable name\n     * @property {String} msdp_val - MSDP value of variable\n     */\n\n    /**\n    * @name Telnet#onReceiveGMCP\n    * @desc Fired when GMCP data is received from host\n    * @method  \n    * @event Telnet#onReceiveGMCP\n    * @property {String} value - The raw GMCP string\n    */\n\n    /**\n    * @name Telnet#onReceiveMSSP\n    * @desc Fired when MSSP variables and values are found\n    * @method  \n    * @event Telnet#onReceiveMSSP\n    * @type {object}\n    * @property {object} - the MSSP object containing all variables and values found\n    */\n\n    /**\n     * @name Telnet#onTelnetOption\n     * @desc Fired when a telnet option is found and before any reply sent\n     * @method  \n     * @event Telnet#onTelnetOption\n     * @type {object}\n     * @property {Number} option - Telnet option code\n     * @property {Number} verb - Telnet verb being replied to\n     * @property {String} value - Telnet option value if it has one\n     *\n     * @returns {Boolean} true if the option was handled, false if not handled and to continue default action\n     */\n\n}\n\nwindow.telnet = new Telnet;", "//spell-checker:ignore Xred\r\n/**\r\n *\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum Ansi {\r\n    None = 0,\r\n    Bold = 1,\r\n    Faint = 2,\r\n    Underline = 4,\r\n    Italic = 3,\r\n    Slow = 5,\r\n    Rapid = 6,\r\n    Inverse = 7,\r\n    Hidden = 8,\r\n    Strikeout = 9,\r\n    DoubleUnderline = 21,\r\n    Overline = 53\r\n}\r\n\r\n/**\r\n * Enum for Ansi color codes.\r\n * @readonly\r\n * @enum {number}\r\n */\r\nexport enum AnsiColorCode {\r\n    /** @desc  Custom color for error Information */\r\n    ErrorBackground = -12,\r\n    /** @desc  Custom background color for error Information */\r\n    ErrorText = -11,\r\n    /** @desc  Custom background color for client Information */\r\n    InfoBackground = -8,\r\n    /** @desc  Custom foreground color for client Information */\r\n    InfoText = -7,\r\n    /** @desc  Custom tag for local echo */\r\n    LocalEcho = -3,\r\n    /** @desc  Custom tag for local echo */\r\n    LocalEchoBack = -4,\r\n    /** @desc All attributes off */\r\n    Reset = 0,\r\n    /** @desc Bold ON */\r\n    Bold = 1,\r\n    /** @desc Faint ON */\r\n    Faint = 2,\r\n    /** @desc Italic ON */\r\n    Italic = 3,\r\n    /** @desc Underscore */\r\n    Underline = 4,\r\n    /** @desc Blink ON (Slow) */\r\n    Blink = 5,\r\n    /** @desc Blink ON (Rapid) */\r\n    BlinkRapid = 6,\r\n    /** @desc Reverse Video ON */\r\n    Reverse = 7,\r\n    /** @desc Concealed ON */\r\n    Hidden = 8,\r\n    /** @desc  strike through */\r\n    StrikeThrough = 9,\r\n    /** @desc double underline on */\r\n    DoubleUnderline = 21,\r\n    /** @desc bold off */\r\n    BoldOff = 22,\r\n    /** @desc italics off */\r\n    ItalicOff = 23,\r\n    /** @desc underline off */\r\n    UnderlineOff = 24,\r\n    /** @desc blink off (slow) */\r\n    BlinkOff = 25,\r\n    /** @desc blink off (rapid) */\r\n    BlinkRapidOff = 26,\r\n    /** @desc inverse off */\r\n    ReverseOff = 27,\r\n    /** @desc Visible */\r\n    Visible = 28,\r\n    /** @desc strike through off */\r\n    StrikeThroughOff = 29,\r\n    /** @desc Black Foreground */\r\n    Black = 30,\r\n    /** @desc Red Foreground */\r\n    Red = 31,\r\n    /** @desc Green Foreground */\r\n    Green = 32,\r\n    /** @desc Yellow Foreground */\r\n    Yellow = 33,\r\n    /** @desc Blue Foreground */\r\n    Blue = 34,\r\n    /** @desc Magenta Foreground */\r\n    Magenta = 35,\r\n    /** @desc Cyan Foreground */\r\n    Cyan = 36,\r\n    /** @desc White Foreground */\r\n    White = 37,\r\n    /** @desc Default */\r\n    DefaultFore = 39,\r\n    /** @desc Black Background */\r\n    BlackBackground = 40,\r\n    /** @desc Red Background */\r\n    RedBackground = 41,\r\n    /** @desc Green Background */\r\n    GreenBackground = 42,\r\n    /** @desc Yellow Background */\r\n    YellowBackground = 43,\r\n    /** @desc Blue Background */\r\n    BlueBackground = 44,\r\n    /** @desc Magenta Background */\r\n    MagentaBackground = 45,\r\n    /** @desc Cyan Background */\r\n    CyanBackground = 46,\r\n    /** @desc White Background */\r\n    WhiteBackground = 47,\r\n    /** @desc default */\r\n    DefaultBack = 49,\r\n    /** @desc Subscript */\r\n    Subscript = 74,\r\n    /** @desc Superscript */\r\n    Superscript = 73,\r\n    SubSuperOff = 75,\r\n    // xterm 16 color support\r\n    /** @desc Set foreground color to Black */\r\n    XBlack = 90,\r\n    /** @desc Set foreground color to Red */\r\n    XRed = 91,\r\n    /** @desc Set foreground color to Green */\r\n    XGreen = 92,\r\n    /** @desc Set foreground color to Yellow */\r\n    XYellow = 93,\r\n    /** @desc Set foreground color to Blue */\r\n    XBlue = 94,\r\n    /** @desc Set foreground color to Magenta */\r\n    XMagenta = 95,\r\n    /** @desc Set foreground color to Cyan */\r\n    XCyan = 96,\r\n    /** @desc Set foreground color to White */\r\n    XWhite = 97,\r\n    /** @desc Set background color to Black */\r\n    XBlackBackground = 100,\r\n    /** @desc Set background color to Red */\r\n    XRedBackground = 101,\r\n    /** @desc Set background color to Green */\r\n    XGreenBackground = 102,\r\n    /** @desc Set background color to Yellow */\r\n    XYellowBackground = 103,\r\n    /** @desc Set background color to Blue */\r\n    XBlueBackground = 104,\r\n    /** @desc Set background color to Magenta */\r\n    XMagentaBackground = 105,\r\n    /** @desc Set background color to Cyan */\r\n    XCyanBackground = 106,\r\n    /** @desc Set background color to White */\r\n    XWhiteBackground = 107\r\n}\r\n\r\nexport function getAnsiColorCode(color: string, back?: boolean) {\r\n    switch (color.toLowerCase()) {\r\n        case 'black':\r\n            return back ? 40 : 30;\r\n        case 'red':\r\n            return back ? 41 : 31;\r\n        case 'green':\r\n            return back ? 42 : 32;\r\n        case 'yellow':\r\n            return back ? 43 : 33;\r\n        case 'blue':\r\n            return back ? 44 : 34;\r\n        case 'magenta':\r\n            return back ? 45 : 35;\r\n        case 'cyan':\r\n            return back ? 46 : 36;\r\n        case 'white':\r\n            return back ? 47 : 37;\r\n        case 'default':\r\n            return back ? 49 : 39;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getColorCode(code) {\r\n    let f = -1;\r\n    let b = -1;\r\n    let bold = false;\r\n    //rev            1024\r\n    if (code - 1024 >= 0) {\r\n        code -= 1024;\r\n    }\r\n    //blink            512  \r\n    if (code - 512 >= 0) {\r\n        code -= 512;\r\n    }\r\n    //under            256    \r\n    if (code - 256 >= 0) {\r\n        code -= 256;\r\n    }\r\n    //bold            128    \r\n    if (code - 128 >= 0) {\r\n        code -= 128;\r\n        bold = true;\r\n    }\r\n    if (code - 112 >= 0) {\r\n        code -= 112\r\n        b = 47;\r\n    }\r\n    if (code - 96 >= 0) {\r\n        code -= 96;\r\n        b = 43;\r\n    }\r\n    if (code - 80 >= 0) {\r\n        code -= 80;\r\n        b = 45;\r\n    }\r\n    if (code - 64 >= 0) {\r\n        code -= 64;\r\n        b = 41;\r\n    }\r\n    if (code - 48 >= 0) {\r\n        code -= 48;\r\n        b = 46\r\n    }\r\n    if (code - 32 >= 0) {\r\n        code -= 32;\r\n        b = 42;\r\n    }\r\n    if (code - 16 >= 0) {\r\n        code -= 16;\r\n        b = 44;\r\n    }\r\n    if (code >= 8) {\r\n        code -= 8;\r\n        bold = true;\r\n    }\r\n    switch (code) {\r\n        case 0:\r\n            f = 30;\r\n            break;\r\n        case 1:\r\n            f = 34;\r\n            break;\r\n        case 2:\r\n            f = 32;\r\n            break;\r\n        case 3:\r\n            f = 36;\r\n            break;\r\n        case 4:\r\n            f = 31;\r\n            break;\r\n        case 5:\r\n            f = 35;\r\n            break;\r\n        case 6:\r\n            f = 33;\r\n            break;\r\n        case 7:\r\n            f = 37;\r\n            break;\r\n    }\r\n    if (bold && f === -1) f = 370;\r\n    else if (bold) f *= 10;\r\n    if (f === -1)\r\n        return `,${b}`;\r\n    if (b === -1)\r\n        return f.toString();\r\n    return `${f},${b}`\r\n}\r\n\r\nexport function isMXPColor(color) {\r\n    if (!color || color.length === 0) return false;\r\n    return ['indianred', 'lightcoral', 'salmon', 'darksalmon', 'lightsalmon',\r\n        'crimson', 'red', 'firebrick', 'darkred', 'pink', 'lightpink', 'hotpink', 'deeppink',\r\n        'mediumvioletred', 'palevioletred', 'lightsalmon', 'coral', 'tomato', 'orangered',\r\n        'darkorange', 'orange', 'gold', 'yellow', 'lightyellow', 'lemonchiffon',\r\n        'lightgoldenrodyellow', 'papayawhip', 'moccasin', 'peachpuff', 'palegoldenrod',\r\n        'khaki', 'darkkhaki', 'lavender', 'thistle', 'plum', 'violet', 'orchid', 'fuchsia',\r\n        'magenta', 'mediumorchid', 'mediumpurple', 'blueviolet', 'darkviolet',\r\n        'darkorchid', 'darkmagenta', 'purple', 'indigo', 'slateblue', 'darkslateblue',\r\n        'mediumslateblue', 'greenyellow', 'chartreuse', 'lawngreen', 'lime', 'limegreen',\r\n        'palegreen', 'lightgreen', 'mediumspringgreen', 'springgreen', 'mediumseagreen',\r\n        'seagreen', 'forestgreen', 'green', 'darkgreen', 'yellowgreen', 'olivedrab',\r\n        'olive', 'darkolivegreen', 'mediumaquamarine', 'darkseagreen', 'lightseagreen',\r\n        'darkcyan', 'teal', 'aqua', 'cyan', 'lightcyan', 'paleturquoise', 'aquamarine',\r\n        'turquoise', 'mediumturquoise', 'darkturquoise', 'cadetblue', 'steelblue',\r\n        'lightsteelblue', 'powderblue', 'lightblue', 'skyblue', 'lightskyblue',\r\n        'deepskyblue', 'dodgerblue', 'cornflowerblue', 'mediumslateblue', 'royalblue',\r\n        'blue', 'mediumblue', 'darkblue', 'navy', 'midnightblue', 'cornsilk',\r\n        'blanchedalmond', 'bisque', 'navajowhite', 'wheat', 'burlywood', 'tan',\r\n        'rosybrown', 'sandybrown', 'goldenrod', 'darkgoldenrod', 'peru', 'chocolate',\r\n        'saddlebrown', 'sienna', 'brown', 'maroon', 'white', 'snow', 'honeydew',\r\n        'mintcream', 'azure', 'aliceblue', 'ghostwhite', 'whitesmoke', 'seashell',\r\n        'beige', 'oldlace', 'floralwhite', 'ivory', 'antiquewhite', 'linen',\r\n        'lavenderblush', 'mistyrose', 'gainsboro', 'lightgrey', 'silver', 'darkgray',\r\n        'gray', 'dimgray', 'lightslategray', 'slategray', 'darkslategray', 'black'].indexOf(color.toLowerCase()) != -1;\r\n}\r\n\r\nexport function getAnsiCode(str, back?: boolean) {\r\n    switch (str) {\r\n        /** @desc  custom color for error information */\r\n        case 'errortextbackground':\r\n        case 'errorbackground':\r\n            return -12;\r\n        /** @desc  custom background color for error information */\r\n        case 'errortext':\r\n            return back ? -12 : -11;\r\n        /** @desc  custom background color for client information */\r\n        case 'infobackground':\r\n            return -8;\r\n        /** @desc  custom foreground color for client information */\r\n        case 'infotext':\r\n            return back ? -8 : -7;\r\n        /** @desc  custom tag for local echo */\r\n        case 'localecho':\r\n            return back ? -4 : -3;\r\n        /** @desc  custom tag for local echo */\r\n        case 'localechoback':\r\n            return -4;\r\n        /** @desc all attributes off */\r\n        case 'reset':\r\n            return 0;\r\n        /** @desc bold on */\r\n        case 'bold':\r\n            return 1;\r\n        /** @desc faint on */\r\n        case 'faint':\r\n            return 2;\r\n        /** @desc italic on */\r\n        case 'italic':\r\n            return 3;\r\n        /** @desc underscore */\r\n        case 'underline':\r\n            return 4;\r\n        /** @desc blink on (slow) */\r\n        case 'blink':\r\n            return 5;\r\n        /** @desc blink on (rapid) */\r\n        case 'blinkrapid':\r\n            return 6;\r\n        /** @desc reverse video on */\r\n        case 'reverse':\r\n            return 7;\r\n        /** @desc concealed on */\r\n        case 'hidden':\r\n            return 8;\r\n        /** @desc  strike through */\r\n        case 'strikethrough':\r\n            return 9;\r\n        /** @desc double underline on */\r\n        case 'doubleunderline':\r\n            return 21;\r\n        /** @desc bold off */\r\n        case 'boldoff':\r\n            return 22;\r\n        /** @desc italics off */\r\n        case 'italicoff':\r\n            return 23;\r\n        /** @desc underline off */\r\n        case 'underlineoff':\r\n            return 24;\r\n        /** @desc blink off (slow) */\r\n        case 'blinkoff':\r\n            return 25;\r\n        /** @desc blink off (rapid) */\r\n        case 'blinkrapidoff':\r\n            return 26;\r\n        /** @desc inverse off */\r\n        case 'reverseoff':\r\n            return 27;\r\n        /** @desc visible */\r\n        case 'visible':\r\n            return 28;\r\n        /** @desc strike through off */\r\n        case 'strikethroughoff':\r\n            return 29;\r\n        /** @desc black foreground */\r\n        case 'black':\r\n            return back ? 40 : 30;\r\n        /** @desc red foreground */\r\n        case 'red':\r\n            return back ? 41 : 31;\r\n        /** @desc green foreground */\r\n        case 'green':\r\n            return back ? 42 : 32;\r\n        /** @desc yellow foreground */\r\n        case 'yellow':\r\n            return back ? 43 : 33;\r\n        /** @desc blue foreground */\r\n        case 'blue':\r\n            return back ? 44 : 34;\r\n        /** @desc magenta foreground */\r\n        case 'magenta':\r\n            return back ? 45 : 35;\r\n        /** @desc cyan foreground */\r\n        case 'cyan':\r\n            return back ? 46 : 36;\r\n        /** @desc white foreground */\r\n        case 'white':\r\n            return back ? 47 : 37;\r\n        /** @desc default */\r\n        case 'default':\r\n        case 'defaultfore':\r\n            return back ? 49 : 39;\r\n        /** @desc black background */\r\n        case 'blackbackground':\r\n            return 40;\r\n        /** @desc red background */\r\n        case 'redbackground':\r\n            return 41;\r\n        /** @desc green background */\r\n        case 'greenbackground':\r\n            return 42;\r\n        /** @desc yellow background */\r\n        case 'yellowbackground':\r\n            return 43;\r\n        /** @desc blue background */\r\n        case 'bluebackground':\r\n            return 44;\r\n        /** @desc magenta background */\r\n        case 'magentabackground':\r\n            return 45;\r\n        /** @desc cyan background */\r\n        case 'cyanbackground':\r\n            return 46;\r\n        /** @desc white background */\r\n        case 'whitebackground':\r\n            return 47;\r\n        /** @desc default */\r\n        case 'defaultbackground':\r\n        case 'defaultback':\r\n            return 49;\r\n        case 'overline':\r\n            return 53;\r\n        /** @desc subscript */\r\n        case 'subscript':\r\n            return 74;\r\n        /** @desc superscript */\r\n        case 'superscript':\r\n            return 73;\r\n        case 'subsuperoff':\r\n            return 75;\r\n        // xterm 16 color support\r\n        /** @desc set foreground color to black */\r\n        case 'xblack':\r\n            return back ? 100 : 90;\r\n        /** @desc set foreground color to red */\r\n        case 'xred':\r\n            return back ? 101 : 91;\r\n        /** @desc set foreground color to green */\r\n        case 'xgreen':\r\n            return back ? 102 : 92;\r\n        /** @desc set foreground color to yellow */\r\n        case 'xyellow':\r\n            return back ? 103 : 93;\r\n        /** @desc set foreground color to blue */\r\n        case 'xblue':\r\n            return back ? 104 : 94;\r\n        /** @desc set foreground color to magenta */\r\n        case 'xmagenta':\r\n            return back ? 105 : 95;\r\n        /** @desc set foreground color to cyan */\r\n        case 'xcyan':\r\n            return back ? 106 : 96;\r\n        /** @desc set foreground color to white */\r\n        case 'xwhite':\r\n            return back ? 107 : 97;\r\n        /** @desc set background color to black */\r\n        case 'xblackbackground':\r\n            return 100;\r\n        /** @desc set background color to red */\r\n        case 'xredbackground':\r\n            return 101;\r\n        /** @desc set background color to green */\r\n        case 'xgreenbackground':\r\n            return 102;\r\n        /** @desc set background color to yellow */\r\n        case 'xyellowbackground':\r\n            return 103;\r\n        /** @desc set background color to blue */\r\n        case 'xbluebackground':\r\n            return 104;\r\n        /** @desc set background color to magenta */\r\n        case 'xmagentabackground':\r\n            return 105;\r\n        /** @desc set background color to cyan */\r\n        case 'xcyanbackground':\r\n            return 106;\r\n        /** @desc set background color to white */\r\n        case 'xwhitebackground':\r\n            return 107\r\n    }\r\n    return -1;\r\n}", "import { Display } from \"./display\";\n\nexport interface Point {\n  x: number;\n  y: number;\n  lineID: number;\n  lineOffset: number;\n}\n\nexport interface DisplayOptions extends ParserOptions {\n  colors?: boolean;\n  backgroundColors?: boolean;\n  container?: string | JQuery | HTMLElement;\n}\n\nexport interface LogOptions {\n  path?: string;\n  offline?: boolean;\n  gagged?: boolean;\n  enabled?: boolean;\n  unique?: boolean;\n  prepend?: boolean;\n  name?: string;\n  what?: Log;\n  debug?: boolean;\n}\n\nexport interface WindowState {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  maximized: boolean;\n}\n\nexport enum BackupSelection {\n  None = 0,\n  Map = 2,\n  Profiles = 4,\n  Settings = 8,\n  Windows = 16,\n  Characters = 32,\n  All = 30\n}\n\nexport enum NewLineType {\n  None = 0,\n  Ctrl = 1,\n  Shift = 2,\n  CtrlOrShift = 4,\n  CtrlAndShift = 8\n}\n\nexport enum ScriptEngineType {\n  Full = 1,\n  Fast = 2,\n  Simple = 4\n}\n\nexport enum Log {\n  None = 0,\n  Html = 1,\n  Text = 2,\n  Raw = 4\n}\n\nexport enum FormatType {\n  Normal = 0,\n  Link = 1,\n  LinkEnd = 2,\n  MXPLink = 3,\n  MXPLinkEnd = 4,\n  Image = 5,\n  WordBreak = 6,\n  MXPSend = 7,\n  MXPSendEnd = 8,\n  MXPExpired = 9,\n  MXPSkip = 10\n}\n\nexport enum OnDisconnect {\n  Nothing = 0, Reconnect = 1, ReconnectDialog = 2, LoadManager = 4, Close = 8\n}\n\nexport enum OnProfileChange {\n  Nothing = 0, Reload = 1, Ask = 2, Warn = 4\n}\n\nexport enum OnProfileDeleted {\n  Nothing = 0, Remove = 1, Ask = 2, Warn = 4\n}\n\nexport enum ProfileSortOrder {\n  None = 0, Alpha = 2, Priority = 4, Index = 8\n}\n\nexport enum Echo {\n  None = 0, Triggers = 8, Scripts = 2, Commands = 4\n}\n\nexport enum TabCompletion { PrependBuffer = 1, AppendBuffer = 2, BufferOnly = 4, List = 8 }\n\n/**\n   * Enum flag for Font styles.\n   * @readonly\n   * @enum {number}\n   * @typedef {number} FontStyle\n   */\nexport enum FontStyle {\n  None = 0,\n  Bold = 1,\n  Faint = 2,\n  Italic = 4,\n  Underline = 8,\n  Slow = 16, /** @desc Slow blink text combined with slow for final blink  */\n  Rapid = 32, /** @desc Rapid blink text combined with slow for final blink */\n  Inverse = 64, /** @desc reverse back and fore color */\n  Hidden = 128, /** @desc hide text */\n  Strikeout = 256,\n  DoubleUnderline = 512,\n  Overline = 1024\n}\n\nexport enum SettingType {\n  String = 0,\n  Boolean = 1,\n  Number = 2,\n  Raw = 3,\n  Custom = 4,\n  ComboBox = 5\n}\n\nexport interface LineFormat {\n  formatType: FormatType;\n  offset: number;\n  color: string | number;\n  background: string | number;\n  size: string;\n  font: string;\n  style: FontStyle;\n  hr?: boolean;\n}\n\nexport interface ImageFormat {\n  formatType: FormatType;\n  name: string;\n  url: string;\n  type: string;\n  height: string;\n  width: string;\n  vspace: string;\n  align: string;\n  ismap: boolean;\n}\n\nexport interface LinkFormat {\n  formatType: FormatType;\n  href?: string;\n  hint?: string;\n  expire?: string;\n  prompt?: boolean;\n  tt?: string | number;\n}\nexport interface ParserLine {\n  raw: string;\n  line: string;\n  fragment: boolean;\n  gagged: boolean;\n  formats: LineFormat[];\n  remote: boolean;\n  timestamp?: number;\n}\n\nexport interface ParserOptions {\n  DefaultImageURL?: string;\n  enableMXP?: boolean;\n  enableDebug?: boolean;\n  enableMSP?: boolean;\n  enableURLDetection?: boolean;\n  window?: Size;\n  enableFlashing?: boolean;\n  emulateTerminal?: boolean;\n  bell?: string;\n  enableBell?: boolean;\n  display?: Display;\n  enableLinks?: boolean;\n  showInvalidMXPTags?: boolean;\n}\n\nexport class Size {\n  public width: number = 0;\n  public height: number = 0;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n}\n\nexport enum IEDError {\n  RESET = 1,\n  USERRESET = 2,\n  DL_USERABORT = 3,\n  DL_NOTSTART = 4,\n  DL_TOOMANY = 5,\n  DL_INPROGRESS = 6,\n  DL_UNKNOWN = 7,\n  UL_USERABORT = 8,\n  UL_BADENCODE = 9,\n  UL_TOOLARGE = 10,\n  UL_FAILWRITE = 11,\n  UL_UNKNOWN = 12,\n  UL_INVALIDFILE = 13,\n  UL_INVALIDPATH = 14,\n  DL_INVALIDFILE = 15,\n  DL_INVALIDPATH = 16,\n  CMD_INVALIDFMT = 17,\n  CMD_INVALID = 18,\n  DIR_INVALIDFMT = 19,\n  DIR_INVALIDPATH = 20,\n  UL_INVALIDFMT = 21,\n  DL_INVALIDFMT = 22,\n  DIR_TOOMANY = 23,\n  DIR_CANTREAD = 24,\n  DIR_NOTSTART = 25,\n  CMD_DENIED = 26,\n  CMD_INVALIDFILE = 27,\n  CMD_INVALIDARG = 28,\n  CMD_INVALIDPATH = 29,\n  INVALIDPATH = 30,\n  INVALIDFILE = 31,\n  CMD_NOEXIST = 32,\n  CMD_DIRECTORY = 33,\n  CMD_EXIST = 34,\n  CMD_UNKNOWN = 35,\n  UL_TOOMANY = 36,\n  UL_INPROGRESS = 37,\n  CMD_FILE = 38,\n  UL_DENIED = 39,\n  UL_FILE = 40,\n  USER_DENIED = 41\n}\n\nexport enum IEDCmdStatus {\n  denied = 0,\n  success = 1,\n  failed = 2\n}\n\nexport enum MailStatus {\n  SUCCESS = 0,\n  ERROR = 1,\n  NO_RECIPIENTS = 2,\n  INVALID_ID = 3,\n  INVALID_GROUP = 4,\n  NOT_ALLOWED = 5,\n  GROUP_EXIST = 6,\n  PLAYER_EXIST = 7,\n  PLAYER_DOES_EXIST = 8,\n  INVALID_DATA = 9,\n  ERROR_LOADING = 10,\n  RESET = 11,\n  CHUNK = 12\n}\n\nexport enum MailAction {\n  list = 0,\n  read = 1,\n  mark = 2,\n  send = 3,\n  reset = 4\n}\n\nexport enum MailReadFormat {\n  none = 0,\n  html = 1,\n  ansi = 2\n}\n\nexport enum MailFolders {\n  inbox = 0,\n  drafts = 1,\n  sent = 2,\n  trash = 3\n}\n\nexport enum ProfileSaveType {\n  Any = 0,\n  Trigger = 1,\n  Button = 2,\n  Macro = 4,\n  Alias = 8,\n  Context = 16,\n  Variable = 32\n}\n\nexport interface MenuItem {\n  name: string;\n  action: Function;\n  icon?: string;\n}\n\nexport interface FunctionEvent {\n  name: string;\n  args: string[];\n  raw: string;\n  handled: boolean;\n  return: any;\n}\n", "//spell-checker:words vscroll, hscroll, askoncancel, askonclose,commandon, cmdfont\n//spell-checker:ignore emoteto, emotetos askonchildren YYYYMMDD Hmmss\nimport { NewLineType, Log, BackupSelection, OnDisconnect, ProfileSortOrder, OnProfileChange, OnProfileDeleted, ScriptEngineType, SettingType, Echo, TabCompletion } from './types';\n\n/**\n * Array that contains details about setting values\n * [settingKey, object property, setting data type, default value, max length\n *\n * settingKey - unique key value, object property value if object property undefined, 0 or null\n * object property - the value used to access setting if settingKey is not property, can use . to denote nested properties\n * setting data type - the data type of setting\n *      0 string\n *      1 boolean\n *      2 number\n *      3 raw setting\n *      4 custom\n *      5 combo-box\n * default value - the default value of setting\n * max length - optional max length\n */\nexport let SettingList: any[] = [\n    ['bufferSize', 0, 2, 500],\n    ['commandDelay', 0, 2, 500],\n    ['commandDelayCount', 0, 2, 5],\n    ['commandHistorySize', 0, 2, 20],\n    ['fontSize', 0, 0, '1em', 0],\n    ['cmdfontSize', 0, 0, '1em', 0],\n    ['commandEcho', 0, 1, true],\n    ['flashing', 0, 1, false],\n    ['autoConnect', 0, 1, true],\n    ['enableAliases', -1, 1, true],\n    ['enableTriggers', -1, 1, true],\n    ['enableMacros', -1, 1, true],\n    ['showScriptErrors', 0, 1, false],\n    ['commandStacking', 0, 1, true],\n    ['commandStackingChar', 0, 0, ';', 1],\n    ['htmlLog', 0, 1, true],\n    ['keepLastCommand', 0, 1, true],\n    ['enableMCCP', 0, 1, true],\n    ['enableUTF8', 0, 1, true],\n    ['font', 0, 5, '\\'Courier New\\', Courier, monospace', 0],\n    ['cmdfont', 0, 5, '\\'Courier New\\', Courier, monospace', 0],\n    ['aliases', -1, 4],\n    ['macros', -1, 4],\n    ['triggers', -1, 4],\n    ['mapFollow', 'mapper.follow', 1, true],\n    ['mapEnabled', 'mapper.enabled', 1, true],\n    ['MapperSplitArea', 'mapper.split', 1, false],\n    ['MapperFillWalls', 'mapper.fill', 1, false],\n    ['MapperOpen', 'showMapper', 1, false],\n    ['fullScreen', -1, 3, false],\n    ['enableMXP', 0, 1, true],\n    ['enableMSP', 0, 1, true],\n    ['parseCommands', 0, 3, true],\n    ['lagMeter', 0, 1, false],\n    ['enablePing', 0, 1, false],\n    ['enableEcho', 0, 1, true],\n    ['enableSpeedpaths', 0, 1, true],\n    ['speedpathsChar', 0, 0, '!', 1],\n    ['parseSpeedpaths', 0, 1, true],\n    ['profile', -1, 0, 'Default', 1],\n    ['parseSingleQuotes', 0, 1, false],\n    ['parseDoubleQuotes', 0, 1, true],\n    ['logEnabled', 0, 1, false],\n    ['logPrepend', 0, 1, false],\n    ['logOffline', 0, 1, false],\n    ['logUniqueOnConnect', 0, 1, true],\n    ['enableURLDetection', 0, 1, true],\n    ['colors', 0, 4],\n    ['notifyMSPPlay', 0, 1, false],\n    ['CommandonClick', 0, 1, true],\n    ['allowEval', 0, 1, true],\n    ['allowEscape', 0, 1, true],\n    ['AutoCopySelectedToClipboard', 0, 1, false],\n    ['enableDebug', 0, 1, false],\n    ['editorPersistent', 0, 1, false],\n    ['askonclose', 0, 1, true],\n    ['dev', 0, 1, false],\n    //New settings\n    ['chat.captureLines', 0, 1, false],\n    ['chat.captureAllLines', 0, 1, false],\n    ['chat.captureReviews', 0, 1, false],\n    ['chat.captureTells', 0, 1, false],\n    ['chat.captureTalk', 0, 1, false],\n    ['chat.gag', 0, 1, false],\n    ['chat.CaptureOnlyOpen', 0, 1, false],\n    ['checkForUpdates', 0, 1, false],\n    ['autoCreateCharacter', 0, 1, false],\n    ['askonchildren', 0, 1, true],\n    ['mapper.legend', 0, 1, false],\n    ['mapper.room', 0, 1, false],\n    ['mapper.importType', 0, 2, 1],\n    ['mapper.vscroll', 0, 2, 0],\n    ['mapper.hscroll', 0, 2, 0],\n    ['mapper.scale', 0, 2, 1.0],\n    ['mapper.alwaysOnTop', 0, 1, false],\n    ['mapper.alwaysOnTopClient', 0, 1, true],\n    ['mapper.memory', 0, 1, false],\n    ['mapper.memorySavePeriod', 0, 2, 900000],\n    ['mapper.active.ID', 0, 0, null],\n    ['mapper.active.x', 0, 2, 0],\n    ['mapper.active.y', 0, 2, 0],\n    ['mapper.active.z', 0, 2, 0],\n    ['mapper.active.area', 0, 0, null],\n    ['mapper.active.zone', 0, 2, 0],\n    ['mapper.persistent', 0, 1, true],\n    ['profiles.split', 0, 2, -1],\n    ['profiles.askoncancel', 0, 1, true],\n    ['profiles.triggersAdvanced', 0, 1, false],\n    ['profiles.aliasesAdvanced', 0, 1, false],\n    ['profiles.buttonsAdvanced', 0, 1, false],\n    ['profiles.macrosAdvanced', 0, 1, false],\n    ['profiles.contextsAdvanced', 0, 1, false],\n    ['profiles.codeEditor', 0, 1, true],\n    ['profiles.watchFiles', 0, 1, true],\n    ['chat.alwaysOnTop', 0, 1, false],\n    ['chat.alwaysOnTopClient', 0, 1, true],\n    ['chat.log', 0, 1, false],\n    ['chat.persistent', 0, 1, false],\n    ['chat.zoom', 0, 2, 1],\n    ['chat.font', 0, 5, '\\'Courier New\\', Courier, monospace'],\n    ['chat.fontSize', 0, 0, '1em'],\n    ['title', 0, 0, '$t'],\n    ['logGagged', 0, 1, false],\n    ['logTimeFormat', 0, 0, 'YYYYMMDD-HHmmss'],\n    ['autoConnectDelay', 0, 2, 600],\n    ['autoLogin', 0, 1, true],\n    ['onDisconnect', 0, 2, OnDisconnect.ReconnectDialog],\n    ['enableKeepAlive', 0, 1, false],\n    ['keepAliveDelay', 0, 2, 0],\n    ['newlineShortcut', 0, 2, NewLineType.Ctrl],\n    ['logWhat', 0, 2, Log.Html],\n    ['logErrors', 0, 1, true],\n    ['showErrorsExtended', 0, 1, false],\n    ['reportCrashes', 0, 1, false],\n    ['enableCommands', 0, 1, true],\n    ['commandChar', 0, 0, '#', 1],\n    ['escapeChar', 0, 0, '\\\\', 1],\n    ['enableVerbatim', 0, 1, true],\n    ['verbatimChar', 0, 0, '`'],\n    ['soundPath', 0, 0, ''],\n    ['logPath', 0, 0, ''],\n    ['theme', 0, 0, ''],\n    ['gamepads', 0, 1, false],\n    ['buttons.connect', 0, 1, true],\n    ['buttons.characters', 0, 1, true],\n    ['buttons.preferences', 0, 1, true],\n    ['buttons.log', 0, 1, true],\n    ['buttons.clear', 0, 1, true],\n    ['buttons.lock', 0, 1, true],\n    ['buttons.map', 0, 1, true],\n    ['buttons.user', 0, 1, true],\n    ['buttons.mail', 0, 1, false],\n    ['buttons.compose', 0, 1, false],\n    ['buttons.immortal', 0, 1, true],\n    ['buttons.codeEditor', 0, 1, false],\n    ['find.case', 0, 1, false],\n    ['find.word', 0, 1, false],\n    ['find.reverse', 0, 1, false],\n    ['find.regex', 0, 1, false],\n    ['find.selection', 0, 1, false],\n    ['find.show', 0, 1, false],\n    ['display.split', 0, 1, false],\n    ['display.splitHeight', 0, 2, -1],\n    ['display.splitLive', 0, 1, true],\n    ['display.roundedOverlays', 0, 1, true],\n    ['backupLoad', 0, 2, BackupSelection.All],\n    ['backupSave', 0, 2, BackupSelection.All],\n    ['backupAllProfiles', 0, 1, true],\n    ['scrollLocked', 0, 1, false],\n    ['showStatus', 0, 1, true],\n    ['showCharacterManager', 0, 1, false],\n    ['showChat', 0, 1, false],\n    ['showEditor', 0, 1, false],\n    ['showArmor', 0, 1, false],\n    ['showStatusWeather', 0, 1, true],\n    ['showStatusLimbs', 0, 1, true],\n    ['showStatusHealth', 0, 1, true],\n    ['showStatusExperience', 0, 1, true],\n    ['showStatusPartyHealth', 0, 1, true],\n    ['showStatusCombatHealth', 0, 1, true],\n    ['showButtonBar', 0, 1, true],\n    ['allowNegativeNumberNeeded', 0, 1, false],\n    ['spellchecking', 0, 1, true],\n    ['hideOnMinimize', 0, 1, false],\n    ['showTrayIcon', 0, 1, false],\n    ['statusExperienceNeededProgressbar', 0, 1, false],\n    ['trayClick', 0, 2, 0],\n    ['trayDblClick', 0, 2, 0],\n    ['pasteSpecialPrefix', 0, 0, ''],\n    ['pasteSpecialPostfix', 0, 0, ''],\n    ['pasteSpecialReplace', 0, 0, ''],\n    ['pasteSpecialPrefixEnabled', 0, 1, true],\n    ['pasteSpecialPostfixEnabled', 0, 1, true],\n    ['pasteSpecialReplaceEnabled', 0, 1, true],\n    ['display.showSplitButton', 0, 1, true],\n    ['chat.split', 0, 1, false],\n    ['chat.splitHeight', 0, 2, -1],\n    ['chat.splitLive', 0, 1, true],\n    ['chat.roundedOverlays', 0, 1, true],\n    ['chat.showSplitButton', 0, 1, true],\n    ['chat.bufferSize', 0, 2, 500],\n    ['chat.flashing', 0, 1, false],\n    ['display.hideTrailingEmptyLine', 0, 1, true],\n    ['display.enableColors', 0, 1, true],\n    ['display.enableBackgroundColors', 0, 1, true],\n    ['enableSound', 0, 1, true],\n    ['allowHalfOpen', 0, 1, true],\n    ['editorClearOnSend', 0, 1, true],\n    ['editorCloseOnSend', 0, 1, true],\n    ['askOnCloseAll', 0, 1, true],\n    ['askonloadCharacter', 0, 1, true],\n    ['mapper.roomWidth', 0, 2, 200],\n    ['mapper.roomGroups', 0, 2, 1 | 2 | 4],\n    ['mapper.showInTaskBar', 0, 1, false],\n    ['profiles.enabled', 0, 4, []],\n    ['profiles.sortOrder', 0, 2, ProfileSortOrder.Priority | ProfileSortOrder.Index],\n    ['profiles.sortDirection', 0, 2, 1],\n    ['profiles.showInTaskBar', 0, 1, false],\n    ['profiles.profileSelected', 0, 0, 'default'],\n    ['profiles.profileExpandSelected', 0, 1, true],\n    ['chat.lines', 0, 4, []],\n    ['chat.showInTaskBar', 0, 1, false],\n    ['chat.showTimestamp', 0, 1, false],\n    ['chat.timestampFormat', 0, 0, '[[]MM-DD HH:mm:ss.SSS[]] '],\n    ['chat.tabWidth', 0, 2, 8],\n    ['chat.displayControlCodes', 0, 1, false],\n    ['chat.emulateTerminal', 0, 1, false],\n    ['chat.emulateControlCodes', 0, 1, true],\n    ['chat.wordWrap', 0, 1, false],\n    ['chat.wrapAt', 0, 2, 0],\n    ['chat.indent', 0, 2, 4],\n    ['chat.scrollLocked', 0, 1, false],\n    ['chat.find.case', 0, 1, false],\n    ['chat.find.word', 0, 1, false],\n    ['chat.find.reverse', 0, 1, false],\n    ['chat.find.regex', 0, 1, false],\n    ['chat.find.selection', 0, 1, false],\n    ['chat.find.show', 0, 1, false],\n    ['chat.find.highlight', 0, 1, false],\n    ['chat.find.location', 0, 4, [5, 20]],\n    ['codeEditor.showInTaskBar', 0, 1, false],\n    ['codeEditor.persistent', 0, 1, false],\n    ['codeEditor.alwaysOnTop', 0, 1, false],\n    ['codeEditor.alwaysOnTopClient', 0, 1, true],\n    ['autoTakeoverLogin', 0, 1, false],\n    ['fixHiddenWindows', 0, 1, true],\n    ['maxReconnectDelay', 0, 2, 3600],\n    ['enableBackgroundThrottling', 0, 1, true],\n    ['enableBackgroundThrottlingClients', 0, 1, false],\n    ['showInTaskBar', 0, 1, true],\n    ['showLagInTitle', 0, 1, false],\n    ['mspMaxRetriesOnError', 0, 2, 0],\n    ['logTimestamp', 0, 1, false],\n    ['logTimestampFormat', 0, 0, '[[]MM-DD HH:mm:ss.SSS[]] '],\n    ['disableTriggerOnError', 0, 1, true],\n    ['prependTriggeredLine', 0, 1, true],\n    ['enableParameters', 0, 1, true],\n    ['parametersChar', 0, 0, '%', 1],\n    ['enableNParameters', 0, 1, true],\n    ['nParametersChar', 0, 0, '$', 1],\n    ['enableParsing', 0, 1, true],\n    ['externalWho', 0, 1, true],\n    ['externalHelp', 0, 1, true],\n    ['watchForProfilesChanges', 0, 1, false],\n    ['onProfileChange', 0, 2, OnProfileChange.Nothing],\n    ['onProfileDeleted', 0, 2, OnProfileDeleted.Nothing],\n    ['enableDoubleParameterEscaping', 0, 1, false],\n    ['ignoreEvalUndefined', 0, 1, true],\n    ['enableInlineComments', 0, 1, true],\n    ['enableBlockComments', 0, 1, true],\n    ['inlineCommentString', 0, 0, '//'],\n    ['blockCommentString', 0, 0, '/*'],\n    ['allowCommentsFromCommand', 0, 1, false],\n    ['saveTriggerStateChanges', 0, 1, true],\n    ['groupProfileSaves', 0, 1, false],\n    ['groupProfileSaveDelay', 0, 2, 20000],\n    ['returnNewlineOnEmptyValue', 0, 1, false],\n    ['pathDelay', 0, 2, 0],\n    ['pathDelayCount', 0, 2, 1],\n    ['echoSpeedpaths', 0, 1, false],\n    ['alwaysShowTabs', 0, 1, false],\n    ['scriptEngineType', 0, SettingType.Number, ScriptEngineType.Simple],\n    ['initializeScriptEngineOnLoad', 0, SettingType.Boolean, false],\n    ['find.highlight', 0, SettingType.Boolean, false],\n    ['find.location', 0, SettingType.Custom, [5, 20]],\n    ['display.showInvalidMXPTags', 0, SettingType.Boolean, false],\n    ['display.showTimestamp', 0, SettingType.Boolean, false],\n    ['display.timestampFormat', 0, SettingType.String, '[[]MM-DD HH:mm:ss.SSS[]] '],\n    ['display.displayControlCodes', 0, SettingType.Boolean, false],\n    ['display.emulateTerminal', 0, SettingType.Boolean, false],\n    ['display.emulateControlCodes', 0, SettingType.Boolean, true],\n    ['display.wordWrap', 0, SettingType.Boolean, false],\n    ['display.tabWidth', 0, SettingType.Number, 8],\n    ['display.wrapAt', 0, SettingType.Number, 0],\n    ['display.indent', 0, SettingType.Number, 4],\n    ['statusWidth', 0, SettingType.Number, -1],\n    ['showEditorInTaskBar', 0, SettingType.Boolean, true],\n    ['trayMenu', 0, SettingType.Number, 0],\n    ['lockLayout', 0, SettingType.Boolean, false],\n    ['loadLayout', 0, SettingType.String, ''],\n    ['useSingleInstance', 0, SettingType.Boolean, true],\n    ['onSecondInstance', 0, SettingType.Number, 0],\n    ['characterManagerDblClick', 0, SettingType.Number, 0],\n    ['enableTabCompletion', SettingType.Boolean, true],\n    ['ignoreCaseTabCompletion', 0, SettingType.Boolean, false],\n    ['tabCompletionBufferLimit', 0, SettingType.Number, 100],\n    ['enableNotifications', 0, SettingType.Boolean, true],\n    ['echo', 0, SettingType.Number, Echo.None],\n    ['commandAutoSize', 0, SettingType.Boolean, false],\n    ['commandWordWrap', 0, SettingType.Boolean, false],\n    ['commandScrollbars', 0, SettingType.Boolean, false],\n    ['tabCompletionList', 0, SettingType.String, ''],\n    ['tabCompletionLookupType', 0, SettingType.Number, TabCompletion.PrependBuffer],\n    ['tabCompletionReplaceCasing', 0, SettingType.Number, 0],\n    ['characterManagerAddButtonAction', 0, SettingType.Number, 0],\n    ['enableCrashReporting', 0, SettingType.Boolean, false],\n    ['characterManagerPanelWidth', 0, SettingType.Number, 0],\n    ['ignoreInputLeadingWhitespace', 0, SettingType.Boolean, false],\n    ['profiles.find.case', 0, 1, false],\n    ['profiles.find.word', 0, 1, false],\n    ['profiles.find.reverse', 0, 1, false],\n    ['profiles.find.regex', 0, 1, false],\n    ['profiles.find.selection', 0, 1, false],\n    ['profiles.find.show', 0, 1, false],\n    ['profiles.find.value', 0, 1, false],\n    ['skipMore', 0, 1, false],\n    ['skipMoreDelay', 0, SettingType.Number, 5000],\n    ['commandMinLines', 0, SettingType.Number, 1],\n    ['backupReplaceCharacters', 0, SettingType.Boolean, true],\n    ['simpleAlarms', 0, SettingType.Boolean, false],\n    ['simpleEditor', 0, SettingType.Boolean, false]\n];\n\nexport const SettingProperties = ['bufferSize', 'commandDelay', 'commandDelayCount', 'commandHistorySize', 'fontSize', 'cmdfontSize', 'commandEcho', 'flashing', 'autoConnect', 'enableAliases', 'enableTriggers', 'enableMacros', 'showScriptErrors', 'commandStacking', 'commandStackingChar', 'htmlLog', 'keepLastCommand', 'enableMCCP', 'enableUTF8', 'font', 'cmdfont', 'mapper.follow', 'mapper.enabled', 'mapper.split', 'mapper.fill', 'showMapper', 'fullScreen', 'enableMXP', 'enableMSP', 'parseCommands', 'lagMeter', 'enablePing', 'enableEcho', 'enableSpeedpaths', 'speedpathsChar', 'parseSpeedpaths', 'profile', 'parseSingleQuotes', 'parseDoubleQuotes', 'logEnabled', 'logPrepend', 'logOffline', 'logUniqueOnConnect', 'enableURLDetection', 'notifyMSPPlay', 'CommandonClick', 'allowEval', 'allowEscape', 'AutoCopySelectedToClipboard', 'enableDebug', 'editorPersistent', 'askonclose', 'dev', 'chat.captureLines', 'chat.captureAllLines', 'chat.captureReviews', 'chat.captureTells', 'chat.captureTalk', 'chat.gag', 'chat.CaptureOnlyOpen', 'checkForUpdates', 'autoCreateCharacter', 'askonchildren', 'mapper.legend', 'mapper.room', 'mapper.importType', 'mapper.vscroll', 'mapper.hscroll', 'mapper.scale', 'mapper.alwaysOnTop', 'mapper.alwaysOnTopClient', 'mapper.memory', 'mapper.memorySavePeriod', 'mapper.active.ID', 'mapper.active.x', 'mapper.active.y', 'mapper.active.z', 'mapper.active.area', 'mapper.active.zone', 'mapper.persistent', 'profiles.split', 'profiles.askoncancel', 'profiles.triggersAdvanced', 'profiles.aliasesAdvanced', 'profiles.buttonsAdvanced', 'profiles.macrosAdvanced', 'profiles.contextsAdvanced', 'profiles.codeEditor', 'profiles.watchFiles', 'chat.alwaysOnTop', 'chat.alwaysOnTopClient', 'chat.log', 'chat.persistent', 'chat.zoom', 'chat.font', 'chat.fontSize', 'title', 'logGagged', 'logTimeFormat', 'autoConnectDelay', 'autoLogin', 'onDisconnect', 'enableKeepAlive', 'keepAliveDelay', 'newlineShortcut', 'logWhat', 'logErrors', 'showErrorsExtended', 'reportCrashes', 'enableCommands', 'commandChar', 'escapeChar', 'enableVerbatim', 'verbatimChar', 'soundPath', 'logPath', 'theme', 'gamepads', 'buttons.connect', 'buttons.characters', 'buttons.preferences', 'buttons.log', 'buttons.clear', 'buttons.lock', 'buttons.map', 'buttons.user', 'buttons.mail', 'buttons.compose', 'buttons.immortal', 'buttons.codeEditor', 'find.case', 'find.word', 'find.reverse', 'find.regex', 'find.selection', 'find.show', 'display.split', 'display.splitHeight', 'display.splitLive', 'display.roundedOverlays', 'backupLoad', 'backupSave', 'backupAllProfiles', 'backupReplaceCharacters', 'scrollLocked', 'showStatus', 'showCharacterManager', 'showChat', 'showEditor', 'showArmor', 'showStatusWeather', 'showStatusLimbs', 'showStatusHealth', 'showStatusExperience', 'showStatusPartyHealth', 'showStatusCombatHealth', 'showButtonBar', 'allowNegativeNumberNeeded', 'spellchecking', 'hideOnMinimize', 'showTrayIcon', 'statusExperienceNeededProgressbar', 'trayClick', 'trayDblClick', 'pasteSpecialPrefix', 'pasteSpecialPostfix', 'pasteSpecialReplace', 'pasteSpecialPrefixEnabled', 'pasteSpecialPostfixEnabled', 'pasteSpecialReplaceEnabled', 'display.showSplitButton', 'chat.split', 'chat.splitHeight', 'chat.splitLive', 'chat.roundedOverlays', 'chat.showSplitButton', 'chat.bufferSize', 'chat.flashing', 'display.hideTrailingEmptyLine', 'display.enableColors', 'display.enableBackgroundColors', 'enableSound', 'allowHalfOpen', 'editorClearOnSend', 'editorCloseOnSend', 'askOnCloseAll', 'askonloadCharacter', 'mapper.roomWidth', 'mapper.roomGroups', 'mapper.showInTaskBar', 'profiles.enabled', 'profiles.sortOrder', 'profiles.sortDirection', 'profiles.showInTaskBar', 'profiles.profileSelected', 'profiles.profileExpandSelected', 'chat.lines', 'chat.showInTaskBar', 'chat.showTimestamp', 'chat.timestampFormat', 'chat.tabWidth', 'chat.displayControlCodes', 'chat.emulateTerminal', 'chat.emulateControlCodes', 'chat.wordWrap', 'chat.wrapAt', 'chat.indent', 'chat.scrollLocked', 'chat.find.case', 'chat.find.word', 'chat.find.reverse', 'chat.find.regex', 'chat.find.selection', 'chat.find.show', 'chat.find.highlight', 'chat.find.location', 'codeEditor.showInTaskBar', 'codeEditor.persistent', 'codeEditor.alwaysOnTop', 'codeEditor.alwaysOnTopClient', 'autoTakeoverLogin', 'fixHiddenWindows', 'maxReconnectDelay', 'enableBackgroundThrottling', 'enableBackgroundThrottlingClients', 'showInTaskBar', 'showLagInTitle', 'mspMaxRetriesOnError', 'logTimestamp', 'logTimestampFormat', 'disableTriggerOnError', 'prependTriggeredLine', 'enableParameters', 'parametersChar', 'enableNParameters', 'nParametersChar', 'enableParsing', 'externalWho', 'externalHelp', 'watchForProfilesChanges', 'onProfileChange', 'onProfileDeleted', 'enableDoubleParameterEscaping', 'ignoreEvalUndefined', 'enableInlineComments', 'enableBlockComments', 'inlineCommentString', 'blockCommentString', 'allowCommentsFromCommand', 'saveTriggerStateChanges', 'groupProfileSaves', 'groupProfileSaveDelay', 'returnNewlineOnEmptyValue', 'pathDelay', 'pathDelayCount', 'echoSpeedpaths', 'alwaysShowTabs', 'scriptEngineType', 'initializeScriptEngineOnLoad', 'find.highlight', 'find.location', 'display.showInvalidMXPTags', 'display.showTimestamp', 'display.timestampFormat', 'display.displayControlCodes', 'display.emulateTerminal', 'display.emulateControlCodes', 'display.wordWrap', 'display.tabWidth', 'display.wrapAt', 'display.indent', 'statusWidth', 'showEditorInTaskBar', 'trayMenu', 'lockLayout', 'loadLayout', 'useSingleInstance', 'statusWidth', 'characterManagerDblClick', 'warnAdvancedSettings', 'showAdvancedSettings', 'enableTabCompletion', 'tabCompletionBufferLimit', 'ignoreCaseTabCompletion', 'enableNotifications', 'commandAutoSize', 'commandWordWrap', 'commandScrollbars', 'tabCompletionList', 'tabCompletionLookupType', 'tabCompletionReplaceCasing', 'characterManagerAddButtonAction', 'enableCrashReporting', 'characterManagerPanelWidth', 'ignoreInputLeadingWhitespace', 'profiles.find.case', 'profiles.find.word', 'profiles.find.reverse', 'profiles.find.regex', 'profiles.find.selection', 'profiles.find.show', 'profiles.find.value', 'skipMore', 'skipMoreDelay', 'commandMinLines', 'simpleAlarms', 'simpleEditor'];\n\n/**\n * Class that contains all options, sets default values and allows loading and saving to json files\n *\n * @export\n * @class Settings\n */\nexport class Settings {\n    public colors: string[];\n    public enableTriggers: boolean;\n    public showErrorsExtended: boolean;\n    public logErrors: boolean;\n    public commandEcho: boolean;\n    public autoConnect: boolean;\n    public keepLastCommand: boolean;\n\n    constructor() {\n        /*\n        let subs;\n        let obj;\n        let k;\n        let kl;\n        */\n        for (var s = 0, sl = SettingList.length; s < sl; s++) {\n            if (SettingList[s][2] === SettingType.Custom) continue;\n            this[SettingList[s][0]] = Settings.getValue(SettingList[s][0]);\n            /*\n            subs = SettingList[s][0].split('.');\n            if ((kl = subs.length) > 1) {\n                obj = this[subs[0]] = {};\n                for (k = 1; k < kl - 1; k++) {\n                    obj[subs[k]] = {};\n                }\n                obj[subs[subs.length-1]] = Settings.getValue(SettingList[s][0]);\n            }\n            */\n        }\n        this.colors = Settings.getValue('colors');\n    }\n\n    public static settingError = false;\n\n    public static getValue(setting: string, defaultValue?: any) {\n        var tmp;\n        if (Settings.settingError) {\n            if (defaultValue === null || typeof defaultValue == 'undefined')\n                return Settings.defaultValue(setting);\n            return defaultValue;\n        }\n        try {\n            tmp = $.jStorage.get(setting);\n            if (typeof tmp == 'undefined' || tmp === null) {\n                if (defaultValue === null || typeof defaultValue == 'undefined')\n                    return Settings.defaultValue(setting);\n                return defaultValue;\n            }\n            switch (setting) {\n                case 'showChat':\n                case 'showStatus':\n                case 'showButtons':\n                case 'enableCommands':\n                case 'enableVerbatim':\n                case 'allowEscape':\n                case 'autoConnect':\n                case 'mapFollow':\n                case 'mapEnabled':\n                case 'flashing':\n                case 'commandEcho':\n                case 'enableAliases':\n                case 'enableTriggers':\n                case 'enableButtons':\n                case 'enableMacros':\n                case 'commandStacking':\n                case 'htmlLog':\n                case 'keepLastCommand':\n                case 'fullScreen':\n                case 'enableMXP':\n                case 'enableURLDetection':\n                case 'enableMCCP':\n                case 'enableUTF8':\n                case 'parseCommands':\n                case 'lagMeter':\n                case 'showScriptErrors':\n                case 'enablePing':\n                case 'enableEcho':\n                case 'enableSpeedpaths':\n                case 'parseSpeedpaths':\n                case 'MapperSplitArea':\n                case 'parseSingleQuotes':\n                case 'parseDoubleQuotes':\n                case 'logEnabled':\n                case 'logOffline':\n                case 'logPrepend':\n                case 'logUniqueOnConnect':\n                case 'toolsPinned':\n                case 'notifyMSPPlay':\n                case 'CommandonClick':\n                case 'allowEval':\n                case 'disableTriggerOnError':\n                case 'prependTriggeredLine':\n                case 'chat.captureLines':\n                case 'chat.captureAllLines':\n                case 'chat.captureReviews':\n                case 'chat.captureTells':\n                case 'chat.captureTalk':\n                case 'chat.gag':\n                case 'chat.CaptureOnlyOpen':\n                case 'simpleAlarms':\n                case 'simpleEditor':\n                    if (tmp == 1)\n                        return true;\n                    return false;\n                case 'colors':\n                case 'chat.lines':\n                    if (tmp === null || typeof tmp == 'undefined' || tmp.length === 0)\n                        return [];\n                    return JSON.parse(tmp);\n            }\n            return tmp;\n        }\n        catch (err) {\n            if (!Settings.settingError) {\n                alert('Unable to save to localStorage so reverting to default,\\n\\nError description: ' + err.message);\n                Settings.settingError = true;\n            }\n            if (defaultValue === null || typeof defaultValue == 'undefined')\n                return Settings.defaultValue(defaultValue);\n            return defaultValue;\n        }\n    }\n\n    public static setValue(setting: string, value) {\n        switch (setting) {\n            case 'colors':\n            case 'chat.lines':\n                if (value === null || typeof value == 'undefined' || value.length === 0)\n                    $.jStorage.deleteKey(setting);\n                else\n                    $.jStorage.set(setting, JSON.stringify(value));\n                break;\n            default:\n                if (typeof value == 'boolean') {\n                    if (value)\n                        $.jStorage.set(setting, 1);\n                    else\n                        $.jStorage.set(setting, 0);\n                }\n                else\n                    $.jStorage.set(setting, value);\n                break;\n        }\n    }\n\n    public static clearValue(setting: string) {\n        $.jStorage.deleteKey(setting);\n    }\n\n    public static defaultValue(setting) {\n        switch (setting) {\n            case 'bufferSize': return 500;\n            case 'commandDelay': return 500;\n            case 'commandDelayCount': return 5;\n            case 'commandHistorySize': return 20;\n            case 'fontSize': return '1em';\n            case 'cmdfontSize': return '1em';\n            case 'commandEcho': return true;\n            case 'flashing': return false;\n            case 'autoConnect': return true;\n            case 'enableAliases': return true;\n            case 'enableTriggers': return true;\n            case 'enableMacros': return true;\n            case 'showScriptErrors': return false;\n            case 'commandStacking': return true;\n            case 'commandStackingChar': return ';';\n            case 'htmlLog': return true;\n            case 'keepLastCommand': return true;\n            case 'enableMCCP': return true;\n            case 'enableUTF8': return true;\n            case 'font': return '\\'Courier New\\', Courier, monospace';\n            case 'cmdfont': return '\\'Courier New\\', Courier, monospace';\n            case 'mapFollow':\n            case 'mapper.follow': return true;\n            case 'mapEnabled':\n            case 'mapper.enabled': return true;\n            case 'MapperSplitArea':\n            case 'mapper.split': return false;\n            case 'MapperFillWalls':\n            case 'mapper.fill': return false;\n            case 'MapperOpen':\n            case 'showMapper': return false;\n            case 'fullScreen': return false;\n            case 'enableMXP': return true;\n            case 'enableMSP': return true;\n            case 'parseCommands': return true;\n            case 'lagMeter': return false;\n            case 'enablePing': return false;\n            case 'enableEcho': return true;\n            case 'enableSpeedpaths': return true;\n            case 'speedpathsChar': return '!';\n            case 'parseSpeedpaths': return true;\n            case 'profile': return 'Default';\n            case 'parseSingleQuotes': return false;\n            case 'parseDoubleQuotes': return true;\n            case 'logEnabled': return false;\n            case 'logPrepend': return false;\n            case 'logOffline': return false;\n            case 'logUniqueOnConnect': return true;\n            case 'enableURLDetection': return true;\n            case 'notifyMSPPlay': return false;\n            case 'CommandonClick': return true;\n            case 'allowEval': return true;\n            case 'allowEscape': return true;\n            case 'AutoCopySelectedToClipboard': return false;\n            case 'enableDebug': return false;\n            case 'editorPersistent': return false;\n            case 'askonclose': return true;\n            case 'dev': return false;\n            //New settings\n            case 'chat.captureLines': return false;\n            case 'chat.captureAllLines': return false;\n            case 'chat.captureReviews': return false;\n            case 'chat.captureTells': return false;\n            case 'chat.captureTalk': return false;\n            case 'chat.gag': return false;\n            case 'chat.CaptureOnlyOpen': return false;\n            case 'checkForUpdates': return false;\n            case 'autoCreateCharacter': return false;\n            case 'askonchildren': return true;\n            case 'mapper.legend': return false;\n            case 'mapper.room': return false;\n            case 'mapper.importType': return 1;\n            case 'mapper.vscroll': return 0;\n            case 'mapper.hscroll': return 0;\n            case 'mapper.scale': return 1.0;\n            case 'mapper.active': return {\n                ID: null,\n                x: 0,\n                y: 0,\n                z: 0,\n                area: null,\n                zone: 0\n            };\n            case 'mapper.active.ID': return null;\n            case 'mapper.active.x': return 0;\n            case 'mapper.active.y': return 0;\n            case 'mapper.active.z': return 0;\n            case 'mapper.active.area': return null;\n            case 'mapper.active.zone': return 0;\n            case 'profiles.split': return -1;\n            case 'profiles.askoncancel': return true;\n            case 'profiles.triggersAdvanced': return false;\n            case 'profiles.aliasesAdvanced': return false;\n            case 'profiles.buttonsAdvanced': return false;\n            case 'profiles.macrosAdvanced': return false;\n            case 'profiles.contextsAdvanced': return false;\n            case 'profiles.codeEditor': return true;\n            case 'chat.log': return false;\n            case 'chat.zoom': return 1;\n            case 'chat.font': return '\\'Courier New\\', Courier, monospace';\n            case 'chat.fontSize': return '1em';\n            case 'title': return '$t';\n            case 'logGagged': return false;\n            case 'logTimeFormat': return 'YYYYMMDD-HHmmss';\n            case 'autoConnectDelay': return 600;\n            case 'autoLogin': return true;\n            case 'onDisconnect': return OnDisconnect.ReconnectDialog;\n            case 'enableKeepAlive': return false;\n            case 'keepAliveDelay': return 0;\n            case 'newlineShortcut': return NewLineType.Ctrl;\n            case 'logWhat': return Log.Html;\n            case 'logErrors': return true;\n            case 'showErrorsExtended': return false;\n            case 'reportCrashes': return false;\n            case 'enableCommands': return true;\n            case 'commandChar': return '#';\n            case 'escapeChar': return '\\\\';\n            case 'enableVerbatim': return true;\n            case 'verbatimChar': return '`';\n            case 'soundPath': return '';\n            case 'logPath': return '';\n            case 'theme': return '';\n            case 'gamepads': return false;\n            case 'backupLoad': return BackupSelection.All;\n            case 'backupSave': return BackupSelection.All;\n            case 'backupAllProfiles': return true;\n            case 'backupReplaceCharacters': return true;\n            case 'scrollLocked': return false;\n            case 'showStatus': return true;\n            case 'showChat': return false;\n            case 'showEditor': return false;\n            case 'showArmor': return false;\n            case 'showStatusWeather': return true;\n            case 'showStatusLimbs': return true;\n            case 'showStatusHealth': return true;\n            case 'showStatusExperience': return true;\n            case 'showStatusPartyHealth': return true;\n            case 'showStatusCombatHealth': return true;\n            case 'allowNegativeNumberNeeded': return false;\n            case 'spellchecking': return true;\n            case 'statusExperienceNeededProgressbar': return false;\n            case 'pasteSpecialPrefix': return '';\n            case 'pasteSpecialPostfix': return '';\n            case 'pasteSpecialReplace': return '';\n            case 'pasteSpecialPrefixEnabled': return true;\n            case 'pasteSpecialPostfixEnabled': return true;\n            case 'pasteSpecialReplaceEnabled': return true;\n            case 'display.showSplitButton': return true;\n            case 'chat.bufferSize': return 500;\n            case 'chat.flashing': return false;\n            case 'display.hideTrailingEmptyLine': return true;\n            case 'display.enableColors': return true;\n            case 'display.enableBackgroundColors': return true;\n            case 'enableSound': return true;\n            case 'editorClearOnSend': return true;\n            case 'editorCloseOnSend': return true;\n            case 'askOnCloseAll': return true;\n            case 'askonloadCharacter': return true;\n            case 'mapper.roomWidth': return 200;\n            case 'mapper.roomGroups': return 1 | 2 | 4;\n            case 'mapper.showInTaskBar': return false;\n            case 'profiles.enabled': return [];\n            case 'profiles.sortOrder': return ProfileSortOrder.Priority | ProfileSortOrder.Index;\n            case 'profiles.sortDirection': return 1;\n            case 'profiles.profileSelected': return 'default';\n            case 'profiles.profileExpandSelected': return true;\n            case 'chat.lines': return [];\n            case 'chat.showTimestamp': return false;\n            case 'chat.timestampFormat': return '[[]MM-DD HH:mm:ss.SSS[]] ';\n            case 'chat.tabWidth': return 8;\n            case 'chat.displayControlCodes': return false;\n            case 'chat.emulateTerminal': return false;\n            case 'chat.emulateControlCodes': return true;\n            case 'chat.wordWrap': return false;\n            case 'chat.wrapAt': return 0;\n            case 'chat.indent': return 4;\n            case 'autoTakeoverLogin': return false;\n            case 'maxReconnectDelay': return 3600;\n            case 'showLagInTitle': return false;\n            case 'mspMaxRetriesOnError': return 0;\n            case 'logTimestamp': return false;\n            case 'logTimestampFormat': return '[[]MM-DD HH:mm:ss.SSS[]] ';\n            case 'disableTriggerOnError': return true;\n            case 'prependTriggeredLine': return true;\n            case 'enableParameters': return true;\n            case 'parametersChar': return '%';\n            case 'enableNParameters': return true;\n            case 'nParametersChar': return '$';\n            case 'enableParsing': return true;\n            case 'onProfileChange': return OnProfileChange.Nothing;\n            case 'onProfileDeleted': return OnProfileDeleted.Nothing;\n            case 'enableDoubleParameterEscaping': return false;\n            case 'ignoreEvalUndefined': return true;\n            case 'enableInlineComments': return true;\n            case 'enableBlockComments': return true;\n            case 'inlineCommentString': return '//';\n            case 'blockCommentString': return '/*';\n            case 'allowCommentsFromCommand': return false;\n            case 'saveTriggerStateChanges': return true;\n            case 'groupProfileSaves': return false;\n            case 'groupProfileSaveDelay': return 20000;\n            case 'returnNewlineOnEmptyValue': return false;\n            case 'pathDelay': return 0;\n            case 'pathDelayCount': return 1;\n            case 'echoSpeedpaths': return false;\n            case 'scriptEngineType': return ScriptEngineType.Simple;\n            case 'initializeScriptEngineOnLoad': return false;\n            case 'display.showInvalidMXPTags': return false;\n            case 'display.showTimestamp': return false;\n            case 'display.timestampFormat': return '[[]MM-DD HH:mm:ss.SSS[]] ';\n            case 'display.displayControlCodes': return false;\n            case 'display.emulateTerminal': return false;\n            case 'display.emulateControlCodes': return true;\n            case 'display.wordWrap': return false;\n            case 'display.tabWidth': return 8;\n            case 'display.wrapAt': return 0;\n            case 'display.indent': return 4;\n            case 'statusWidth': return -1;\n            case 'extensions': return {};\n            case 'warnAdvancedSettings': return true;\n            case 'showAdvancedSettings': return false;\n            case 'enableTabCompletion': return true;\n            case 'ignoreCaseTabCompletion': return false;\n            case 'tabCompletionBufferLimit': return 100;\n            case 'enableNotifications': return true;\n            case 'echo': return Echo.None;\n            case 'commandAutoSize': return false;\n            case 'commandWordWrap': return false;\n            case 'commandMinLines': return 1;\n            case 'tabCompletionLookupType': return TabCompletion.PrependBuffer;\n            case 'tabCompletionList': return '';\n            case 'tabCompletionReplaceCasing': return 0;\n            case 'ignoreInputLeadingWhitespace': return false;\n            case 'skipMore': return false;\n            case 'skipMoreDelay': return 5000;\n            case 'simpleAlarms': return false;\n            case 'simpleEditor': return false;\n        }\n        return null;\n    }\n}", "//spell-checker:ignore displaytype, submenu, triggernewline, triggerprompt\nimport { clone, keyCodeToChar, SortItemArrayByPriority, splitQuoted, isValidIdentifier } from './library';\ndeclare let localforage;\n\nexport enum MacroModifiers {\n    None = 0,\n    Alt = 2,\n    Ctrl = 4,\n    Shift = 8,\n    Meta = 16,\n    All = Alt | Ctrl | Shift | Meta\n}\n\nexport enum ItemDisplayType {\n    Text = 0,\n    Function = 1\n}\n\nexport enum ItemStyle {\n    Text = 0,\n    Parse = 1,\n    Script = 2\n}\n\nexport enum TriggerType {\n    Regular = 0,\n    CommandInputRegular = 1,\n    Event = 2,\n    Alarm = 3,\n    Pattern = 8,\n    CommandInputPattern = 16,\n    Expression = 1 << 6,\n    LoopExpression = 1 << 7\n}\n\nexport enum TriggerTypes {\n    None = 0,\n    CommandInputRegular = 1,\n    Event = 2,\n    Regular = 4,\n    Pattern = 8,\n    CommandInputPattern = 16,\n    Alarm = 32,\n    Expression = 1 << 6,\n    LoopExpression = 1 << 7\n}\n\nexport enum SubTriggerTypes {\n    Skip = 1 << 9,\n    Wait = 1 << 10,\n    LoopPattern = 1 << 12,\n    LoopLines = 1 << 13,\n    Duration = 1 << 14,\n    WithinLines = 1 << 15,\n    Manual = 1 << 16,\n    ReParse = 1 << 17,\n    ReParsePattern = 1 << 18\n}\n\nexport enum VariableType {\n    Auto = 1,\n    Integer = 2,\n    StringExpanded = 3,\n    StringLiteral = 4,\n    StringList = 5,\n    Record = 6,\n    Float = 7,\n    Array = 8\n}\n\nexport function MacroDisplay(item: Macro) {\n    const d = [];\n    if (item.gamepad > 0) {\n        d.push('Gamepad ' + item.gamepad);\n        if (item.key > 0)\n            d.push('Button ' + item.key);\n        else if (item.gamepadAxes < 0)\n            d.push('Axis ' + -item.gamepadAxes);\n        else if (item.gamepadAxes > 0)\n            d.push('Axis ' + item.gamepadAxes);\n        if (d.length === 1)\n            return 'None';\n        return d.join('+');\n    }\n    if (item.key === 0) {\n        if (item.name && item.name.length > 0)\n            return 'None - ' + item.name;\n        return 'None';\n    }\n    if ((item.modifiers & MacroModifiers.Ctrl) === MacroModifiers.Ctrl)\n        d.push('Ctrl');\n    if ((item.modifiers & MacroModifiers.Alt) === MacroModifiers.Alt)\n        d.push('Alt');\n    if ((item.modifiers & MacroModifiers.Shift) === MacroModifiers.Shift)\n        d.push('Shift');\n    if ((item.modifiers & MacroModifiers.Meta) === MacroModifiers.Meta)\n        d.push('Meta');\n    if (keyCodeToChar[item.key])\n        d.push(keyCodeToChar[item.key]);\n    else if (item.name && item.name.length > 0)\n        return 'None - ' + item.name;\n    else\n        return 'None';\n    if (item.name && item.name.length > 0)\n        return d.join('+') + ' - ' + item.name;\n    return d.join('+');\n}\n\nexport class Alarm {\n    public parent: Trigger;\n    public pattern: string;\n    public temp: boolean = false;\n    public start: boolean = false;\n    public seconds: number = -1;\n    public secondsWildcard: boolean = true;\n    public hours: number = -1;\n    public hoursWildcard: boolean = true;\n    public minutes: number = -1;\n    public minutesWildcard: boolean = true;\n    public startTime: number;\n    public suspended: number = 0;\n    public restart: number = 0;\n    public tempTime: number;\n    public prevTime: number;\n\n    constructor(data?, pattern?) {\n        if (typeof data === 'string') {\n            pattern = data;\n            data = 0;\n        }\n        this.parent = data;\n        this.pattern = pattern;\n        this.startTime = Date.now();\n        this.prevTime = this.startTime;\n    }\n\n    public static parse(parent, pattern?: string, readOnly?: boolean): Alarm {\n        if (typeof parent === 'string') {\n            pattern = parent;\n            parent = 0;\n        }\n        if (!pattern || pattern.length === 0) {\n            if (typeof parent === 'object')\n                pattern = parent.pattern;\n            else\n                throw new Error('Blank pattern');\n        }\n        const t = new Alarm(parent, pattern);\n        while (pattern[0] === '-' || pattern[0] === '+') {\n            if (pattern[0] === '-')\n                t.start = true;\n            else if (pattern[0] === '+')\n                t.temp = true;\n            pattern = pattern.substr(1);\n        }\n        if (pattern !== '*') {\n            const parts = pattern.split(':');\n            let tmp;\n            if (parts.length === 0)\n                throw new Error('Invalid format: ' + pattern);\n            if (parts.length === 1) {\n                if (parts[0] === '*') {\n                    t.secondsWildcard = true;\n                    t.seconds = -1;\n                }\n                else {\n                    if (parts[0][0] === '*') {\n                        t.secondsWildcard = true;\n                        parts[0] = parts[0].substr(1);\n                    }\n                    else\n                        t.secondsWildcard = false;\n                    tmp = parseInt(parts[0], 10);\n                    if (isNaN(tmp))\n                        throw new Error('Invalid Format: ' + parts[0]);\n                    if (tmp < 0)\n                        throw new Error('Seconds must be greater than or equal to 0.');\n                    else if (tmp > 59)\n                        t.secondsWildcard = true;\n                    t.seconds = tmp;\n                }\n            }\n            else if (parts.length === 2) {\n                if (parts[0] === '*') {\n                    t.minutesWildcard = true;\n                    t.minutes = -1;\n                }\n                else {\n                    if (parts[0][0] === '*') {\n                        t.minutesWildcard = true;\n                        parts[0] = parts[0].substr(1);\n                    }\n                    else\n                        t.minutesWildcard = false;\n                    tmp = parseInt(parts[0], 10);\n                    if (isNaN(tmp))\n                        throw new Error('Invalid Format: ' + parts[0]);\n                    if (tmp < 0 || tmp > 59)\n                        throw new Error('Minutes can only be 0 to 59');\n                    t.minutes = tmp;\n                }\n                if (parts[1] === '*') {\n                    t.secondsWildcard = true;\n                    t.seconds = -1;\n                }\n                else {\n                    if (parts[1][0] === '*') {\n                        t.secondsWildcard = true;\n                        parts[1] = parts[1].substr(1);\n                    }\n                    else\n                        t.secondsWildcard = false;\n                    tmp = parseInt(parts[1], 10);\n                    if (isNaN(tmp))\n                        throw new Error('Invalid Format: ' + parts[1]);\n                    if (tmp < 0 || tmp > 59)\n                        throw new Error('Seconds can only be 0 to 59');\n                    t.seconds = tmp;\n                }\n            }\n            else {\n                if (parts[0] === '*') {\n                    t.hoursWildcard = true;\n                    t.hours = -1;\n                }\n                else {\n                    if (parts[0][0] === '*') {\n                        t.hoursWildcard = true;\n                        parts[0] = parts[0].substr(1);\n                    }\n                    else\n                        t.hoursWildcard = false;\n                    tmp = parseInt(parts[0], 10);\n                    if (isNaN(tmp))\n                        throw new Error('Invalid Format: ' + parts[0]);\n                    if (tmp < 0 || tmp > 23)\n                        throw new Error('Hours can only be 0 to 23');\n                    t.hours = tmp;\n                }\n                if (parts[1] === '*') {\n                    t.minutesWildcard = true;\n                    t.seconds = -1;\n                }\n                else {\n                    if (parts[1][0] === '*') {\n                        t.minutesWildcard = true;\n                        parts[1] = parts[1].substr(1);\n                    }\n                    else\n                        t.minutesWildcard = false;\n                    tmp = parseInt(parts[1], 10);\n                    if (isNaN(tmp))\n                        throw new Error('Invalid Format: ' + parts[1]);\n                    if (tmp < 0 || tmp > 59)\n                        throw new Error('Minutes can only be 0 to 59');\n                    t.minutes = tmp;\n                }\n                if (parts[2] === '*') {\n                    t.secondsWildcard = true;\n                    t.seconds = -1;\n                }\n                else {\n                    if (parts[2][0] === '*') {\n                        t.secondsWildcard = true;\n                        parts[2] = parts[2].substr(2);\n                    }\n                    else\n                        t.secondsWildcard = false;\n                    tmp = parseInt(parts[2], 10);\n                    if (isNaN(tmp))\n                        throw new Error('Invalid Format: ' + parts[2]);\n                    if (tmp < 0 || tmp > 59)\n                        throw new Error('Seconds can only be 0 to 59');\n                    t.seconds = tmp;\n                }\n            }\n        }\n        if (readOnly)\n            t.temp = false;\n        return t;\n    }\n\n    public setTempTime(value: number) {\n        if (!value)\n            this.tempTime = 0;\n        else\n            this.tempTime = Date.now() + value;\n    }\n}\n\nexport class Item {\n    public name: string = '';\n    public priority: number = 0;\n    public display: string = 'name';\n    public displaytype: ItemDisplayType = ItemDisplayType.Text;\n    public value: string = '';\n    public style: ItemStyle = ItemStyle.Parse;\n    public group: string = '';\n    public enabled: boolean = true;\n    public notes: string = '';\n    public profile: Profile;\n\n    constructor(data?, profile?) {\n        if (typeof data === 'object') {\n            let prop;\n            for (prop in data) {\n                if (!data.hasOwnProperty(prop)) {\n                    continue;\n                }\n                this[prop] = data[prop];\n            }\n        }\n        this.profile = profile;\n    }\n\n    public clone() {\n        return new Item(this);\n    }\n}\n\nexport class Button extends Item {\n    public caption: string = '';\n    public icon: string = '';\n    public append: boolean = false;\n    public send: boolean = true;\n    public chain: boolean = false;\n    public stretch: boolean = false;\n    public parse: boolean = false;\n    public top: number = -1;\n    public left: number = -1;\n    public right: number = -1;\n    public bottom: number = -1;\n    public width: number = 64;\n    public height: number = 64;\n\n    constructor(data?, profile?) {\n        super(data);\n        this.caption = 'NewButton';\n        this.display = 'caption';\n        if (typeof data === 'object') {\n            let prop;\n            for (prop in data) {\n                if (!data.hasOwnProperty(prop)) {\n                    continue;\n                }\n                this[prop] = data[prop];\n            }\n        }\n        this.profile = profile;\n    }\n\n    public clone() {\n        return new Button(this);\n    }\n}\n\nexport class Macro extends Item {\n    public key: number = 0;\n    public append: boolean = false;\n    public send: boolean = true;\n    public modifiers: MacroModifiers = MacroModifiers.None;\n    public chain: boolean = false;\n    public gamepad: number = 0;\n    public gamepadAxes: number = 0;\n\n    constructor(data?, profile?) {\n        super();\n        this.display = 'return MacroDisplay(item)';\n        this.displaytype = ItemDisplayType.Function;\n        if (typeof data === 'object') {\n            let prop;\n            for (prop in data) {\n                if (!data.hasOwnProperty(prop)) {\n                    continue;\n                }\n                this[prop] = data[prop];\n            }\n        }\n        this.profile = profile;\n    }\n\n    public clone() {\n        return new Macro(this);\n    }\n}\n\nexport class Alias extends Item {\n    public pattern: string = 'NewAlias';\n    public regexp: boolean = false;\n    public multi: boolean = false;\n    public append: boolean = true;\n    public params: string = '';\n\n    constructor(pattern?: any, value?: string, profile?) {\n        super();\n        if (typeof pattern === 'string')\n            this.pattern = pattern;\n        if (value != null)\n            this.value = value;\n        this.display = 'pattern';\n        if (typeof pattern === 'object') {\n            let prop;\n            for (prop in pattern) {\n                if (!pattern.hasOwnProperty(prop)) {\n                    continue;\n                }\n                this[prop] = pattern[prop];\n            }\n        }\n        this.profile = profile;\n    }\n\n    public clone() {\n        return new Alias(this);\n    }\n}\n\nexport class Trigger extends Item {\n    public pattern: string = 'NewTrigger';\n    public verbatim: boolean = false;\n    public triggerNewline: boolean = true;\n    public triggerPrompt: boolean = false;\n    public type: TriggerType | SubTriggerTypes = TriggerType.Regular;\n    public temp: boolean = false;\n    public caseSensitive: boolean = false;\n    public raw: boolean = false;\n    public state: number = 0;\n    public params: string = '';\n    public triggers: Trigger[] = [];\n    public fired: boolean = false;\n\n    constructor(data?, profile?) {\n        super(data);\n        this.display = 'pattern';\n        if (typeof data === 'object') {\n            let prop;\n            for (prop in data) {\n                if (!data.hasOwnProperty(prop)) {\n                    continue;\n                }\n                if (prop === 'triggers') {\n                    this.triggers = [];\n                    const il = data.triggers.length;\n                    for (let i = 0; i < il; i++) {\n                        this.triggers.push(new Trigger(data.triggers[i]));\n                    }\n                }\n                else\n                    this[prop] = data[prop];\n            }\n        }\n        this.profile = profile;\n    }\n\n    public clone() {\n        return new Trigger(this);\n    }\n}\n\nexport class Context extends Item {\n    public caption: string = '';\n    public icon: string = '';\n    public append: boolean = false;\n    public send: boolean = true;\n    public chain: boolean = false;\n    public parent: string = '';\n    public items: Context[] = [];\n    public parse: boolean = false;\n    constructor(data?, profile?) {\n        super(data);\n        this.caption = 'NewContext';\n        this.display = 'caption';\n        if (typeof data === 'object') {\n            let prop;\n            for (prop in data) {\n                if (!data.hasOwnProperty(prop)) {\n                    continue;\n                }\n                if (prop === 'items') {\n                    let i = 0;\n                    const il = data[prop].length;\n                    for (; i < il; i++)\n                        this.items.push(new Context(data[prop][i]));\n                }\n                else\n                    this[prop] = data[prop];\n            }\n        }\n        this.profile = profile;\n    }\n\n    public clone() {\n        return new Context(this);\n    }\n}\n\nexport class Variable extends Item {\n    private _type: string = 'string';\n\n    public type: VariableType = VariableType.Auto;\n    public defaultValue: string = '';\n    public useDefault: boolean = false;\n    public params: string = '';\n\n    public set setValue(value: any) {\n        switch (this.type) {\n            case VariableType.Integer:\n                if (typeof value === 'string') {\n                    value = parseInt(value, 10);\n                    if (isNaN(value))\n                        value = 0;\n                }\n                else if (typeof value === 'boolean')\n                    value = value ? 1 : 0;\n                break;\n            case VariableType.Float:\n                if (typeof value === 'string') {\n                    value = parseFloat(value);\n                    if (isNaN(value))\n                        value = 0.0;\n                }\n                else if (typeof value === 'boolean')\n                    value = value ? 1.0 : 0.0;\n                break;\n        }\n        this.value = value;\n        this._type = typeof value;\n    }\n    public get getValue(): any {\n        switch (this.type) {\n            case VariableType.Auto:\n                if (typeof this.value !== this._type) {\n                    switch (this._type) {\n                        case 'number':\n                            return Number(this.value);\n                        case 'string':\n                            return this.value.toString();\n                        case 'boolean':\n                            return Boolean(this.value);\n                    }\n                }\n                return this.value;\n            case VariableType.Float:\n                return parseFloat(this.value);\n            case VariableType.Integer:\n                return parseInt(this.value, 10);\n            case VariableType.Record:\n                if (typeof this.value === 'string')\n                    try {\n                        return JSON.parse(this.value);\n                    }\n                    catch {\n                        return this.value;\n                    }\n                return this.value;\n            case VariableType.StringList:\n                if (typeof this.value === 'string')\n                    return splitQuoted(this.value, '|');\n                return this.value;\n        }\n        return this.value;\n    }\n\n    constructor(data?, profile?) {\n        super(data);\n        this.profile = profile;\n        if (this.useDefault)\n            this.setValue(this.defaultValue);\n    }\n\n    public clone() {\n        return new Variable(this);\n    }\n\n    public toString() {\n        switch (this.type) {\n            case VariableType.Record:\n                if (typeof this.value === 'string')\n                    return this.value;\n                return JSON.stringify(this.value);\n            case VariableType.StringList:\n                if (typeof this.value === 'string')\n                    return this.value;\n                return '\"' + (<any[]>this.value).join('\"|\"') + '\"';\n        }\n        return this.value?.toString();\n    }\n}\n\nexport class Profile {\n    public name: string = '';\n    public file: string = '';\n    public priority: number = 0;\n    public enabled: boolean = true;\n    public aliases: Alias[] = [];\n    public triggers: Trigger[] = [];\n    public macros: Macro[] = [];\n    public buttons: Button[] = [];\n    public contexts: Context[] = [];\n    public enableMacros: boolean = true;\n    public enableTriggers: boolean = true;\n    public enableAliases: boolean = true;\n    public enableButtons: boolean = true;\n    public enableContexts: boolean = true;\n    public enableDefaultContext: boolean = true;\n\n    constructor(name?: (string | boolean), defaults?: boolean) {\n        if (typeof name === 'string') {\n            this.name = name;\n            this.file = name.toLowerCase();\n            if (defaults == null || defaults)\n                this.macros = Profile.DefaultMacros;\n        }\n        else if (typeof name === 'boolean') {\n            if (name)\n                this.macros = Profile.DefaultMacros;\n        }\n        else if (defaults == null || defaults)\n            this.macros = Profile.DefaultMacros;\n    }\n\n    static get Default(): Profile {\n        return new Profile('Default');\n    }\n\n    static get DefaultMacros(): Macro[] {\n        const data = [\n            {\n                key: 97,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'sw',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'SouthWest',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 98,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 's',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'South',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 99,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'se',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'SouthEast',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 100,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'w',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'West',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 101,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'l',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'Look',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 102,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'e',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'East',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 103,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'nw',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'NorthWest',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 104,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'n',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'North',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            },\n            {\n                key: 105,\n                display: 'return MacroDisplay(item)',\n                displaytype: ItemDisplayType.Function,\n                value: 'ne',\n                style: ItemStyle.Parse,\n                append: false,\n                send: true,\n                name: 'NorthEast',\n                group: '',\n                enabled: true,\n                modifiers: MacroModifiers.None,\n                chain: true,\n                priority: 0,\n                notes: ''\n            }\n        ];\n        const m: Macro[] = [];\n        const dl = data.length;\n        for (let d = 0; d < dl; d++)\n            m.push(new Macro(data[d]));\n        return m;\n    }\n\n    public static load(file) {\n        let profile;\n        let data;\n        if (typeof file === 'object')\n            data = file;\n        else\n            return new Profile();\n        profile = new Profile(false);\n        let prop;\n        for (prop in data) {\n            if (!data.hasOwnProperty(prop)) {\n                continue;\n            }\n            if (prop === 'aliases' || prop === 'triggers' || prop === 'macros' || prop === 'buttons' || prop === 'contexts' || prop === 'variables')\n                continue;\n            profile[prop] = data[prop];\n        }\n\n        let i;\n        let il;\n        if (data.aliases && data.aliases.length > 0) {\n            il = data.aliases.length;\n            for (i = 0; i < il; i++) {\n                profile.aliases.push(new Alias(data.aliases[i], null, profile));\n            }\n        }\n        if (data.triggers && data.triggers.length > 0) {\n            il = data.triggers.length;\n            for (i = 0; i < il; i++) {\n                profile.triggers.push(new Trigger(data.triggers[i], profile));\n            }\n        }\n        if (data.macros && data.macros.length > 0) {\n            il = data.macros.length;\n            profile.macros = [];\n            for (i = 0; i < il; i++) {\n                profile.macros.push(new Macro(data.macros[i], profile));\n            }\n        }\n        if (data.buttons && data.buttons.length > 0) {\n            il = data.buttons.length;\n            for (i = 0; i < il; i++) {\n                profile.buttons.push(new Button(data.buttons[i], profile));\n            }\n        }\n        if (data.contexts && data.contexts.length > 0) {\n            il = data.contexts.length;\n            for (i = 0; i < il; i++) {\n                profile.contexts.push(new Context(data.contexts[i], profile));\n            }\n        }\n        profile.file = profile.name;\n        return profile;\n    }\n\n    public clone(version?: number) {\n        let data;\n        let i;\n        let il;\n        if (version === 2) {\n            data = {\n                name: this.name,\n                priority: this.priority,\n                enabled: this.enabled,\n                aliases: [],\n                triggers: [],\n                macros: [],\n                buttons: [],\n                contexts: [],\n                enableMacros: this.enableMacros,\n                enableTriggers: this.enableTriggers,\n                enableAliases: this.enableAliases,\n                enableButtons: this.enableButtons,\n                enableContexts: this.enableContexts,\n                enableDefaultContext: this.enableDefaultContext\n            };\n\n            if (this.aliases.length > 0) {\n                il = this.aliases.length;\n                for (i = 0; i < il; i++) {\n                    data.aliases.push({\n                        pattern: this.aliases[i].pattern,\n                        value: this.aliases[i].value,\n                        priority: this.aliases[i].priority,\n                        regexp: this.aliases[i].regexp,\n                        style: this.aliases[i].style,\n                        multi: this.aliases[i].multi,\n                        append: this.aliases[i].append,\n                        name: this.aliases[i].name,\n                        group: this.aliases[i].group,\n                        enabled: this.aliases[i].enabled,\n                        params: this.aliases[i].params,\n                        display: this.aliases[i].display,\n                        notes: this.aliases[i].notes || ''\n                    });\n                }\n            }\n            if (this.triggers.length > 0) {\n                il = this.triggers.length;\n                for (i = 0; i < il; i++) {\n                    const t = {\n                        pattern: this.triggers[i].pattern,\n                        value: this.triggers[i].value,\n                        priority: this.triggers[i].priority,\n                        verbatim: this.triggers[i].verbatim,\n                        style: this.triggers[i].style,\n                        name: this.triggers[i].name,\n                        group: this.triggers[i].group,\n                        enabled: this.triggers[i].enabled,\n                        display: this.triggers[i].display,\n                        triggernewline: this.triggers[i].triggerNewline,\n                        caseSensitive: this.triggers[i].caseSensitive,\n                        triggerprompt: this.triggers[i].triggerPrompt,\n                        raw: this.triggers[i].raw,\n                        type: this.triggers[i].type,\n                        notes: this.triggers[i].notes || '',\n                        state: this.triggers[i].state || 0,\n                        params: this.triggers[i].params || '',\n                        triggers: []\n                    }\n                    if (this.triggers[i].triggers && this.triggers[i].triggers.length) {\n                        const sl = this.triggers[i].triggers.length;\n                        for (let s = 0; s < sl; s++) {\n                            t.triggers.push({\n                                pattern: this.triggers[i].triggers[s].pattern,\n                                value: this.triggers[i].triggers[s].value,\n                                priority: this.triggers[i].triggers[s].priority,\n                                verbatim: this.triggers[i].triggers[s].verbatim,\n                                style: this.triggers[i].triggers[s].style,\n                                name: this.triggers[i].triggers[s].name,\n                                group: this.triggers[i].triggers[s].group,\n                                enabled: this.triggers[i].triggers[s].enabled,\n                                display: this.triggers[i].triggers[s].display,\n                                triggernewline: this.triggers[i].triggers[s].triggerNewline,\n                                caseSensitive: this.triggers[i].triggers[s].caseSensitive,\n                                triggerprompt: this.triggers[i].triggers[s].triggerPrompt,\n                                raw: this.triggers[i].triggers[s].raw,\n                                type: this.triggers[i].triggers[s].type,\n                                notes: this.triggers[i].triggers[s].notes || '',\n                                state: this.triggers[i].triggers[s].state || 0,\n                                params: this.triggers[i].triggers[s].params || '',\n                                triggers: []\n                            });\n                        }\n                    }\n                    data.triggers.push(t);\n                }\n            }\n            if (this.macros.length > 0) {\n                il = this.macros.length;\n                for (i = 0; i < il; i++) {\n                    data.macros.push({\n                        key: this.macros[i].key,\n                        value: this.macros[i].value,\n                        style: this.macros[i].style,\n                        append: this.macros[i].append,\n                        send: this.macros[i].send,\n                        name: this.macros[i].name,\n                        group: this.macros[i].group,\n                        enabled: this.macros[i].enabled,\n                        display: 'if(item.key === 0) return \"None\"; return keyCodeToChar[item.key]',\n                        displaytype: 1,\n                        modifiers: this.macros[i].modifiers,\n                        chain: this.macros[i].chain,\n                        notes: this.macros[i].notes || ''\n                    });\n                }\n            }\n            if (this.buttons.length > 0) {\n                il = this.buttons.length;\n                for (i = 0; i < il; i++) {\n                    data.buttons.push(clone(this.buttons[i], (key, value) => {\n                        if (key === 'profile') return undefined;\n                        return value;\n                    }));\n                }\n            }\n            if (this.contexts.length > 0) {\n                il = this.contexts.length;\n                for (i = 0; i < il; i++) {\n                    data.contexts.push(clone(this.contexts[i], (key, value) => {\n                        if (key === 'profile') return undefined;\n                        return value;\n                    }));\n                }\n            }\n            return data;\n        }\n        data = clone(this);\n        const profile = new Profile(false);\n        let prop;\n        for (prop in data) {\n            if (!data.hasOwnProperty(prop)) {\n                continue;\n            }\n            if (prop === 'aliases' || prop === 'triggers' || prop === 'macros' || prop === 'buttons' || prop === 'contexts' || prop === 'variables')\n                continue;\n            profile[prop] = data[prop];\n        }\n\n        if (data.aliases && data.aliases.length > 0) {\n            il = data.aliases.length;\n            for (i = 0; i < il; i++) {\n                profile.aliases.push(new Alias(data.aliases[i], null, profile));\n            }\n        }\n        if (data.triggers && data.triggers.length > 0) {\n            il = data.triggers.length;\n            for (i = 0; i < il; i++) {\n                profile.triggers.push(new Trigger(data.triggers[i], profile));\n            }\n        }\n        if (data.macros && data.macros.length > 0) {\n            il = data.macros.length;\n            profile.macros = [];\n            for (i = 0; i < il; i++) {\n                profile.macros.push(new Macro(data.macros[i], profile));\n            }\n        }\n        if (data.buttons && data.buttons.length > 0) {\n            il = data.buttons.length;\n            for (i = 0; i < il; i++) {\n                profile.buttons.push(new Button(data.buttons[i], profile));\n            }\n        }\n        if (data.contexts && data.contexts.length > 0) {\n            il = data.contexts.length;\n            for (i = 0; i < il; i++) {\n                const item = data.contexts[i].clone();\n                item.profile = profile;\n                profile.contexts.push(item);\n            }\n        }\n        return profile;\n    }\n\n    public find(type, field, value) {\n        let tmp;\n        if (!type || type.length === 0 || !this[type] || this[type].length === 0)\n            return null;\n        tmp = SortItemArrayByPriority(this[type]);\n        const l = tmp.length;\n        for (let t = 0; t < l; t++) {\n            if (tmp[t][field] === value)\n                return tmp[t];\n        }\n        return null;\n    }\n\n    public findAny(type, field, value?) {\n        let tmp;\n        if (!type || type.length === 0 || !this[type] || this[type].length === 0)\n            return null;\n        tmp = SortItemArrayByPriority(this[type]);\n        const l = tmp.length;\n        if (typeof field === 'object') {\n            for (let t = 0; t < l; t++) {\n                for (const v in field) {\n                    if (!field.hasOwnProperty(v)) continue;\n                    if (tmp[t][v] === field[v])\n                        return tmp[t];\n                }\n            }\n            return -1;\n        }\n        for (let t = 0; t < l; t++) {\n            if (tmp[t][field] === value)\n                return tmp[t];\n        }\n        return null;\n    }\n\n    public indexOfAny(type, field, value) {\n        let tmp;\n        if (!type || type.length === 0 || !this[type] || this[type].length === 0)\n            return null;\n        tmp = SortItemArrayByPriority(this[type]);\n        const l = tmp.length;\n        if (typeof field === 'object') {\n            for (let t = 0; t < l; t++) {\n                for (const v in field) {\n                    if (!field.hasOwnProperty(v)) continue;\n                    if (tmp[t][v] === field[v])\n                        return this[type].indexOf(tmp[t]);\n                }\n            }\n            return -1;\n        }\n        for (let t = 0; t < l; t++) {\n            if (tmp[t][field] === value)\n                return this[type].indexOf(tmp[t]);\n        }\n        return -1;\n    }\n\n    public indexOf(type, field, value) {\n        let tmp;\n        if (!type || type.length === 0 || !this[type] || this[type].length === 0)\n            return null;\n        tmp = SortItemArrayByPriority(this[type]);\n        const l = tmp.length;\n        if (typeof field === 'object') {\n            for (let t = 0; t < l; t++) {\n                for (const v in field) {\n                    if (!field.hasOwnProperty(v)) continue;\n                    if (tmp[t][v] !== field[v]) continue;\n                }\n                return this[type].indexOf(tmp[t]);\n            }\n            return -1;\n        }\n        for (let t = 0; t < l; t++) {\n            if (tmp[t][field] === value)\n                return this[type].indexOf(tmp[t]);\n        }\n        return -1;\n    }\n}\n\nexport class ProfileCollection {\n    public items = {};\n    public keys = [];\n\n    constructor(defaultProfile?: Profile) {\n        this.add(defaultProfile == null ? Profile.Default : defaultProfile);\n    }\n\n    public SortByPriority() {\n        this.keys.sort((a, b) => {\n            let ap = this.items[a].priority;\n            let bp = this.items[b].priority;\n            if (ap > bp)\n                return -1;\n            if (ap < bp)\n                return 1;\n            ap = this.items[a].name;\n            bp = this.items[b].name;\n            if (ap === 'default')\n                return -1;\n            if (bp === 'default')\n                return 1;\n            if (ap > bp)\n                return -1;\n            if (ap < bp)\n                return 1;\n            return 0;\n        });\n    }\n\n    public enabled(profile: (string | Profile)): boolean {\n        if (!profile || this.keys.length === 0) return false;\n        if (typeof profile === 'string') {\n            if (!this.items[profile.toLowerCase()])\n                return false;\n            return this.items[profile.toLowerCase()].enabled;\n        }\n        return this.items[profile.name.toLowerCase()] ? this.items[profile.name.toLowerCase()].enabled : false;\n    }\n\n    public contains(profile: (string | Profile)): boolean {\n        if (!profile || this.keys.length === 0) return false;\n        if (typeof profile === 'string')\n            return this.items[profile.toLowerCase()] ? true : false;\n        return this.items[profile.name.toLowerCase()] ? true : false;\n    }\n\n    public canDisable(profile: any) {\n        if (!profile || this.keys.length === 0) return false;\n        let idx: any;\n        if (typeof profile === 'number') {\n            if (profile < 0)\n                return false;\n            if (profile >= this.keys.length)\n                return false;\n            idx = this.keys[profile];\n        }\n        else if (typeof profile === 'object')\n            idx = profile.name.toLowerCase();\n        else if (typeof profile === 'string')\n            idx = profile.toLowerCase();\n        else\n            return false;\n\n        if (!this.items[idx]) return false;\n        const e = !this.items[idx].enabled;\n        if (!e) {\n            let c = false;\n            for (const key in this.items) {\n                if (key === idx) continue;\n                if (this.items[key].enabled) c = true;\n                break;\n            }\n            if (!c)\n                return false;\n        }\n        return true;\n    }\n\n    public toggle(profile: any) {\n        if (!profile || this.keys.length === 0) return false;\n        let idx: any;\n        if (typeof profile === 'number') {\n            if (profile < 0)\n                return false;\n            if (profile >= this.keys.length)\n                return false;\n            idx = this.keys[profile];\n        }\n        else if (typeof profile === 'object')\n            idx = profile.name.toLowerCase();\n        else if (typeof profile === 'string')\n            idx = profile.toLowerCase();\n        else\n            return false;\n\n        if (!this.items[idx]) return false;\n        const e = !this.items[idx].enabled;\n        if (!e) {\n            let c = false;\n            for (const key in this.items) {\n                if (key === idx) continue;\n                if (this.items[key].enabled) c = true;\n                break;\n            }\n            if (!c)\n                return false;\n        }\n        this.items[idx].enabled = e;\n        return true;\n    }\n\n    public update() {\n        this.keys = Object.keys(this.items);\n        this.SortByPriority();\n    }\n\n    public add(profile: Profile) {\n        if (!profile)\n            return;\n        this.items[profile.name.toLowerCase()] = profile;\n        this.update();\n    }\n\n    public remove(profile: (string | Profile | number)) {\n        if (!profile || this.keys.length === 0) return;\n        if (typeof profile === 'string')\n            delete this.items[profile.toLowerCase()];\n        else if (typeof profile === 'number') {\n            if (profile < 0 || profile >= this.keys.length) return;\n            delete this.items[this.keys[profile]];\n        }\n        else\n            delete this.items[profile.name.toLowerCase()];\n        this.update();\n    }\n\n    public copy(profile: (string | Profile | number)): (Profile | Profile[]) {\n        if (!profile) return clone(this.items);\n        if (this.keys.length === 0)\n            return null;\n        if (typeof profile === 'string') {\n            if (!this.items[profile.toLowerCase()])\n                return null;\n            return this.items[profile.toLowerCase()].clone();\n        }\n        if (typeof profile === 'number') {\n            if (profile < 0 || profile >= this.keys.length) return null;\n            return this.items[this.keys[profile]].clone();\n        }\n        return profile.clone();\n    }\n\n    public clone(version?: number): ProfileCollection | any {\n        if (version === 2) {\n            const profiles = {};\n            for (const p in this.items)\n                profiles[this.items[p].name] = this.items[p].clone(2);\n            return profiles;\n        }\n        const pc = new ProfileCollection();\n        for (const p in this.items)\n            pc.items[this.items[p].name] = this.items[p].clone();\n        pc.update();\n        return pc;\n    }\n\n    public load(key?) {\n        return new Promise((resolve, reject) => {\n            localforage.getItem(key || 'OoMUDProfiles').then(value => {\n                if (typeof value === 'string')\n                    value = JSON.parse(value);\n                if (!value)\n                    this.add(Profile.Default);\n                else {\n                    const keys = Object.keys(value);\n                    let k = 0;\n                    let kl = keys.length;\n                    for (; k < kl; k++) {\n                        this.add(Profile.load(value[keys[k]]));\n                    }\n                }\n                resolve(this);\n            }).catch(reject);\n        })\n    }\n\n    public save(key?) {\n        localforage.setItem(key || 'OoMUDProfiles', JSON.stringify(this.items, (key, value) => {\n            if (key === 'profile') return undefined;\n            return value;\n        }));\n    }\n\n    get length(): number {\n        return this.keys.length;\n    }\n\n    public count(): number { return this.keys.length; }\n\n    get active(): Profile {\n        const keys = this.keys;\n        //no profiles, add default and return\n        if (keys.length === 0) {\n            this.add(Profile.Default);\n            return this.items['default'];\n        }\n        //one profile\n        if (keys.length === 1) {\n            //profile is enabled\n            if (this.items[keys[0]].enabled)\n                return this.items[keys[0]];\n            //profile is default enable and return\n            if (this.items[keys[0]].name === 'Default') {\n                this.items[keys[0]].enable = true;\n                return this.items['default'];\n            }\n            //no default add one and return\n            this.add(Profile.Default);\n            return this.items['default'];\n        }\n        //search for first enabled profile\n        for (const key in keys) {\n            if (this.items[key].enabled)\n                return this.items[key];\n        }\n        //none found, see if default exist, if so enable and return\n        if (this.items['default']) {\n            this.items['default'].enabled = true;\n            return this.items['default'];\n        }\n        //no enabled or default, create and return\n        this.add(Profile.Default);\n        return this.items['default'];\n    }\n\n    get aliases(): Alias[] {\n        const keys = this.keys;\n        let tmp = [];\n        let k = 0;\n        const kl = keys.length;\n        if (kl === 0) return [];\n        if (kl === 1) {\n            if (!this.items[keys[0]].enabled || !this.items[keys[0]].enableAliases)\n                return [];\n            return this.items[keys[0]].aliases;\n        }\n        for (; k < kl; k++) {\n            if (!this.items[keys[k]].enabled || !this.items[keys[k]].enableAliases || this.items[keys[k]].aliases.length === 0)\n                continue;\n            tmp = tmp.concat(this.items[keys[k]].aliases);\n        }\n        return tmp;\n    }\n\n    get triggers(): Trigger[] {\n        const keys = this.keys;\n        let tmp = [];\n        let k = 0;\n        const kl = keys.length;\n        if (kl === 0) return [];\n        if (kl === 1) {\n            if (!this.items[keys[0]].enabled || !this.items[keys[0]].enableTriggers)\n                return [];\n            return this.items[keys[0]].triggers;\n        }\n        for (; k < kl; k++) {\n            if (!this.items[keys[k]].enabled || !this.items[keys[k]].enableTriggers || this.items[keys[k]].triggers.length === 0)\n                continue;\n            tmp = tmp.concat(this.items[keys[k]].triggers);\n        }\n        return tmp;\n    }\n\n    get macros(): Macro[] {\n        const keys = this.keys;\n        let tmp = [];\n        let k = 0;\n        const kl = keys.length;\n        if (kl === 0) return [];\n        if (kl === 1) {\n            if (!this.items[keys[0]].enabled || !this.items[keys[0]].enableMacros)\n                return [];\n            return this.items[keys[0]].macros;\n        }\n        for (; k < kl; k++) {\n            if (!this.items[keys[k]].enabled || !this.items[keys[k]].enableMacros || this.items[keys[k]].macros.length === 0)\n                continue;\n            tmp = tmp.concat(this.items[keys[k]].macros);\n        }\n        return tmp;\n    }\n\n    get buttons(): Button[] {\n        const keys = this.keys;\n        let tmp = [];\n        let k = 0;\n        const kl = keys.length;\n        if (kl === 0) return [];\n        if (kl === 1) {\n            if (!this.items[keys[0]].enabled || !this.items[keys[0]].enableButtons)\n                return [];\n            return this.items[keys[0]].buttons;\n        }\n        for (; k < kl; k++) {\n            if (!this.items[keys[k]].enabled || !this.items[keys[k]].enableButtons || this.items[keys[k]].buttons.length === 0)\n                continue;\n            tmp = tmp.concat(this.items[keys[k]].buttons);\n        }\n        return tmp;\n    }\n\n    get contexts(): Context[] {\n        const keys = this.keys;\n        let tmp = [];\n        let k = 0;\n        const kl = keys.length;\n        if (kl === 0) return [];\n        if (kl === 1) {\n            if (!this.items[keys[0]].enabled || !this.items[keys[0]].enableContexts)\n                return [];\n            return this.items[keys[0]].contexts;\n        }\n        for (; k < kl; k++) {\n            if (!this.items[keys[k]].enabled || !this.items[keys[k]].enableContexts || this.items[keys[k]].contexts.length === 0)\n                continue;\n            tmp = tmp.concat(this.items[keys[k]].contexts);\n        }\n        return tmp;\n    }\n\n    get defaultContext(): boolean {\n        const keys = this.keys;\n        let k = 0;\n        const kl = keys.length;\n        if (kl === 0) return true;\n        if (kl === 1) {\n            if (!this.items[keys[0]].enabled)\n                return true;\n            return this.items[keys[0]].enableDefaultContext;\n        }\n        for (; k < kl; k++) {\n            if (!this.items[keys[k]].enabled)\n                continue;\n            if (!this.items[keys[k]].enableDefaultContext)\n                return false;\n        }\n        return true;\n    }\n}\n\n/*\n*            match any number (even none) of characters or white space\n   .*\n?            match a single character\n   .\n%d            match any number of digits (0-9)\n   \\d*\n%n            match a number that starts with a + or - sign\n   [+|-]?\\d*\n%w            match any number of alpha characters (a-z) (a word)\n   \\w\n%a            match any number of alphanumeric characters (a-z,0-9)\n   [a-zA-Z0-9]*\n%s            match any amount of white space (spaces, tabs)\n   \\s*\n%x            match any amount of non-white space\n   \\S*\n%y            match any amount of non-white space (same as %x but matches start and end of line)\n   \\S*\n%p            match any punctuation\n   \\p{P}\n%q            match any punctuation (same as %p but matches start and end of line)\n   \\p{P}\n%t            match a direction command\n   ignore for now as i dont know what it does             \n%e            match ESC character for ansi patterns\n   \\e\n[range]      match any amount of characters listed in range\n   as is in .net\n^            force pattern to match starting at the beginning of the line\n   as is in .net\n$            force pattern to match ending at the end of the line\n   as is in .net\n(pattern)      save the matched pattern in a parameter %1 though %99\n   as is in .net\n~            quote the next character to prevent it to be interpreted as a wild card, required to match special characters\n   replace with \\                 \n~~            match a quote character verbatim\n   replace with \\\\ (not needed as ~ by itself is replaced with a \\\n{val1|val2|val3|...} match any of the specified strings can not use other wildcard inside this\n   remove {}\n@variable match any of the specified strings or keys\n    parsed and replaced with the variable value\n{^string}      do not match the specified string\n   [^string] replace {} with []\n&nn      matches exactly nn characters (fixed width pattern)\n   {nn} remove & and wrap in {}\n&VarName      assigns the matched string to the given variable (see below for more info)\n   (?<VarName>pattern ) research more, prob is varname can contain patterns so have to parse out name and patterns\n   probably best to pre-parse and get name / pattern then parse pattern separately in a recursive call\n%/regex/% matches the given Regular Expression\n%%function() runs any function\nhttp://forums.zuggsoft.com/modules/mx_kb/kb.php?mode=doc&page=3&refpage=3&a=cmud_Pattern_Match\n           */\nexport function convertPattern(pattern: string, client?) {\n    if (!pattern || !pattern.length) return '';\n    enum convertPatternState {\n        None = 0,\n        Ampersand = 1,\n        Percent = 2,\n        StringMatch = 3,\n        SubPattern = 4,\n        AmpersandPercent = 5,\n        AmpersandPattern = 6,\n        AmpersandRange = 7,\n        PercentRegex = 8,\n        Escape = 9,\n        Variable = 10\n    }\n    let state: convertPatternState = convertPatternState.None;\n    let stringBuilder = [];\n    let idx = 0;\n    let tl = pattern.length;\n    let c;\n    let i;\n    let arg;\n    let pat;\n    let nest = 0;\n    for (idx = 0; idx < tl; idx++) {\n        c = pattern.charAt(idx);\n        i = pattern.charCodeAt(idx);\n        switch (state) {\n            case convertPatternState.Ampersand:\n                if (arg.length === 0 && (c === '*' || c === '?' || c === '^' || c === '$'))\n                    pat = c;\n                else if (arg.length === 0 && c === '%')\n                    state = convertPatternState.AmpersandPercent;\n                else if (pat.length === 0 && c === '(') {\n                    pat = c;\n                    state = convertPatternState.AmpersandPattern;\n                }\n                else if (pat.length === 0 && c === '[') {\n                    pat = c;\n                    state = convertPatternState.AmpersandRange;\n                }\n                else if (c === '{')\n                    continue;\n                //end block or no longer valid varname character\n                else if (c === '}' || !((i >= 48 && i <= 57) || (i >= 65 && i <= 90) || (i >= 97 && i <= 122) || i === 95 || i === 36)) {\n                    if (!isValidIdentifier(arg))\n                        throw new Error('Invalid variable name');\n                    if (!pat.length && /^\\d+$/.exec(arg))\n                        stringBuilder.push('{', arg, '}');\n                    else if (!pat.length)\n                        stringBuilder.push('(?<', arg, '>.*)');\n                    else\n                        stringBuilder.push('(?<', arg, '>', convertPattern(pat), ')');\n                    if (c !== '}')\n                        idx--;\n                    state = convertPatternState.None;\n                }\n                else\n                    arg += c;\n                break;\n            case convertPatternState.AmpersandPercent:\n                pat += '%' + c;\n                state = convertPatternState.Ampersand;\n                break;\n            case convertPatternState.AmpersandPattern:\n                pat += c;\n                if (c === ')')\n                    state = convertPatternState.Ampersand;\n                break;\n            case convertPatternState.AmpersandRange:\n                pat += c;\n                if (c === ']')\n                    state = convertPatternState.Ampersand;\n                break;\n            case convertPatternState.Percent:\n                switch (c) {\n                    case 'd':\n                        stringBuilder.push(\"\\\\d+\");\n                        state = convertPatternState.None;\n                        break;\n                    case 'n':\n                        stringBuilder.push(\"[+-]?\\\\d+\");\n                        state = convertPatternState.None;\n                        break;\n                    case 'w':\n                        stringBuilder.push(\"\\\\w\");\n                        state = convertPatternState.None;\n                        break;\n                    case 'a':\n                        stringBuilder.push(\"[a-zA-Z0-9]*\");\n                        state = convertPatternState.None;\n                        break;\n                    case 's':\n                        stringBuilder.push(\"\\\\s*\");\n                        state = convertPatternState.None;\n                        break;\n                    case 'x':\n                        stringBuilder.push(\"\\\\S*\");\n                        state = convertPatternState.None;\n                        break;\n                    case 'y':\n                        stringBuilder.push(\"\\\\S*\");\n                        state = convertPatternState.None;\n                        break;\n                    case 'p':\n                        stringBuilder.push(\"[\\\\.\\\\?\\\\!\\\\:\\\\;\\\\-\\\\\u2014\\\\(\\\\)\\\\[\\\\]\\\\'\\\\\\\"\\\\\\\\/\\\\,]{1}\");\n                        state = convertPatternState.None;\n                        break;\n                    case 'q':\n                        stringBuilder.push(\"[\\\\.\\\\?\\\\!\\\\:\\\\;\\\\-\\\\\u2014\\\\(\\\\)\\\\[\\\\]\\\\'\\\\\\\"\\\\\\\\/\\\\,]{1}\");\n                        state = convertPatternState.None;\n                        break;\n                    case 't': //jiMUD does not support direction commands\n                        state = convertPatternState.None;\n                        break;\n                    case 'e':\n                        stringBuilder.push(\"\\x1b\");\n                        state = convertPatternState.None;\n                        break;\n                    case '/': // %/pattern/%\n                        state = convertPatternState.PercentRegex;\n                        arg = '';\n                        break;\n                }\n                break;\n            case convertPatternState.PercentRegex:\n                if (c === '%') {\n                    if (!arg.endsWith('/'))\n                        throw new Error('Invalid %/regex/% pattern');\n                    stringBuilder.push(arg.substr(0, arg.length - 1));\n                }\n                else\n                    arg += c;\n                break;\n            case convertPatternState.StringMatch:\n                if (c === '^' && arg.length === 0)\n                    pat = true;\n                else if (c === '}') {\n                    if (pat)\n                        stringBuilder.push('[^', arg, ']');\n                    else\n                        stringBuilder.push(arg);\n                    state = convertPatternState.None;\n                }\n                else\n                    arg += c;\n                break;\n            case convertPatternState.SubPattern:\n                if (c === ':') {\n                    stringBuilder.push('(?<', arg, '>');\n                    state = convertPatternState.None;\n                }\n                else if (c === ')') {\n                    stringBuilder.push('(', convertPattern(arg), ')');\n                    state = convertPatternState.None;\n                    nest--;\n                }\n                else\n                    arg += c;\n                break;\n            case convertPatternState.Escape:\n                stringBuilder.push('\\\\', c);\n                state = convertPatternState.None;\n                break;\n            case convertPatternState.Variable:\n                if (c === '{' && arg.length === 0)\n                    continue;\n                else if (c === '}' || !((i >= 48 && i <= 57) || (i >= 65 && i <= 90) || (i >= 97 && i <= 122) || i === 95 || i === 36)) {\n                    if (!isValidIdentifier(arg))\n                        throw new Error('Invalid variable name')\n                    if (client) {\n                        if (client.variables[arg] instanceof Variable)\n                            stringBuilder.push(client.variables[arg].value || '');\n                        else\n                            stringBuilder.push(client.variables[arg] || '');\n                    }\n                    if (c !== '}')\n                        idx--;\n                    state = convertPatternState.None;\n                }\n                else\n                    arg += c;\n                break;\n            default:\n                if (c === '*')\n                    stringBuilder.push('.*');\n                else if (c === '?')\n                    stringBuilder.push('.');\n                else if (c === '~')\n                    state = convertPatternState.Escape;\n                else if (c === '@') {\n                    state = convertPatternState.Variable;\n                    arg = '';\n                }\n                else if (c === '&') {\n                    arg = '';\n                    pat = '';\n                    state = convertPatternState.Ampersand;\n                }\n                else if (c === '%')\n                    state = convertPatternState.Percent;\n                else if (c === '{') {\n                    state = convertPatternState.StringMatch;\n                    arg = '';\n                }\n                else if (c === '(') {\n                    state = convertPatternState.SubPattern;\n                    arg = '';\n                    nest++;\n                }\n                else {\n                    if (c === ')')\n                        nest--;\n                    stringBuilder.push(c);\n                }\n                break;\n        }\n    }\n    switch (state) {\n        case convertPatternState.Ampersand:\n            if (!isValidIdentifier(arg))\n                throw new Error('Invalid variable name');\n            if (!pat.length && /^\\d+$/.exec(arg))\n                stringBuilder.push('{', arg, '}');\n            else if (!pat.length)\n                stringBuilder.push('(?<', arg, '>.*)');\n            else\n                stringBuilder.push('(?<', arg, '>', convertPattern(pat), ')');\n            break;\n        case convertPatternState.AmpersandPercent:\n        case convertPatternState.AmpersandPattern:\n        case convertPatternState.AmpersandRange:\n            throw new Error('Invalid &VarName pattern');\n        case convertPatternState.Percent:\n            throw new Error('Invalid % pattern');\n        case convertPatternState.PercentRegex:\n            throw new Error('Invalid %/regex/% pattern');\n        case convertPatternState.StringMatch:\n            throw new Error('Invalid string match pattern');\n        case convertPatternState.SubPattern:\n            throw new Error('Invalid (sub:pattern) pattern');\n        case convertPatternState.Escape:\n            throw new Error('Invalid escape pattern');\n        case convertPatternState.Variable:\n            if (!isValidIdentifier(arg))\n                throw new Error('Invalid variable name');\n            if (client) {\n                if (client.variables[arg] instanceof Variable)\n                    stringBuilder.push(client.variables[arg].getValue() || '');\n                else\n                    stringBuilder.push(client.variables[arg] || '');\n            }\n            break;\n    }\n    if (nest)\n        throw new Error('Invalid save matched pattern');\n    return stringBuilder.join('');\n}", "import { EventEmitter } from './events';\r\nimport { MacroModifiers, MacroDisplay, Alias, Trigger, Button, Profile, TriggerType, TriggerTypes, SubTriggerTypes, convertPattern } from './profile';\r\nimport { getTimeSpan, FilterArrayByKeyValue, SortItemArrayByPriority, clone, StringToUint8Array, splitQuoted, isValidIdentifier, getCursor, insertValue, openFileDialog, readFile } from './library';\r\nimport { Client } from './client';\r\nimport { NewLineType, TabCompletion, FunctionEvent } from './types';\r\nimport { SettingList } from './settings';\r\nimport { getAnsiColorCode, getColorCode, isMXPColor, getAnsiCode } from './ansi';\r\n\r\n\r\n/**\r\n * MATHJS expression engine\r\n * @constant\r\n * @type {object}\r\n */\r\nlet mathjs;\r\nlet _mathjs;\r\ndeclare let math;\r\n\r\n/**\r\n * Moment time format and manipulation (Optional, falls back to default date object formats)\r\n * @type {object}\r\n * @constant\r\n */\r\ndeclare let moment;\r\n\r\nconst WindowVariables = ['$selectedword', '$selword', '$selectedurl', '$selurl', '$selectedline', '$selline', '$selected', '$character', '$copied', '$action', '$trigger', '$caption', '$characterid'];\r\n\r\n/**\r\n * Return the proper case of a string for each word\r\n * @param {string} str - The string to proper capitalize each word of\r\n * @returns {string}\r\n */\r\nfunction ProperCase(str) {\r\n    return str.replace(/\\w*\\S*/g, (txt) => { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\r\n}\r\n\r\n/**\r\n * Return a fudge dice random value\r\n * @returns {number} Returns -1, 1 or 0 randomly\r\n */\r\nfunction fudgeDice() {\r\n    switch (~~(Math.random() * 6) + 1) {\r\n        case 1:\r\n        case 4:\r\n            return -1;\r\n        case 3:\r\n        case 2:\r\n            return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n/**\r\n * Enum for input parse state\r\n * @readonly\r\n * @enum {number}\r\n */\r\nenum ParseState {\r\n    none = 0,\r\n    doubleQuoted = 1,\r\n    singleQuoted = 2,\r\n    aliasArguments = 3,\r\n    aliasArgumentsDouble = 4,\r\n    aliasArgumentsSingle = 5,\r\n    path = 6,\r\n    function = 7,\r\n    paramsP = 8,\r\n    paramsPBlock = 9,\r\n    paramsPEscape = 10,\r\n    paramsPNamed = 26,\r\n    paramsN = 11,\r\n    paramsNBlock = 12,\r\n    paramsNEscape = 13,\r\n    paramsNNamed = 14,\r\n    escape = 15,\r\n    verbatim = 16,\r\n    aliasArgumentsEscape = 17,\r\n    pathEscape = 18,\r\n    functionEscape = 19,\r\n    comment = 20,\r\n    inlineCommentStart = 21,\r\n    inlineComment = 22,\r\n    blockCommentStart = 23,\r\n    blockComment = 24,\r\n    blockCommentEnd = 25,\r\n    doubleQuotedEscape = 27,\r\n    singleQuotedEscape = 28\r\n}\r\n\r\n/**\r\n * Type of trigger ot test for\r\n */\r\nenum TriggerTypeFilter {\r\n    Main = 1,\r\n    Sub = 2,\r\n    All = 3\r\n}\r\n\r\n/**\r\n * Command input parser\r\n * \r\n * @class Input\r\n * @extends {EventEmitter}\r\n * @param {Object} client - the mud client object\r\n */\r\nexport class Input extends EventEmitter {\r\n    private _historyIdx: number = -1;\r\n    private _tabIdx: number = -1;\r\n    private _tabWords: string[] = null;;\r\n    private _tabSearch: any;\r\n    private _commandHistory: string[];\r\n    private _locked: number = 0;\r\n    private _TriggerCache: Trigger[] = null;\r\n    private _TriggerStates = {};\r\n    private _TriggerFunctionCache = {};\r\n    private _TriggerRegExCache = {};\r\n    private _LastTriggered = '';\r\n    private _LastTrigger = null;\r\n    private _scrollLock: boolean = false;\r\n    private _gag: number = 0;\r\n    private _gagID: any[] = [];\r\n    private _gags: any[] = [];\r\n    private _stack = [];\r\n    private _vStack = [];\r\n    private _controllers = {};\r\n    private _controllersCount = 0;\r\n    private _gamepadCaches = null;\r\n    private _lastSuspend = -1;\r\n    private _MacroCache = {};\r\n    private _loops: number[] = [];\r\n    private _pathQueue = [];\r\n    private _pathTimeout: any = null;\r\n    private _pathPaused: boolean = false;\r\n\r\n    public client: Client = null;\r\n    public enableParsing: boolean = true;\r\n    public enableTriggers: boolean = true;\r\n\r\n    public getScope() {\r\n        let scope: any = {};\r\n        Object.assign(scope, this.client.variables);\r\n        WindowVariables.forEach((a) => {\r\n            scope[a] = window[a];\r\n            scope[a.substr(1)] = window[a];\r\n        });\r\n        //if no stack use direct for some performance\r\n        if (this._stack.length === 0)\r\n            return scope;\r\n        if (!this.stack.named && !this.loops.length)\r\n            return scope;\r\n        if (this.stack.named)\r\n            Object.assign(scope, this.stack.named);\r\n        if (this.loops.length) {\r\n            scope.repeatnum = this.repeatnum;\r\n            const ll = this.loops.length;\r\n            //i to z only\r\n            for (let l = 0; l < ll && l < 18; l++)\r\n                scope[String.fromCharCode(105 + l)] = this.loops[l];\r\n        }\r\n        //scope.i = this.repeatnum;\r\n        //scope.repeatnum = this.repeatnum;\r\n        return scope;\r\n    }\r\n\r\n    public setScope(scope) {\r\n        //if same object no need to update\r\n        if (scope === this.client.variables) return;\r\n        const ll = this.loops.length;\r\n        for (const name in scope) {\r\n            //not a property, i or repeatnum\r\n            if (!Object.prototype.hasOwnProperty.call(scope, name) || name === 'i' || name === 'repeatnum')\r\n                continue;\r\n            if (WindowVariables.indexOf(name) !== -1 || WindowVariables.indexOf('$' + name) !== -1)\r\n                continue;\r\n            switch (name) {\r\n                case 'clientid':\r\n                    continue;\r\n            }\r\n            //if i to z and the loop exist skip it\r\n            if (name.length === 1 && ll && name.charCodeAt(0) >= 105 && name.charCodeAt(0) < 105 + ll)\r\n                continue;\r\n            //part of the named arguments so skip\r\n            if (this.stack.named && Object.prototype.hasOwnProperty.call(this.stack.named, name))\r\n                continue;\r\n            //update/add new variables\r\n            this.client.variables[name] = scope[name];\r\n        }\r\n    }\r\n\r\n    public evaluate(expression) {\r\n        let scope = this.getScope();\r\n        let results = mathjs().evaluate(expression, scope);\r\n        this.setScope(scope);\r\n        return results;\r\n    }\r\n\r\n    get stack() {\r\n        if (this._stack.length === 0)\r\n            this._stack.push({ args: 0, named: 0, used: 0, append: false });\r\n        return this._stack[this._stack.length - 1];\r\n    }\r\n\r\n    get repeatnum() {\r\n        if (this.loops.length === 0)\r\n            return 0;\r\n        return this.loops[this.loops.length - 1];\r\n    }\r\n\r\n    get loops() {\r\n        if (this._stack.length === 0 || !this.stack.hasOwnProperty('loops'))\r\n            return this._loops;\r\n        return this.stack.loops;\r\n    }\r\n\r\n    get regex() {\r\n        let sl = this._stack.length;\r\n        if (sl === 0)\r\n            return null;\r\n        while (sl >= 0) {\r\n            sl--;\r\n            if (this._stack[sl].hasOwnProperty('regex'))\r\n                return this._stack[sl].regex;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get indices() {\r\n        let sl = this._stack.length;\r\n        if (sl === 0)\r\n            return [];\r\n        while (sl >= 0) {\r\n            sl--;\r\n            if (this._stack[sl].hasOwnProperty('indices'))\r\n                return this._stack[sl].indices;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    get vStack() {\r\n        if (this._vStack.length === 0)\r\n            return {};\r\n        return this._vStack[this._vStack.length - 1];\r\n    }\r\n\r\n    public vStackPush(obj) {\r\n        this._vStack.push(obj);\r\n    }\r\n\r\n    public vStackPop() {\r\n        this._vStack.pop();\r\n    }\r\n\r\n    get scrollLock(): boolean {\r\n        return this._scrollLock;\r\n    }\r\n    set scrollLock(locked: boolean) {\r\n        if (locked !== this._scrollLock) {\r\n            this._scrollLock = locked;\r\n            this.emit('scroll-lock', this.scrollLock);\r\n        }\r\n    }\r\n\r\n    get lastTriggerExecuted() {\r\n        return this._LastTrigger;\r\n    }\r\n\r\n    get lastTriggered() {\r\n        return this._LastTriggered;\r\n    }\r\n\r\n    set lastTriggered(value) {\r\n        this._LastTriggered = value;\r\n    }\r\n\r\n    private getDiceArguments(arg, scope, fun) {\r\n        let res = /(\\d+)\\s*?d(F|f|%|\\d+)(\\s*?[-|+|*|\\/]?\\s*?\\d+)?/g.exec(arg.toString());\r\n        if (!res || res.length < 3) {\r\n            res = /(\\d+)\\s*?d\\s*?\\/\\s*?(100)(\\s*?[-|+|*|\\/]?\\s*?\\d+)?/g.exec(arg.toString());\r\n            if (!res || res.length < 3) {\r\n                //if failed with raw args try compiling and processing in case a variable or expression to build a string\r\n                arg = arg.compile().evaluate(scope);\r\n                res = /(\\d+)\\s*?d(F|f|%|\\d+)(\\s*?[-|+|*|\\/]?\\s*?\\d+)?/g.exec(arg.toString());\r\n                if (!res || res.length < 3) {\r\n                    //check for % dice\r\n                    res = /(\\d+)\\s*?d\\s*?\\/\\s*?(100)(\\s*?[-|+|*|\\/]?\\s*?\\d+)?/g.exec(arg.toString());\r\n                    if (!res || res.length < 3)\r\n                        throw new Error('Invalid dice for ' + (fun || 'dice'));\r\n                    res[2] = '%';\r\n                }\r\n            }\r\n            else\r\n                res[2] = '%';\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private initMathJS() {\r\n        _mathjs = math;\r\n        const functions = {\r\n            esc: '\\x1b',\r\n            cr: '\\n',\r\n            lf: '\\r',\r\n            crlf: '\\r\\n',\r\n            diceavg: (args, math, scope) => {\r\n                let res;\r\n                let c;\r\n                let sides;\r\n                let mod;\r\n                let min;\r\n                let max;\r\n                if (args.length === 0) throw new Error('Invalid arguments for diceavg');\r\n                if (args.length === 1) {\r\n                    res = this.getDiceArguments(args[0], scope, 'diceavg');\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = args[0].compile().evaluate(scope);\r\n                    sides = args[1].toString().trim();\r\n                    if (sides !== 'F' && sides !== '%')\r\n                        sides = args[1].compile().evaluate(scope);\r\n                    if (args.length > 2)\r\n                        mod = args[2].compile().evaluate(scope);\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for diceavg');\r\n                min = 1;\r\n                if (sides === 'F' || sides === 'f') {\r\n                    min = -1;\r\n                    max = 1;\r\n                }\r\n                else if (sides === '%') {\r\n                    max = 1;\r\n                    min = 0;\r\n                }\r\n                else\r\n                    max = parseInt(sides);\r\n\r\n                if (mod)\r\n                    return math.evaluate(((min + max) / 2 * c) + mod, scope);\r\n                return (min + max) / 2 * c;\r\n            },\r\n            dicemin: (args, math, scope) => {\r\n                let res;\r\n                let c;\r\n                let sides;\r\n                let mod;\r\n                let min;\r\n                if (args.length === 0) throw new Error('Invalid arguments for dicemin');\r\n                if (args.length === 1) {\r\n                    res = res = this.getDiceArguments(args[0], scope, 'dicemin');\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = args[0].compile().evaluate(scope);\r\n                    sides = args[1].toString().trim();\r\n                    if (sides !== 'F' && sides !== '%')\r\n                        sides = args[1].compile().evaluate(scope);\r\n                    if (args.length > 2)\r\n                        mod = args[2].compile().evaluate(scope);\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for dicemin');\r\n                min = 1;\r\n                if (sides === 'F' || sides === 'f')\r\n                    min = -1;\r\n                else if (sides === '%')\r\n                    min = 0;\r\n                if (mod)\r\n                    return math.evaluate((min * c) + mod, scope);\r\n                return min * c;\r\n            },\r\n            dicemax: (args, math, scope) => {\r\n                let res;\r\n                let c;\r\n                let sides;\r\n                let mod;\r\n                let max;\r\n                if (args.length === 0) throw new Error('Invalid arguments for dicemax');\r\n                if (args.length === 1) {\r\n                    res = this.getDiceArguments(args[0], scope, 'dicemax');\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = args[0].compile().evaluate(scope);\r\n                    sides = args[1].toString().trim();\r\n                    if (sides !== 'F' && sides !== '%')\r\n                        sides = args[1].compile().evaluate(scope);\r\n                    if (args.length > 2)\r\n                        mod = args[2].compile().evaluate(scope);\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for dicemax');\r\n                if (sides === 'F' || sides === 'f')\r\n                    max = 1;\r\n                else if (sides === '%')\r\n                    max = 1;\r\n                else\r\n                    max = parseInt(sides);\r\n\r\n                if (mod)\r\n                    return math.evaluate((max * c) + mod, scope);\r\n                return max * c;\r\n            },\r\n            dicedev: (args, math, scope) => {\r\n                let res;\r\n                let c;\r\n                let sides;\r\n                let mod;\r\n                let max;\r\n                if (args.length === 0) throw new Error('Invalid arguments for dicedev');\r\n                if (args.length === 1) {\r\n                    res = this.getDiceArguments(args[0], scope, 'dicedev');\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = args[0].compile().evaluate(scope);\r\n                    sides = args[1].toString().trim();\r\n                    if (sides !== 'F' && sides !== '%')\r\n                        sides = args[1].compile().evaluate(scope);\r\n                    if (args.length > 2)\r\n                        mod = args[2].compile().evaluate(scope);\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for dicedev');\r\n                if (sides === 'F' || sides === 'f')\r\n                    max = 6;\r\n                else if (sides === '%')\r\n                    max = 1;\r\n                else\r\n                    max = parseInt(sides);\r\n                if (mod)\r\n                    return math.evaluate(Math.sqrt(((max * max) - 1) / 12 * c) + mod, scope);\r\n                return Math.sqrt(((max * max) - 1) / 12 * c);\r\n            },\r\n            zdicedev: (args, math, scope) => {\r\n                let res;\r\n                let c;\r\n                let sides;\r\n                let mod;\r\n                let max;\r\n                if (args.length === 0) throw new Error('Invalid arguments for zdicedev');\r\n                if (args.length === 1) {\r\n                    res = this.getDiceArguments(args[0], scope, 'zdicedev');\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = args[0].compile().evaluate(scope);\r\n                    sides = args[1].toString().trim();\r\n                    if (sides !== 'F' && sides !== '%')\r\n                        sides = args[1].compile().evaluate(scope);\r\n                    if (args.length > 2)\r\n                        mod = args[2].compile().evaluate(scope);\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for zdicedev');\r\n                if (sides === 'F' || sides === 'f')\r\n                    max = 6;\r\n                else if (sides === '%')\r\n                    max = 1;\r\n                else\r\n                    max = parseInt(sides);\r\n                max--;\r\n                if (mod)\r\n                    return math.evaluate(Math.sqrt(((max * max) - 1) / 12 * c) + mod, scope);\r\n                return Math.sqrt(((max * max) - 1) / 12 * c);\r\n            },\r\n            dice: (args, math, scope) => {\r\n                let res;\r\n                let c;\r\n                let sides;\r\n                let mod;\r\n                if (args.length === 1) {\r\n                    res = this.getDiceArguments(args[0], scope, 'dice');\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length > 1) {\r\n                    c = args[0].compile().evaluate(scope);\r\n                    sides = args[1].toString().trim();\r\n                    if (sides !== 'F' && sides !== '%')\r\n                        sides = args[1].compile().evaluate(scope);\r\n                    if (args.length > 2)\r\n                        mod = args[2].compile().evaluate(scope);\r\n                }\r\n                else\r\n                    throw new Error('Invalid arguments for dice');\r\n                let sum = 0;\r\n                for (let i = 0; i < c; i++) {\r\n                    if (sides === 'F' || sides === 'f')\r\n                        sum += fudgeDice();\r\n                    else if (sides === '%')\r\n                        sum += ~~(Math.random() * 100.0) + 1.0;\r\n                    else\r\n                        sum += ~~(Math.random() * sides) + 1;\r\n                }\r\n                if (sides === '%')\r\n                    sum /= 100.0;\r\n                if (mod)\r\n                    return math.evaluate(sum + mod, scope);\r\n                return sum;\r\n            },\r\n            isdefined: (args, math, scope) => {\r\n                if (args.length === 1) {\r\n                    args[0] = this.stripQuotes(args[0].toString());\r\n                    if (this.client.variables.hasOwnProperty(args[0]))\r\n                        return 1;\r\n                    if (scope.has(args[0]))\r\n                        return 1;\r\n                    return 0;\r\n                }\r\n                throw new Error('Invalid arguments for isdefined');\r\n            },\r\n            defined: (args, math, scope) => {\r\n                let sides;\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for defined');\r\n                else if (args.length === 1) {\r\n                    args[0] = this.stripQuotes(args[0], true);\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0) return 0;\r\n                    //have to check each profile as the client only caches enabled items for speed\r\n                    for (; k < kl; k++) {\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                        sides = sides.find(i => {\r\n                            return i.pattern === args[0];\r\n                        });\r\n                        if (sides) return 1;\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                        sides = sides.find(i => {\r\n                            return i.pattern === args[0] || i.name === args[0];\r\n                        });\r\n                        if (sides) return 1;\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].macros);\r\n                        sides = sides.find(i => {\r\n                            return MacroDisplay(i).toLowerCase() === args[0].toLowerCase() || i.name === args[0];\r\n                        });\r\n                        if (sides) return 1;\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                        sides = sides.find(i => {\r\n                            return i.caption === args[0] || i.name === args[0]\r\n                        });\r\n                        if (sides) return 1;\r\n                    }\r\n                    return this.client.variables.hasOwnProperty(args[0]);\r\n                }\r\n                else if (args.length === 2) {\r\n                    args[0] = this.stripQuotes(args[0].toString());\r\n                    args[0] = this.stripQuotes(args[1].toString());\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0) return 0;\r\n                    //have to check each profile as the client only caches enabled items for speed\r\n                    for (; k < kl; k++) {\r\n                        switch (args[1]) {\r\n                            case 'alias':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                                sides = sides.find(i => {\r\n                                    return i.pattern === args[0];\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'event':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                sides = sides.find(i => {\r\n                                    return i.type === TriggerType.Event && (i.pattern === args[0] || i.name === args[0]);\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'trigger':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                sides = sides.find(i => {\r\n                                    return i.pattern === args[0] || i.name === args[0];\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'macro':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].macros);\r\n                                sides = sides.find(i => {\r\n                                    return MacroDisplay(i).toLowerCase() === args[0].toLowerCase() || i.name === args[0];\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'button':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                                sides = sides.find(i => {\r\n                                    return i.caption === args[0] || i.name === args[0]\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            //case 'variable':\r\n                            //case 'path':\r\n                            //case 'status':\r\n                            //case 'class':\r\n                            //case 'menu':                        \r\n                            //case 'module':\r\n                        }\r\n                    }\r\n                    if (args[1] === 'variable')\r\n                        return this.client.variables.hasOwnProperty(args[0]) || scope.has(args[0]);\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for defined');\r\n                return 0;\r\n            },\r\n            time: (args, math, scope) => {\r\n                if (args.length > 1)\r\n                    throw new Error('Too many arguments for time');\r\n                if (!moment) return new Date().toISOString();\r\n                if (args.length)\r\n                    return moment().format(args[0].compile().evaluate(scope));\r\n                return moment().format();\r\n            },\r\n            clip: (args, math, scope) => {\r\n                if (args.length > 1)\r\n                    throw new Error('Too many arguments for clip');\r\n                if (args.length) {\r\n                    (<any>this.client).writeClipboard(args[0].compile().evaluate(scope));\r\n                    return;\r\n                }\r\n                return (<any>this.client).readClipboard();\r\n            },\r\n            if: (args, math, scope) => {\r\n                if (args.length < 3)\r\n                    throw new Error('Missing arguments for if');\r\n                if (args.length !== 3)\r\n                    throw new Error('Too many arguments for if');\r\n\r\n                if (args[0].compile().evaluate(scope))\r\n                    return args[1].compile().evaluate(scope);\r\n                return args[2].compile().evaluate(scope);\r\n            },\r\n            len: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for len');\r\n                if (args.length !== 1)\r\n                    throw new Error('Too many arguments for len');\r\n                return args[0].compile().evaluate(scope).toString().length;\r\n            },\r\n            stripansi: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for len');\r\n                if (args.length !== 1)\r\n                    throw new Error('Too many arguments for len');\r\n                const ansiRegex = new RegExp('[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))', 'g')\r\n                return args[0].compile().evaluate(scope).toString().replace(ansiRegex, '');\r\n            },\r\n            ansi: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for ansi');\r\n                args = args.map(a =>\r\n                    getAnsiCode(a.toString()) === -1 && a.toString() !== 'current' ? a.compile().evaluate(scope).toString() : a.toString()\r\n                );\r\n                const c = args.length;\r\n                let mod = [];\r\n                let min: any = {};\r\n                let sides;\r\n                let max;\r\n                for (sides = 0; sides < c; sides++) {\r\n                    if (args[sides].trim() === 'current')\r\n                        mod.push(args[sides].trim());\r\n                    else {\r\n                        max = getAnsiCode(args[sides].trim());\r\n                        if (max === -1)\r\n                            throw new Error('Invalid color or style for ansi');\r\n                        //style\r\n                        if (max >= 0 && max < 30)\r\n                            min[max] = 1;\r\n                        //color\r\n                        else\r\n                            mod.push(args[sides]);\r\n                    }\r\n                }\r\n                // fore,back\r\n                if (mod.length > 2)\r\n                    throw new Error('Too many colors for ansi');\r\n                if (mod.length > 1) {\r\n                    if (mod[1] === 'current')\r\n                        mod[1] = '';\r\n                    else\r\n                        mod[1] = getAnsiCode(mod[1], true);\r\n                }\r\n                if (mod.length > 0) {\r\n                    if (min[1] && mod[0] === 'white')\r\n                        mod[0] = '';\r\n                    else if (mod[0] === 'current')\r\n                        mod[0] = '';\r\n                    else\r\n                        mod[0] = getAnsiCode(mod[0]);\r\n                }\r\n\r\n                min = [...Object.keys(min), ...mod]\r\n                if (!min.length)\r\n                    throw new Error('Invalid colors or styles for ansi');\r\n                //remove any current flags\r\n                min = min.filter(f => f !== '');\r\n                return `\\x1b[${min.join(';')}m`;\r\n            },\r\n            color: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for color');\r\n                args = args.map(a =>\r\n                    getAnsiCode(a.toString()) === -1 && a.toString() !== 'current' ? a.compile().evaluate(scope).toString() : a.toString()\r\n                );\r\n                let c;\r\n                let sides;\r\n                if (args.length === 1) {\r\n                    if (args[0] === 'bold')\r\n                        return '370';\r\n                    c = getAnsiColorCode(args[0]);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid fore color');\r\n                    return c.toString();\r\n                }\r\n                else if (args.length === 2) {\r\n                    if (args[0] === 'bold')\r\n                        c = 370;\r\n                    else {\r\n                        c = getAnsiColorCode(args[0]);\r\n                        if (c === -1)\r\n                            throw new Error('Invalid fore color');\r\n                        if (args[1] === 'bold')\r\n                            return (c * 10).toString();\r\n                    }\r\n                    sides = c.toString();\r\n                    c = getAnsiColorCode(args[1], true);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid back color');\r\n                    return sides + ',' + c.toString();\r\n                }\r\n                else if (args.length === 3) {\r\n                    if (args[0] === 'bold') {\r\n                        args.shift();\r\n                        args.push('bold');\r\n                    }\r\n                    if (args[2] !== 'bold')\r\n                        throw new Error('Only bold is supported as third argument for color');\r\n                    c = getAnsiColorCode(args[0]);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid fore color');\r\n                    sides = (c * 10).toString();\r\n                    c = getAnsiColorCode(args[1], true);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid back color');\r\n                    return sides + ',' + c.toString();\r\n                }\r\n                throw new Error('Too many arguments');\r\n            },\r\n            zcolor: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for zcolor');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for zcolor');\r\n                return getColorCode(parseInt(args[0].compile().evaluate(scope), 10));\r\n            },\r\n            case: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for case');\r\n                let i = args[0].compile().evaluate(scope);\r\n                if (i > 0 && i < args.length)\r\n                    return args[i].compile().evaluate(scope);\r\n                return null;\r\n            },\r\n            switch: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for switch');\r\n                if (args.length % 2 === 1)\r\n                    throw new Error('All expressions must have a value for switch');\r\n                let i = args.length\r\n                for (let c = 0; c < i; c += 2) {\r\n                    if (args[c].compile().evaluate(scope))\r\n                        return args[c + 1].compile().evaluate(scope);\r\n                }\r\n                return null;\r\n            },\r\n            ascii: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for ascii');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for ascii');\r\n                if (args[0].toString().trim().length === 0)\r\n                    throw new Error('Invalid argument, empty string for ascii');\r\n                return args[0].toString().trim().charCodeAt(0);\r\n            },\r\n            char: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for char');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for char');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for char');\r\n                return String.fromCharCode(c);\r\n            },\r\n            bitand: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitand');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitand');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for bitand');\r\n                let sides = args[1].compile().evaluate(scope);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1].toString() + '\\' must be a number for bitand');\r\n                return c & sides;\r\n            },\r\n            bitnot: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitnot');\r\n                else if (args.length !== 1)\r\n                    throw new Error('Too many arguments for bitnot');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for bitnot');\r\n                return ~c;\r\n            },\r\n            bitor: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitor');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitor');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for bitor');\r\n                let sides = args[1].compile().evaluate(scope);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1].toString() + '\\' must be a number for bitor');\r\n                return c | sides;\r\n            },\r\n            bitset: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitset');\r\n                else if (args.length > 3)\r\n                    throw new Error('Too many arguments for bitset');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for bitset');\r\n                let sides = args[1].compile().evaluate(scope);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1].toString() + '\\' must be a number for bitset');\r\n                sides--;\r\n                let mod = 1;\r\n                if (args.length === 3) {\r\n                    mod = args[2].compile().evaluate(scope);\r\n                    if (isNaN(mod))\r\n                        throw new Error('Invalid argument \\'' + args[2].toString() + '\\' must be a number for bitset');\r\n                }\r\n                return (c & (~(1 << sides))) | ((mod ? 1 : 0) << sides);\r\n            },\r\n            bitshift: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitshift');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitshift');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for bitshift');\r\n                let sides = args[1].compile().evaluate(scope);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1].toString() + '\\' must be a number for bitshift');\r\n                if (sides < 0)\r\n                    return c >> -sides;\r\n                return c << sides\r\n            },\r\n            bittest: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bittest');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bittest');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for bittest');\r\n                let sides = args[1].compile().evaluate(scope);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1].toString() + '\\' must be a number for bittest');\r\n                sides--;\r\n                return ((c >> sides) % 2 != 0) ? 1 : 0;\r\n            },\r\n            bitxor: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitxor');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitxor');\r\n                let c = args[0].compile().evaluate(scope);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0].toString() + '\\' must be a number for bitxor');\r\n                let sides = args[1].compile().evaluate(scope);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1].toString() + '\\' must be a number for bitxor');\r\n                return c ^ sides;\r\n            },\r\n            tonumber: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for number');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for number');\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/))\r\n                    return parseInt(args[0], 10);\r\n                else if (args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return parseFloat(args[0]);\r\n                else if (args[0] === \"true\")\r\n                    return 1;\r\n                else if (args[0] === \"false\")\r\n                    return 0;\r\n                return 0;\r\n            },\r\n            isfloat: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for isfloat');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for isfloat');\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return 1;\r\n                return 0;\r\n\r\n            },\r\n            isnumber: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for isnumber');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for isnumber');\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/) || args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return 1;\r\n                return 0;\r\n            },\r\n            tostring: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for string');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for string');\r\n                return args[0].compile().evaluate(scope).toString();\r\n            },\r\n            float: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for float');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for float');\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/) || args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return parseFloat(args[0]);\r\n                else if (args[0] === \"true\")\r\n                    return 1.0;\r\n                else if (args[0] === \"false\")\r\n                    return 0.0;\r\n                return 0;\r\n            },\r\n            trim: (args, math, scope) => {\r\n                if (args.length !== 1)\r\n                    throw new Error('Missing arguments for trim');\r\n                return args[0].compile().evaluate(scope).toString().trim();\r\n            },\r\n            trimleft: (args, math, scope) => {\r\n                if (args.length !== 1)\r\n                    throw new Error('Missing arguments for trimleft');\r\n                return args[0].compile().evaluate(scope).toString().trimLeft();\r\n            },\r\n            trimright: (args, math, scope) => {\r\n                if (args.length !== 1)\r\n                    throw new Error('Missing arguments for trimright');\r\n                return args[0].compile().evaluate(scope).toString().trimRight();\r\n            },\r\n            pos: (args, math, scope) => {\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for pos');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for pos');\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                args[1] = args[1].compile().evaluate(scope).toString();\r\n                return args[1].indexOf(args[0]) + 1;\r\n            },\r\n            ipos: (args, math, scope) => {\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for pos');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for pos');\r\n                args[0] = args[0].compile().evaluate(scope).toString().toLowerCase();\r\n                args[1] = args[1].compile().evaluate(scope).toString().toLowerCase();\r\n                return args[1].indexOf(args[0]) + 1;\r\n            },\r\n            ends: (args, math, scope) => {\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for ends');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for ends');\r\n                args[0] = args[0].compile().evaluate(scope).toString().toLowerCase();\r\n                args[1] = args[1].compile().evaluate(scope).toString().toLowerCase();\r\n                return args[0].endsWith(args[1]);\r\n            },\r\n            begins: (args, math, scope) => {\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for begins');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for begins');\r\n                args[0] = args[0].compile().evaluate(scope).toString().toLowerCase();\r\n                args[1] = args[1].compile().evaluate(scope).toString().toLowerCase();\r\n                return args[0].startsWith(args[1]);\r\n            },\r\n            alarm: (args, math, scope) => {\r\n                let alarms;\r\n                let a;\r\n                let al;\r\n                let t;\r\n                let p;\r\n                switch (args.length) {\r\n                    case 0:\r\n                        throw new Error('Missing arguments for alarm');\r\n                    case 1:\r\n                        args[0] = args[0].compile().evaluate(scope).toString();\r\n                        alarms = this.client.alarms;\r\n                        al = alarms.length;\r\n                        if (al === 0)\r\n                            throw new Error('No alarms set.');\r\n                        a = 0;\r\n                        for (; a < al; a++) {\r\n                            //only main state counts here\r\n                            if (alarms[a].type !== TriggerType.Alarm) continue;\r\n                            if (alarms[a].name === args[0] || alarms[a].pattern === args[0]) {\r\n                                if (alarms[a].suspended)\r\n                                    return 0;\r\n                                return this.client.getRemainingAlarmTime(a);\r\n                            }\r\n                        }\r\n                        return;\r\n                    case 2:\r\n                        t = args[1].compile().evaluate(scope);\r\n                        args[0] = args[0].compile().evaluate(scope).toString();\r\n                        alarms = this.client.alarms;\r\n                        al = alarms.length;\r\n                        if (al === 0)\r\n                            throw new Error('No alarms set.');\r\n                        a = 0;\r\n                        if (typeof t === 'string') {\r\n                            for (; a < al; a++) {\r\n                                //only main state counts here\r\n                                if (alarms[a].type !== TriggerType.Alarm) continue;\r\n                                if (alarms[a].name === args[0] || alarms[a].pattern === args[0]) {\r\n                                    if (alarms[a].profile.name.toUpperCase() !== t.toUpperCase())\r\n                                        continue;\r\n                                    if (alarms[a].suspended)\r\n                                        return 0;\r\n                                    return this.client.getRemainingAlarmTime(a);\r\n                                }\r\n                            }\r\n                            throw new Error('Alarm not found in profile: ' + t + '.');\r\n                        }\r\n                        else {\r\n                            for (; a < al; a++) {\r\n                                //only main state counts here\r\n                                if (alarms[a].type !== TriggerType.Alarm) continue;\r\n                                if (alarms[a].name === args[0] || alarms[a].pattern === args[0]) {\r\n                                    if (!alarms[a].suspended)\r\n                                        this.client.setAlarmTempTime(a, t);\r\n                                    return t;\r\n                                }\r\n                            }\r\n                            throw new Error('Alarm not found.');\r\n                        }\r\n                    case 3:\r\n                        t = args[1].compile().evaluate(scope);\r\n                        args[0] = args[0].compile().evaluate(scope).toString()\r\n                        p = args[2].compile().evaluate(scope).toString();\r\n                        alarms = this.client.alarms;\r\n                        al = alarms.length;\r\n                        if (al === 0)\r\n                            throw new Error('No alarms set.');\r\n                        a = 0;\r\n                        for (; a < al; a++) {\r\n                            //only main state counts here\r\n                            if (alarms[a].type !== TriggerType.Alarm) continue;\r\n                            if (alarms[a].name === args[0] || alarms[a].pattern === args[0]) {\r\n                                if (alarms[a].profile.name.toUpperCase() !== p.toUpperCase())\r\n                                    continue;\r\n                                if (!alarms[a].suspended)\r\n                                    this.client.setAlarmTempTime(a, t);\r\n                                return t;\r\n                            }\r\n                        }\r\n                        throw Error('Could not set time, alarm not found in profile: ' + args[2] + '.');\r\n                }\r\n                throw new Error('Too many arguments for alarm');\r\n            },\r\n            state: (args, math, scope) => {\r\n                let trigger;\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for state');\r\n                if (args.length > 2)\r\n                    throw new Error('Too many arguments for state');\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                if (args.length === 1) {\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0)\r\n                        return null;\r\n                    if (kl === 1) {\r\n                        if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                            throw Error('No enabled profiles found!');\r\n                        trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                        trigger = trigger.find(t => {\r\n                            return t.name === args[0] || t.pattern === args[0];\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; k < kl; k++) {\r\n                            if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                continue;\r\n                            trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                            trigger = trigger.find(t => {\r\n                                return t.name === args[0] || t.pattern === args[0];\r\n                            });\r\n                            if (trigger)\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                else if (args.length === 2) {\r\n                    args[1] = args[1].compile().evaluate(scope);\r\n                    let profile;\r\n                    if (this.client.profiles.contains(args[1]))\r\n                        profile = this.client.profiles.items[args[1].toLowerCase()];\r\n                    else\r\n                        throw new Error('Profile not found: ' + args[1]);\r\n                    trigger = SortItemArrayByPriority(profile.triggers);\r\n                    trigger = trigger.find(t => {\r\n                        return t.name === args[0] || t.pattern === args[0];\r\n                    });\r\n                }\r\n                if (trigger)\r\n                    return trigger.triggers && trigger.triggers.length ? trigger.state : 0;\r\n                throw new Error('Trigger not found');\r\n            },\r\n            isnull: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    return null;\r\n                if (args.length !== 1)\r\n                    throw new Error('Too many arguments for null');\r\n                return args[0].compile().evaluate(scope) ? 1 : 0;\r\n            },\r\n            escape: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for unescape');\r\n                if (args.length !== 1)\r\n                    throw new Error('Too many arguments for unescape');\r\n                let c;\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                if (this.client.getOption('allowEscape')) {\r\n                    const escape = this.client.getOption('allowEscape') ? this.client.getOption('escapeChar') : '';\r\n                    c = escape;\r\n                    if (escape === '\\\\')\r\n                        c += escape;\r\n                    if (this.client.getOption('parseDoubleQuotes'))\r\n                        c += '\"';\r\n                    if (this.client.getOption('parseSingleQuotes'))\r\n                        c += '\\'';\r\n                    if (this.client.getOption('commandStacking'))\r\n                        c += this.client.getOption('commandStackingChar');\r\n                    if (this.client.getOption('enableSpeedpaths'))\r\n                        c += this.client.getOption('speedpathsChar');\r\n                    if (this.client.getOption('enableCommands'))\r\n                        c += this.client.getOption('commandChar');\r\n                    if (this.client.getOption('enableVerbatim'))\r\n                        c += this.client.getOption('verbatimChar');\r\n                    if (this.client.getOption('enableDoubleParameterEscaping'))\r\n                        c += this.client.getOption('parametersChar');\r\n                    if (this.client.getOption('enableNParameters'))\r\n                        c += this.client.getOption('nParametersChar');\r\n                    return args.replace(new RegExp(`[${c}]`, 'g'), escape + '$&');\r\n                }\r\n                return args.replace(/[\\\\\"']/g, '\\$&');\r\n            },\r\n            unescape: (args, math, scope) => {\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for unescape');\r\n                if (args.length !== 1)\r\n                    throw new Error('Too many arguments for unescape');\r\n                let c;\r\n                args[0] = args[0].compile().evaluate(scope).toString();\r\n                if (this.client.getOption('allowEscape')) {\r\n                    const escape = this.client.getOption('allowEscape') ? this.client.getOption('escapeChar') : '';\r\n                    c = escape;\r\n                    if (escape === '\\\\')\r\n                        c += escape;\r\n                    if (this.client.getOption('parseDoubleQuotes'))\r\n                        c += '\"';\r\n                    if (this.client.getOption('parseSingleQuotes'))\r\n                        c += '\\'';\r\n                    if (this.client.getOption('commandStacking'))\r\n                        c += this.client.getOption('commandStackingChar');\r\n                    if (this.client.getOption('enableSpeedpaths'))\r\n                        c += this.client.getOption('speedpathsChar');\r\n                    if (this.client.getOption('enableCommands'))\r\n                        c += this.client.getOption('commandChar');\r\n                    if (this.client.getOption('enableVerbatim'))\r\n                        c += this.client.getOption('verbatimChar');\r\n                    if (this.client.getOption('enableDoubleParameterEscaping'))\r\n                        c += this.client.getOption('parametersChar');\r\n                    if (this.client.getOption('enableNParameters'))\r\n                        c += this.client.getOption('nParametersChar');\r\n                    if (escape === '\\\\')\r\n                        return args[0].replace(new RegExp(`\\\\\\\\[${c}]`, 'g'), (m) => m.substr(1));\r\n                    return args[0].replace(new RegExp(`${escape}[${c}]`, 'g'), (m) => m.substr(1));\r\n                }\r\n                return args[0].replace(/\\\\[\\\\\"']/g, (m) => m.substr(1));\r\n            },\r\n            prompt: (args, math, scope) => {\r\n                if (args.length > 3)\r\n                    throw new Error('Too many arguments');\r\n                if (args.length === 0)\r\n                    return window.prompt();\r\n                args = args.map(a => a.compile().evaluate(scope).toString());\r\n                return window.prompt(...args);\r\n            },\r\n            /*\r\n            fileprompt: (args, math, scope) => {\r\n                if (args.length > 2)\r\n                    throw new Error('Too many arguments');\r\n                args = args.map(a => a.compile().evaluate(scope).toString());\r\n                let f = [\r\n                    { name: 'All files (*.*)', extensions: ['*'] },\r\n                ];\r\n                if (args.length > 0 && args[0].trim().length > 0) {\r\n                    f.unshift({\r\n                        name: args[0],\r\n                        extensions: args[0].split(',').map(a => a.trim())\r\n                    })\r\n                }\r\n                var files = dialog.showOpenDialogSync({\r\n                    filters: f,\r\n                    properties: ['openFile', 'promptToCreate'],\r\n                    defaultPath: args.length >= 2 ? parseTemplate(args[1]) : ''\r\n                });\r\n                if (files && files.length) return files[0];\r\n            }\r\n            */\r\n        };\r\n        for (let fun in functions) {\r\n            if (!functions.hasOwnProperty(fun) || typeof functions[fun] !== 'function') {\r\n                continue;\r\n            }\r\n            functions[fun].rawArgs = true;\r\n        }\r\n        _mathjs.import(functions, {});\r\n    }\r\n\r\n    public resetExpressionEngine() {\r\n        if (!_mathjs) return;\r\n        _mathjs = undefined;\r\n    }\r\n\r\n    constructor(client: Client) {\r\n        super();\r\n        if (!client)\r\n            throw new Error('Invalid client!');\r\n        this.client = client;\r\n        //wrap mathjs to load on demand for speed as not every may need math\r\n        mathjs = () => {\r\n            if (_mathjs) return _mathjs;\r\n            this.initMathJS();\r\n            return _mathjs;\r\n        }\r\n        this._commandHistory = [];\r\n        document.addEventListener('keydown', (event) => {\r\n            if (!this.isLocked && this.ProcessMacros(event.which, event.altKey, event.ctrlKey, event.shiftKey, event.metaKey)) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n            //toggle scroll lock\r\n            else if (event.key === 'ScrollLock')\r\n                this.toggleScrollLock();\r\n        });\r\n\r\n        this.client.on('parse-command', (data) => {\r\n            if (this.client.getOption('parseCommands'))\r\n                data.value = this.parseOutgoing(data.value, null, null, null, null, !data.comments);\r\n        });\r\n\r\n        this.client.on('add-line', (data) => {\r\n            this.ExecuteTriggers(TriggerTypes.Regular | TriggerTypes.Pattern | TriggerTypes.LoopExpression, data.line, data.raw, data.fragment, false, true);\r\n            if (this._gag > 0 && !data.fragment) {\r\n                data.gagged = true;\r\n                this._gag--;\r\n            }\r\n            //if not fragment and not gagged count\r\n            if (!data.fragment)\r\n                for (let state in this._TriggerStates) {\r\n                    if (this._TriggerStates[state].lineCount)\r\n                        this._TriggerStates[state].lineCount--;\r\n                    //if (data.remote && this._TriggerStates[state].remoteCount)\r\n                    //this._TriggerStates[state].remoteCount--;\r\n                }\r\n        });\r\n\r\n        this.client.on('options-loaded', () => {\r\n            if (!_mathjs && this.client.getOption('initializeScriptEngineOnLoad'))\r\n                this.initMathJS();\r\n            this.initPads();\r\n        });\r\n\r\n        this.client.commandInput.addEventListener('keyup', event => {\r\n            if (event.key !== 'Escape' && event.key !== 'ArrowUp' && event.key !== 'ArrowDown')\r\n                this._historyIdx = this._commandHistory.length;\r\n        })\r\n\r\n        this.client.commandInput.addEventListener('keydown', event => {\r\n            switch (event.key) {\r\n                case 'Escape': //esc\r\n                    //any modifier set not a proper history navigation    \r\n                    if (event.ctrlKey || event.shiftKey || event.metaKey || event.altKey) return;\r\n                    this.client.commandInput.blur();\r\n                    this.client.commandInput.value = '';\r\n                    this.client.commandInput.select();\r\n                    this._historyIdx = this._commandHistory.length;\r\n                    this._tabIdx = -1;\r\n                    this._tabWords = null;\r\n                    this._tabSearch = null\r\n                    this.emit('history-navigate', event);\r\n                    break;\r\n                case 'ArrowUp': //up\r\n                    //any modifier set not a proper history navigation    \r\n                    if (event.ctrlKey || event.shiftKey || event.metaKey || event.altKey) return;\r\n                    if (this._historyIdx === this._commandHistory.length && this.client.commandInput.value.length > 0) {\r\n                        this.AddCommandToHistory(this.client.commandInput.value);\r\n                        if (this.client.commandInput.value === this._commandHistory[this._historyIdx - 1])\r\n                            this._historyIdx--;\r\n                    }\r\n                    this._historyIdx--;\r\n                    if (this._historyIdx < 0)\r\n                        this._historyIdx = 0;\r\n                    if (this._commandHistory.length < 0) {\r\n                        this._historyIdx = -1;\r\n                        this.client.commandInput.value = '';\r\n                    }\r\n                    else if (this._commandHistory.length > 0 && this._historyIdx < this._commandHistory.length && this._historyIdx >= 0) {\r\n                        this.client.commandInput.value = this._commandHistory[this._historyIdx];\r\n                    }\r\n                    setTimeout(() => this.client.commandInput.select(), 0);\r\n                    this.emit('history-navigate', event);\r\n                    break;\r\n                case 'ArrowDown': //down\r\n                    //any modifier set not a proper history navigation    \r\n                    if (event.ctrlKey || event.shiftKey || event.metaKey || event.altKey) return;\r\n                    if (this._historyIdx === this._commandHistory.length && this.client.commandInput.value.length > 0)\r\n                        this.AddCommandToHistory(this.client.commandInput.value);\r\n                    this._historyIdx++;\r\n                    if (this._historyIdx >= this._commandHistory.length || this._commandHistory.length < 1) {\r\n                        this._historyIdx = this._commandHistory.length;\r\n                        this.client.commandInput.value = '';\r\n                    }\r\n                    else if (this._commandHistory.length > 0 && this._historyIdx < this._commandHistory.length && this._historyIdx >= 0) {\r\n                        this.client.commandInput.value = this._commandHistory[this._historyIdx];\r\n                    }\r\n                    setTimeout(() => this.client.commandInput.select(), 0);\r\n                    this.emit('history-navigate', event);\r\n                    break;\r\n                case 'Enter': // return\r\n                    switch (this.client.getOption('newlineShortcut')) {\r\n                        case NewLineType.Ctrl:\r\n                            if (event.ctrlKey && !event.shiftKey && !event.metaKey && !event.altKey) {\r\n                                insertValue(this.client.commandInput, '\\n');\r\n                                this.emit('history-navigate', event);\r\n                                this.client.commandInput.blur();\r\n                                this.client.commandInput.focus();\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case NewLineType.CtrlAndShift:\r\n                            if (event.ctrlKey && event.shiftKey && !event.metaKey && !event.altKey) {\r\n                                insertValue(this.client.commandInput, '\\n');\r\n                                this.emit('history-navigate', event);\r\n                                this.client.commandInput.blur();\r\n                                this.client.commandInput.focus();\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case NewLineType.CtrlOrShift:\r\n                            if ((event.ctrlKey || event.shiftKey) && !event.metaKey && !event.altKey) {\r\n                                insertValue(this.client.commandInput, '\\n');\r\n                                this.emit('history-navigate', event);\r\n                                this.client.commandInput.blur();\r\n                                this.client.commandInput.focus();\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case NewLineType.Shift:\r\n                            if ((event.ctrlKey && event.shiftKey) && !event.metaKey && !event.altKey) {\r\n                                insertValue(this.client.commandInput, '\\n');\r\n                                this.emit('history-navigate', event);\r\n                                this.client.commandInput.blur();\r\n                                this.client.commandInput.focus();\r\n                                return true;\r\n                            }\r\n                            break;\r\n                    }\r\n                    //only send if no modifiers set\r\n                    if (!event.ctrlKey && !event.shiftKey && !event.metaKey && !event.altKey) {\r\n                        this._tabIdx = -1;\r\n                        this._tabWords = null;\r\n                        this._tabSearch = null\r\n                        event.preventDefault();\r\n                        this.client.sendCommand(null, null, this.client.getOption('allowCommentsFromCommand'));\r\n                        this.emit('history-navigate', event);\r\n                    }\r\n                    break;\r\n                case 'Tab':\r\n                    if (!this.client.getOption('enableTabCompletion') || this.client.commandInput.value.length === 0) return;\r\n                    //any modifiers down do not do tab complete\r\n                    if (event.altKey || event.ctrlKey || event.metaKey) return;\r\n                    if (event.shiftKey)\r\n                        this._tabIdx--;\r\n                    else\r\n                        this._tabIdx++;\r\n                    let start = this.client.commandInput.selectionStart;\r\n                    let end = this.client.commandInput.selectionEnd;\r\n                    if (this._tabWords === null) {\r\n                        const cursorPos = getCursor(this.client.commandInput);\r\n                        //(?=\\s[\\S]+$)\r\n                        let endPos = this.client.commandInput.value.indexOf(' ', cursorPos);\r\n                        if (endPos === -1)\r\n                            endPos = this.client.commandInput.value.indexOf('\\n', cursorPos);\r\n                        let startPos = this.client.commandInput.value.lastIndexOf(' ', cursorPos - 1);\r\n                        if (startPos === -1)\r\n                            startPos = this.client.commandInput.value.indexOf('\\n', cursorPos - 1);\r\n                        if (endPos === -1)\r\n                            endPos = this.client.commandInput.value.length;\r\n                        if (startPos === -1)\r\n                            startPos = 0;\r\n                        else\r\n                            startPos++;\r\n                        start = startPos;\r\n                        end = endPos;\r\n                        if (start === end)\r\n                            end++;\r\n                        const findStr = this.client.commandInput.value.substring(startPos, endPos);\r\n                        //nothing to find so bail\r\n                        if (findStr.length === 0) return;\r\n                        //tabCompletionList\r\n                        //tabCompletionType\r\n                        //this.client.getOption('enableTabCompletion')\r\n                        //TabCompletion\r\n                        this._tabSearch = { start: startPos, end: endPos, find: findStr.length };\r\n                        const regSearch = new RegExp(`^${findStr.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}`, this.client.getOption('ignoreCaseTabCompletion') ? 'i' : '');\r\n                        if (this.client.getOption('tabCompletionLookupType') === TabCompletion.List)\r\n                            this._tabWords = [...new Set(<string>this.client.getOption('tabCompletionList').split(/\\s+/).filter(word => word.match(regSearch)))];\r\n                        else {\r\n                            //get all words that start with findStr then reverse as you want last words first as they are the newest\r\n                            this._tabWords = [].concat(...this.client.display.lines.slice(this.client.display.lines.length - this.client.getOption('tabCompletionBufferLimit')).map(line => line.text.split(/\\s+/))).filter(word => word.match(regSearch)).reverse();\r\n                            if (this.client.getOption('tabCompletionLookupType') === TabCompletion.PrependBuffer)\r\n                                this._tabWords = [...new Set(<string>this.client.getOption('tabCompletionList').split(/\\s+/).filter(word => word.match(regSearch)).reverse())].concat(this._tabWords);\r\n                            else if (this.client.getOption('tabCompletionLookupType') === TabCompletion.AppendBuffer)\r\n                                this._tabWords = this._tabWords.concat([...new Set(<string>this.client.getOption('tabCompletionList').split(/\\s+/).filter(word => word.match(regSearch)).reverse())]);\r\n\r\n                            this._tabWords = [...new Set(this._tabWords)];\r\n                        }\r\n                    }\r\n                    else\r\n                        start -= this._tabSearch.find;\r\n                    if (this._tabWords.length === 0) return;\r\n                    if (this._tabIdx < 0) this._tabIdx = this._tabWords.length - 1;\r\n                    if (this._tabIdx >= this._tabWords.length) this._tabIdx = 0;\r\n\r\n                    const tabCasing = this.client.getOption('tabCompletionReplaceCasing');\r\n                    //Fixes undo/redo but saves all tab changes better to just break undo i think\r\n                    //this.client.commandInput.selectionStart = start;\r\n                    //this.client.commandInput.selectionEnd = end;\r\n                    //insertValue(this.client.commandInput, (tabCasing === 1 ? (this._tabWords[this._tabIdx].toLowerCase()) : (tabCasing === 2 ? this._tabWords[this._tabIdx].toUpperCase() : this._tabWords[this._tabIdx])));\r\n                    this.client.commandInput.value = this.client.commandInput.value.substring(0, start)\r\n                        + (tabCasing === 1 ? (this._tabWords[this._tabIdx].toLowerCase()) : (tabCasing === 2 ? this._tabWords[this._tabIdx].toUpperCase() : this._tabWords[this._tabIdx]))\r\n                        + this.client.commandInput.value.substring(end, this.client.commandInput.value.length);\r\n                    this.client.commandInput.selectionStart = this._tabSearch.start + this._tabSearch.find;\r\n                    this.client.commandInput.selectionEnd = this._tabSearch.start + this._tabWords[this._tabIdx].length;\r\n                    event.preventDefault();\r\n                    this.emit('history-navigate', event);\r\n                    break;\r\n                case 'Shift':\r\n                case 'Control':\r\n                case 'Meta':\r\n                case 'Alt':\r\n                case 'CapsLock':\r\n                case 'Fn':\r\n                case 'NumLock':\r\n                case 'ScrollLock':\r\n                case 'Super':\r\n                case 'PageDown':\r\n                case 'PageUp':\r\n                case 'End':\r\n                case 'Home':\r\n                case 'ArrowLeft':\r\n                case 'ArrowRight':\r\n                case 'ContextMenu':\r\n                    //TODO see if any other keys should not effect tab complete\r\n                    //Do not effect tab completion\r\n                    break;\r\n                default:\r\n                    this._tabIdx = -1;\r\n                    this._tabWords = null;\r\n                    this._tabSearch = null\r\n                    break;\r\n            }\r\n        });\r\n\r\n        this.client.commandInput.addEventListener('mouseup', event => {\r\n            this._tabIdx = -1;\r\n            this._tabWords = null;\r\n            this._tabSearch = null\r\n        });\r\n        //spell-checker:ignore gamepadconnected gamepaddisconnected\r\n        window.addEventListener('gamepadconnected', (e) => {\r\n            if (!this.client.getOption('gamepads')) return;\r\n            if (!this._gamepadCaches)\r\n                this._gamepadCaches = [];\r\n            this._controllers[e.gamepad.index] = { pad: e.gamepad, axes: clone(e.gamepad.axes), state: { axes: [], buttons: [] }, pState: { axes: [], buttons: [] } };\r\n            this._controllersCount++;\r\n            this.updatePads();\r\n        });\r\n\r\n        window.addEventListener('gamepaddisconnected', (e) => {\r\n            if (!this.client.getOption('gamepads')) return;\r\n            delete this._controllers[e.gamepad.index];\r\n            this._controllersCount--;\r\n        });\r\n        this.initPads();\r\n    }\r\n\r\n    private async initPads() {\r\n        if (!this.client || !this.client.options) {\r\n            setTimeout(this.initPads, 5);\r\n            return;\r\n        }\r\n        this._controllers = [];\r\n        this._controllersCount = 0;\r\n        this._gamepadCaches = null;\r\n        if (!this.client.getOption('gamepads')) return;\r\n        const controllers = navigator.getGamepads();\r\n        let ct = 0;\r\n        const cl = controllers.length;\r\n        for (; ct < cl; ct++) {\r\n            if (!controllers[ct]) continue;\r\n            this._controllers[controllers[ct].index] = { pad: controllers[ct], axes: clone(controllers[ct].axes), state: { axes: [], buttons: [] }, pState: { axes: [], buttons: [] } };\r\n            this._controllersCount++;\r\n        }\r\n        this.updatePads();\r\n    }\r\n\r\n    private updatePads() {\r\n        if (this._controllersCount === 0 || !this.client.getOption('gamepads'))\r\n            return;\r\n        const controllers = navigator.getGamepads();\r\n        let c = 0;\r\n        const cl = controllers.length;\r\n        if (!this._gamepadCaches && cl > 0)\r\n            this._gamepadCaches = [];\r\n        for (; c < cl; c++) {\r\n            const controller = controllers[c];\r\n            //no control and did not correctly connect so skip\r\n            if (!controller || !this._controllers[controller.index]) continue;\r\n            const state = this._controllers[controller.index].state;\r\n            const axes = this._controllers[controller.index].axes;\r\n            const bl = controller.buttons.length;\r\n            let i;\r\n            let macros;\r\n            if (!this._gamepadCaches[c])\r\n                this._gamepadCaches[c] = FilterArrayByKeyValue(this.client.macros, 'gamepad', c + 1);\r\n            macros = this._gamepadCaches[c];\r\n            let m = 0;\r\n            const ml = macros.length;\r\n            if (ml === 0) continue;\r\n            for (i = 0; i < bl; i++) {\r\n                let val: any = controller.buttons[i];\r\n                let pressed;\r\n                if (typeof (val) === 'object') {\r\n                    pressed = val.pressed;\r\n                    val = val.value;\r\n                }\r\n                else\r\n                    pressed = val >= 0.5;\r\n                if (state.buttons[i]) {\r\n                    if (state.buttons[i].pressed !== pressed) {\r\n                        state.buttons[i].pressed = pressed;\r\n                        if (!pressed) {\r\n                            for (; m < ml; m++) {\r\n                                if (!macros[m].enabled) continue;\r\n                                if (macros[m].key !== i + 1) continue;\r\n                                if (this.ExecuteMacro(macros[m])) {\r\n                                    if (this._controllersCount > 0 || controllers.length > 0)\r\n                                        requestAnimationFrame(() => { this.updatePads(); });\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    state.buttons[i] = { pct: Math.round(val * 100), pressed: pressed };\r\n                }\r\n            }\r\n\r\n            const al = controller.axes.length;\r\n            let a = 0;\r\n            for (i = 0; i < al; i++) {\r\n                if (state.axes[i] !== controller.axes[i] && controller.axes[i] !== axes[i]) {\r\n                    state.axes[i] = controller.axes[i];\r\n                    if (state.axes[i] < -0.75) {\r\n                        a = -(i + 1);\r\n                    }\r\n                    else if (state.axes[i] > 0.75) {\r\n                        a = i + 1;\r\n                    }\r\n                }\r\n                else if (state.axes[i] < -0.75) {\r\n                    a = -(i + 1);\r\n                }\r\n                else if (state.axes[i] > 0.75) {\r\n                    a = i + 1;\r\n                }\r\n                if (a !== 0)\r\n                    for (; m < ml; m++) {\r\n                        if (!macros[m].enabled) continue;\r\n                        if (macros[m].gamepadAxes !== i + 1) continue;\r\n                        if (this.ExecuteMacro(macros[m])) {\r\n                            if (this._controllersCount > 0 || controllers.length > 0)\r\n                                requestAnimationFrame(() => { this.updatePads(); });\r\n                            return;\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n        if (this._controllersCount > 0 || controllers.length > 0)\r\n            requestAnimationFrame(() => { this.updatePads(); });\r\n    }\r\n\r\n    public adjustLastLine(n, raw?) {\r\n        if (!this.client.display.lines || this.client.display.lines.length === 0)\r\n            return 0;\r\n        if (raw) {\r\n            if (n === this.client.display.lines.length) {\r\n                n--;\r\n                if (this.client.display.lines[n].text.length === 0 && this.client.display.lines[n].raw.length)\r\n                    n--;\r\n            }\r\n            else if (n === this.client.display.lines.length - 1 && this.client.display.lines[n].text.length === 0 && this.client.display.lines[n].raw.length)\r\n                n--;\r\n        }\r\n        else if (n === this.client.display.lines.length) {\r\n            n--;\r\n            if (this.client.display.lines[n].text.length === 0)\r\n                n--;\r\n        }\r\n        else if (n === this.client.display.lines.length - 1 && this.client.display.lines[n].text.length === 0)\r\n            n--;\r\n        return n;\r\n    }\r\n\r\n    get isLocked(): boolean {\r\n        return this._locked === 0 ? false : true;\r\n    }\r\n\r\n    public addLock() {\r\n        this._locked++;\r\n    }\r\n\r\n    public removeLock() {\r\n        this._locked--;\r\n    }\r\n\r\n    public AddCommandToHistory(cmd: string) {\r\n        if ((this._commandHistory.length < 1 || this._commandHistory[this._commandHistory.length - 1] !== cmd) && cmd.length > 0) {\r\n            if (this._commandHistory.length >= this.client.getOption('commandHistorySize'))\r\n                this._commandHistory.shift();\r\n            this._commandHistory.push(cmd);\r\n            this.emit('command-history-changed', this._commandHistory);\r\n        }\r\n    }\r\n\r\n    public clearCommandHistory() {\r\n        this._commandHistory = [];\r\n        this._historyIdx = -1;\r\n        this.emit('command-history-changed', this._commandHistory);\r\n    }\r\n\r\n    public setHistoryIndex(index) {\r\n        if (index < 0 || this._commandHistory.length === 0)\r\n            this._historyIdx = -1;\r\n        else if (index >= this._commandHistory.length)\r\n            this._historyIdx = this._commandHistory.length - 1;\r\n        else\r\n            this._historyIdx = index;\r\n    }\r\n\r\n    public get commandHistory() { return this._commandHistory; }\r\n\r\n    public executeScript(txt: string) {\r\n        if (txt == null)\r\n            return txt;\r\n        let state: number = 0;\r\n        let idx: number = 0;\r\n        let c: string;\r\n        const tl: number = txt.length;\r\n        let fun: string = '';\r\n        let args = [];\r\n        let arg: string = '';\r\n        let raw: string;\r\n        let s = 0;\r\n        const pd: boolean = this.client.getOption('parseDoubleQuotes');\r\n        const ps: boolean = this.client.getOption('parseSingleQuotes');\r\n        const cmdChar: string = this.client.getOption('commandChar');\r\n\r\n        for (; idx < tl; idx++) {\r\n            c = txt.charAt(idx);\r\n            switch (state) {\r\n                //find name\r\n                case 1:\r\n                    if (c === ' ') {\r\n                        state = 2;\r\n                        raw += c;\r\n                    }\r\n                    else {\r\n                        fun += c;\r\n                        raw += c;\r\n                    }\r\n                    break;\r\n                //find arguments\r\n                case 2:\r\n                    if (c === '{') {\r\n                        state = 7;\r\n                        arg += c;\r\n                    }\r\n                    else if (c === '(') {\r\n                        state = 8;\r\n                        arg += c;\r\n                    }\r\n                    else if (c === ' ') {\r\n                        args.push(arg);\r\n                        arg = '';\r\n                    }\r\n                    else {\r\n                        if (c === '\"' && pd)\r\n                            state = 3;\r\n                        else if (c === '\\'' && ps)\r\n                            state = 4;\r\n                        arg += c;\r\n                    }\r\n                    raw += c;\r\n                    break;\r\n                case 3:\r\n                    if (c === '\"')\r\n                        state = 2;\r\n                    //if (c === '\\\\')\r\n                    //state = 5;\r\n                    //else {\r\n                    arg += c;\r\n                    raw += c;\r\n                    //}\r\n                    break;\r\n                case 4:\r\n                    if (c === '\\'')\r\n                        state = 2;\r\n                    //if (c === '\\\\')\r\n                    //state = 6;\r\n                    //else {\r\n                    arg += c;\r\n                    raw += c;\r\n                    //}\r\n                    break;\r\n                case 7:\r\n                    arg += c;\r\n                    if (c === '}') {\r\n                        if (s === 0) {\r\n                            state = 2;\r\n                        }\r\n                        else\r\n                            s--;\r\n                    }\r\n                    else if (c === '{')\r\n                        s++;\r\n                    raw += c;\r\n                    break;\r\n                case 8:\r\n                    arg += c;\r\n                    if (c === ')') {\r\n                        if (s === 0) {\r\n                            state = 2;\r\n                        }\r\n                        else\r\n                            s--;\r\n                    }\r\n                    else if (c === '(')\r\n                        s++;\r\n                    raw += c;\r\n                    break;\r\n                /*\r\n            case 5:\r\n                if (c === '\"') {\r\n                    arg += c;\r\n                    raw += c;\r\n                }\r\n                else {\r\n                    arg += '\\\\';\r\n                    raw += '\\\\';\r\n                    idx--;\r\n                }\r\n                state = 3;\r\n                break;\r\n            case 6:\r\n                if (c === '\\'') {\r\n                    arg += c;\r\n                    raw += c;\r\n                }\r\n                else {\r\n                    arg += '\\\\';\r\n                    raw += '\\\\';\r\n                    idx--;\r\n                }\r\n                state = 4;\r\n                break;\r\n                */\r\n                default:\r\n                    if (idx === 0 && c === cmdChar) {\r\n                        state = 1;\r\n                        fun = '';\r\n                        args = [];\r\n                        arg = '';\r\n                        raw = c;\r\n                    }\r\n                    else\r\n                        return txt;\r\n                    break;\r\n            }\r\n        }\r\n        if (fun.length > 0) {\r\n            //if (state === 3)\r\n            //arg += '\"';\r\n            //else if (state === 4)\r\n            //arg += '\\'';\r\n            if (arg.endsWith('\\n'))\r\n                arg = arg.substring(0, arg.length - 1);\r\n            if (arg.length > 0) args.push(arg);\r\n            return this.executeFunction(fun, args, raw, cmdChar);\r\n        }\r\n        return txt;\r\n    }\r\n\r\n    public executeFunction(fun: string, args, raw: string, cmdChar: string) {\r\n        let n;\r\n        let f = false;\r\n        let items;\r\n        let al;\r\n        let i;\r\n        let tmp;\r\n        let profile = null;\r\n        let name = null;\r\n        let item;\r\n        let p;\r\n        let reload;\r\n        let trigger;\r\n        let avg;\r\n        let max;\r\n        let min;\r\n        switch (fun.toLowerCase()) {\r\n            //spell-checker:ignore untrigger unaction\r\n            case 'unaction':\r\n            case 'untrigger':\r\n            case 'unt':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                profile = null;\r\n                name = null;\r\n                reload = true;\r\n                if (args.length < 1 || args.length > 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'unt\\x1b[0;-11;-12mrigger {pattern|name} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                if (args[0].length === 0)\r\n                    throw new Error('Invalid name or pattern');\r\n                //{pattern} {commands} profile\r\n                if (args[0].match(/^\\{.*\\}$/g))\r\n                    args[0] = this.parseInline(args[0].substr(1, args[0].length - 2));\r\n                else\r\n                    args[0] = this.parseInline(this.stripQuotes(args[0]));\r\n                if (args.length === 2) {\r\n                    profile = this.stripQuotes(args[2]);\r\n                    profile = this.parseInline(profile);\r\n                }\r\n                if (!profile || profile.length === 0) {\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0)\r\n                        return null;\r\n                    if (kl === 1) {\r\n                        if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                            throw Error('No enabled profiles found!');\r\n                        item = this.client.profiles.items[keys[k]].findAny('triggers', { name: args[0], pattern: args[0] });\r\n                    }\r\n                    else {\r\n                        for (; k < kl; k++) {\r\n                            if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                continue;\r\n                            item = this.client.profiles.items[keys[k]].findAny('triggers', { name: args[0], pattern: args[0] });\r\n                            if (item) {\r\n                                profile = this.client.profiles.items[keys[k]];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!item)\r\n                        throw new Error('Trigger \\'' + args[0] + '\\' not found in \\'' + profile.name + '\\'!');\r\n                    this.client.removeTrigger(item);\r\n                    this.client.echo('Trigger \\'' + args[0] + '\\' removed from \\'' + profile.name + '\\'.', -7, -8, true, true);\r\n                }\r\n                else {\r\n                    profile = this.parseInline(profile);\r\n                    if (this.client.profiles.contains(profile)) {\r\n                        profile = this.client.profiles.items[profile.toLowerCase()];\r\n                        item = profile.findAny('triggers', { name: args[0], pattern: args[0] });\r\n                        if (!item)\r\n                            throw new Error('Trigger \\'' + args[0] + '\\' not found in \\'' + profile.name + '\\'!');\r\n                        this.client.removeTrigger(item);\r\n                        this.client.echo('Trigger \\'' + args[0] + '\\' removed from \\'' + profile.name + '\\'.', -7, -8, true, true);\r\n                    }\r\n                    else\r\n                        throw new Error('Profile not found: ' + profile);\r\n                }\r\n                return null;\r\n            case 'suspend':\r\n            case 'sus':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                switch (args.length) {\r\n                    case 0:\r\n                        tmp = this.client.alarms;\r\n                        if (tmp.length === 0)\r\n                            this.client.echo('No alarms defined.', -7, -8, true, true);\r\n                        else {\r\n                            this.client.setAlarmState(0, false);\r\n                            this._lastSuspend = 0;\r\n                            this.client.echo('Last alarm suspended.', -7, -8, true, true);\r\n                        }\r\n                        return null;\r\n                    case 1:\r\n                        items = this.parseInline(this.stripQuotes(args[0]));\r\n                        tmp = this.client.alarms;\r\n                        al = tmp.length;\r\n                        for (let a = tmp.length - 1; a >= 0; a--) {\r\n                            if (tmp[a].name === items || tmp[a].pattern === items) {\r\n                                this.client.setAlarmState(a, false);\r\n                                this.client.echo('Alarm \\'' + items + '\\' suspended.', -7, -8, true, true);\r\n                                this._lastSuspend = a;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return null;\r\n                    default:\r\n                        throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'sus\\x1b[0;-11;-12mpend id \\x1b[3mprofile\\x1b[0;-11;-12m or \\x1b[4m' + cmdChar + 'sus\\x1b[0;-11;-12mpend');\r\n                }\r\n            case 'resume':\r\n            case 'resu':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                switch (args.length) {\r\n                    case 0:\r\n                        if (this._lastSuspend === -1)\r\n                            return null;\r\n                        this.client.setAlarmState(this._lastSuspend, true);\r\n                        this.client.echo('Last alarm suspended resumed.', -7, -8, true, true);\r\n                        this._lastSuspend = -1;\r\n                        return null;\r\n                    case 1:\r\n                        items = this.parseInline(this.stripQuotes(args[0]));\r\n                        tmp = this.client.alarms;\r\n                        al = tmp.length;\r\n                        for (let a = al - 1; a >= 0; a--) {\r\n                            if (tmp[a].name === items || tmp[a].pattern === items) {\r\n                                this.client.setAlarmState(a, true);\r\n                                this.client.echo('Alarm \\'' + items + '\\' resumed.', -7, -8, true, true);\r\n                                break;\r\n                            }\r\n                        }\r\n                        return null;\r\n                    default:\r\n                        throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'resu\\x1b[0;-11;-12mme id \\x1b[3mprofile\\x1b[0;-11;-12m or \\x1b[4m' + cmdChar + 'resu\\x1b[0;-11;-12mme');\r\n                }\r\n            case 'action':\r\n            case 'ac':\r\n            case 'trigger':\r\n            case 'tr':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region trigger\r\n                item = {\r\n                    profile: null,\r\n                    name: null,\r\n                    pattern: null,\r\n                    commands: null,\r\n                    options: { priority: 0 }\r\n                };\r\n                if (args.length < 2 || args.length > 5)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'tr\\x1b[0;-11;-12migger name {pattern} {commands} \\x1b[3moptions profile\\x1b[0;-11;-12m or \\x1b[4m' + cmdChar + 'tr\\x1b[0;-11;-12migger {pattern} {commands} \\x1b[3m{options} profile\\x1b[0;-11;-12m');\r\n                if (args[0].length === 0)\r\n                    throw new Error('Invalid trigger name or pattern');\r\n\r\n                if (args[0].match(/^\\{.*\\}$/g)) {\r\n                    item.pattern = args.shift();\r\n                    item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                }\r\n                else {\r\n                    item.name = this.parseInline(this.stripQuotes(args.shift()));\r\n                    if (!item.name || item.name.length === 0)\r\n                        throw new Error('Invalid trigger name');\r\n                    if (args[0].match(/^\\{.*\\}$/g)) {\r\n                        item.pattern = args.shift();\r\n                        item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                    }\r\n                }\r\n                if (args.length !== 0) {\r\n                    if (args[0].match(/^\\{[\\s\\S]*\\}$/g)) {\r\n                        item.commands = args.shift();\r\n                        item.commands = item.commands.substr(1, item.commands.length - 2);\r\n                    }\r\n                    if (args.length === 1) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        else\r\n                            args[0] = this.stripQuotes(args[0]);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nocr':\r\n                                    case 'prompt':\r\n                                    case 'case':\r\n                                    case 'verbatim':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                    case 'cmd':\r\n                                    case 'temporary':\r\n                                    case 'temp':\r\n                                    case 'raw':\r\n                                    case 'pattern':\r\n                                    case 'regular':\r\n                                    case 'alarm':\r\n                                    case 'event':\r\n                                    case 'cmdpattern':\r\n                                    case 'loopexpression':\r\n                                        //case 'expression':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('param=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger param option '${o.trim()}'`);\r\n                                            item.options['params'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('type=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger type option '${o.trim()}'`);\r\n                                            if (!this.isTriggerType(tmp[1], TriggerTypeFilter.Main))\r\n                                                throw new Error('Invalid trigger type');\r\n                                            item.options['type'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid trigger priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid trigger option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid trigger options');\r\n                    }\r\n                    else if (args.length === 2) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nocr':\r\n                                    case 'prompt':\r\n                                    case 'case':\r\n                                    case 'verbatim':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                    case 'cmd':\r\n                                    case 'temporary':\r\n                                    case 'temp':\r\n                                    case 'raw':\r\n                                    case 'pattern':\r\n                                    case 'regular':\r\n                                    case 'alarm':\r\n                                    case 'event':\r\n                                    case 'cmdpattern':\r\n                                    case 'loopexpression':\r\n                                        //case 'expression':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('param=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger param option '${o.trim()}'`);\r\n                                            item.options['params'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('type=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger type option '${o.trim()}'`);\r\n                                            if (!this.isTriggerType(tmp[1], TriggerTypeFilter.Main))\r\n                                                throw new Error('Invalid trigger type');\r\n\r\n                                            item.options['type'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid trigger priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid trigger option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid trigger options');\r\n                        item.profile = this.stripQuotes(args[1]);\r\n                        if (item.profile.length !== 0)\r\n                            item.profile = this.parseInline(item.profile);\r\n                    }\r\n                }\r\n                this.createTrigger(item.pattern, item.commands, item.profile, item.options, item.name);\r\n                //#endregion\r\n                return null;\r\n            case 'event':\r\n            case 'ev':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region event\r\n                profile = null;\r\n                reload = true;\r\n                item = {\r\n                    profile: null,\r\n                    name: null,\r\n                    pattern: null,\r\n                    commands: null,\r\n                    options: { priority: 0 }\r\n                };\r\n                if (args.length < 2 || args.length > 4)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'ev\\x1b[0;-11;-12ment name {commands} \\x1b[3moptions profile\\x1b[0;-11;-12m');\r\n                if (args[0].length === 0)\r\n                    throw new Error('Invalid event name');\r\n\r\n                item.name = this.parseInline(this.stripQuotes(args.shift()));\r\n                if (!item.name || item.name.length === 0)\r\n                    throw new Error('Invalid event name');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing commands or options');\r\n\r\n                if (args[0].match(/^\\{[\\s\\S]*\\}$/g)) {\r\n                    item.commands = args.shift();\r\n                    item.commands = item.commands.substr(1, item.commands.length - 2);\r\n                }\r\n                else\r\n                    throw new Error('Missing commands');\r\n                if (args.length === 1) {\r\n                    args[0] = args[0].substr(1, args[0].length - 2);\r\n                    if (args[0].length !== 0) {\r\n                        this.parseInline(args[0]).split(',').forEach(o => {\r\n                            switch (o.trim()) {\r\n                                case 'nocr':\r\n                                case 'prompt':\r\n                                case 'case':\r\n                                case 'verbatim':\r\n                                case 'disable':\r\n                                case 'temporary':\r\n                                case 'temp':\r\n                                    item.options[o.trim()] = true;\r\n                                    break;\r\n                                default:\r\n                                    if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                        tmp = o.trim().split('=');\r\n                                        if (tmp.length !== 2)\r\n                                            throw new Error(`Invalid event priority option '${o.trim()}'`);\r\n                                        i = parseInt(tmp[1], 10);\r\n                                        if (isNaN(i))\r\n                                            throw new Error('Invalid event priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                        item.options['priority'] = i;\r\n                                    }\r\n                                    else\r\n                                        throw new Error(`Invalid event option '${o.trim()}'`);\r\n                            }\r\n                        });\r\n                    }\r\n                    else\r\n                        throw new Error('Invalid event options');\r\n                }\r\n                else if (args.length === 2) {\r\n                    if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                        args[0] = args[0].substr(1, args[0].length - 2);\r\n                    if (args[0].length !== 0) {\r\n                        this.parseInline(args[0]).split(',').forEach(o => {\r\n                            switch (o.trim()) {\r\n                                case 'nocr':\r\n                                case 'prompt':\r\n                                case 'case':\r\n                                case 'verbatim':\r\n                                case 'disable':\r\n                                case 'temporary':\r\n                                case 'temp':\r\n                                    item.options[o.trim()] = true;\r\n                                    break;\r\n                                default:\r\n                                    if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                        tmp = o.trim().split('=');\r\n                                        if (tmp.length !== 2)\r\n                                            throw new Error(`Invalid event priority option '${o.trim()}'`);\r\n                                        i = parseInt(tmp[1], 10);\r\n                                        if (isNaN(i))\r\n                                            throw new Error('Invalid event priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                        item.options['priority'] = i;\r\n                                    }\r\n                                    else\r\n                                        throw new Error(`Invalid event option '${o.trim()}'`);\r\n                            }\r\n                        });\r\n                    }\r\n                    else\r\n                        throw new Error('Invalid event options');\r\n                    item.profile = this.stripQuotes(args[1]);\r\n                    if (item.profile.length !== 0)\r\n                        item.profile = this.parseInline(item.profile);\r\n                }\r\n\r\n                if (!item.profile || item.profile.length === 0) {\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0)\r\n                        return null;\r\n                    if (kl === 1) {\r\n                        if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                            throw Error('No enabled profiles found!');\r\n                        profile = this.client.profiles.items[keys[0]];\r\n                        tmp = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers.filter(t => t.type === TriggerType.Event));\r\n                        trigger = tmp.find(t => {\r\n                            return t.name === item.name || t.pattern === item.name;\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; k < kl; k++) {\r\n                            if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                continue;\r\n                            tmp = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers.filter(t => t.type === TriggerType.Event));\r\n                            trigger = tmp.find(t => {\r\n                                return t.name === item.name || t.pattern === item.name;\r\n                            });\r\n                            if (trigger) {\r\n                                profile = this.client.profiles.items[keys[k]];\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!profile)\r\n                            profile = this.client.activeProfile;\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.client.profiles.contains(item.profile))\r\n                        profile = this.client.profiles.items[item.profile.toLowerCase()];\r\n                    else\r\n                        throw new Error('Profile not found: ' + item.profile);\r\n                    trigger = tmp.find(t => {\r\n                        return t.name === item.name || t.pattern === item.name;\r\n                    });\r\n                }\r\n                if (!trigger) {\r\n                    trigger = new Trigger();\r\n                    trigger.name = item.name;\r\n                    profile.triggers.push(trigger);\r\n                    this.client.echo('Event \\'' + trigger.name + '\\' added.', -7, -8, true, true);\r\n                    item.new = true;\r\n                }\r\n                else\r\n                    this.client.echo('Event \\'' + trigger.name + '\\' updated.', -7, -8, true, true);\r\n                trigger.pattern = item.name;\r\n                if (item.commands !== null)\r\n                    trigger.value = item.commands;\r\n                trigger.type = TriggerType.Event;\r\n                if (item.options.prompt)\r\n                    trigger.triggerPrompt = true;\r\n                if (item.options.nocr)\r\n                    trigger.triggerNewline = false;\r\n                if (item.options.case)\r\n                    trigger.caseSensitive = true;\r\n                if (item.options.raw)\r\n                    trigger.raw = true;\r\n\r\n                if (item.options.verbatim)\r\n                    trigger.verbatim = true;\r\n                if (item.options.disable)\r\n                    trigger.enabled = false;\r\n                else if (item.options.enable)\r\n                    trigger.enabled = true;\r\n                if (item.options.temporary || item.options.temp)\r\n                    trigger.temp = true;\r\n                trigger.priority = item.options.priority;\r\n                this.client.saveProfiles();\r\n                if (reload)\r\n                    this.client.clearCache();\r\n                if (item.new)\r\n                    this.emit('item-added', 'trigger', profile.name, trigger);\r\n                else\r\n                    this.emit('item-updated', 'trigger', profile.name, profile.triggers.indexOf(trigger), trigger);\r\n                profile = null;\r\n                //#endregion\r\n                return null;\r\n            case 'unevent':\r\n            case 'une':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region unevent\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'une\\x1b[0;-11;-12mvent name or \\x1b[4m' + cmdChar + 'une\\x1b[0;-11;-12mvent {name} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                else {\r\n                    reload = true;\r\n                    profile = null;\r\n                    if (args[0].match(/^\\{.*\\}$/g) || args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g)) {\r\n                        if (args.length > 2)\r\n                            throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'une\\x1b[0;-11;-12mvent name or \\x1b[4m' + cmdChar + 'une\\x1b[0;-11;-12mvent {name} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                        if (args.length === 2) {\r\n                            profile = this.parseInline(this.stripQuotes(args[1])).toLowerCase();\r\n                            if (this.client.profiles.contains(profile))\r\n                                profile = this.client.profiles.items[profile];\r\n                            else\r\n                                throw new Error('Profile not found: ' + profile);\r\n                        }\r\n                        else\r\n                            profile = this.client.activeProfile;\r\n                        if (args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g))\r\n                            n = this.parseInline(this.stripQuotes(args[0]));\r\n                        else\r\n                            n = this.parseInline(args[0].substr(1, args[0].length - 2));\r\n                    }\r\n                    else {\r\n                        n = this.parseInline(args.join(' '));\r\n                        profile = this.client.activeProfile;\r\n                    }\r\n                    items = SortItemArrayByPriority(profile.triggers.filter(t => t.type === TriggerType.Event));\r\n                    n = this.stripQuotes(n);\r\n                    tmp = n;\r\n                    n = items.findIndex(i => i.pattern === n || i.name === n);\r\n                    f = n !== -1;\r\n                    if (!f)\r\n                        this.client.echo('Event \\'' + tmp + '\\' not found.', -7, -8, true, true);\r\n                    else {\r\n                        this.client.echo('Event \\'' + (items[n].name || items[n].pattern) + '\\' removed.', -7, -8, true, true);\r\n                        if (reload)\r\n                            this.client.removeTrigger(items[n]);\r\n                        else {\r\n                            n = profile.triggers.indexOf(items[n]);\r\n                            profile.triggers.splice(n, 1);\r\n                            this.client.saveProfiles();\r\n                            this.emit('item-removed', 'trigger', profile.name, n);\r\n                        }\r\n                        profile = null;\r\n                    }\r\n                }\r\n                return null;\r\n            //#endregion\r\n            case 'button':\r\n            case 'bu':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region button\r\n                //#button name caption {commands} {icon} options profile\r\n                //#button name|index\r\n                //Options: enable, disable, nosend, chain, append, stretch, priority=#\r\n                if (args.length === 1) {\r\n                    n = this.parseInline(this.stripQuotes(args[0]));\r\n                    items = document.getElementById('user-buttons').children;\r\n                    if (/^\\s*?\\d+\\s*?$/.exec(n)) {\r\n                        n = parseInt(n, 10);\r\n                        if (n < 0 || n >= items.length)\r\n                            throw new Error('Button index must be >= 0 and < ' + items.length);\r\n                        else\r\n                            items[n].click();\r\n                    }\r\n                    else if (items[n])\r\n                        items[n].click();\r\n                    else\r\n                        throw new Error(`Button '${n}' not found`);\r\n                    return null;\r\n                }\r\n                profile = null;\r\n                reload = true;\r\n                item = {\r\n                    profile: null,\r\n                    name: null,\r\n                    caption: null,\r\n                    commands: null,\r\n                    icon: null,\r\n                    options: { priority: 0 }\r\n                };\r\n                if (args.length < 2 || args.length > 5)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'bu\\x1b[0;-11;-12mtton name|index or \\x1b[4m' + cmdChar + 'bu\\x1b[0;-11;-12mtton name \\x1b[3mcaption\\x1b[0;-11;-12m {commands} \\x1b[3m{icon} options profile\\x1b[0;-11;-12m or \\x1b[4m' + cmdChar + 'by\\x1b[0;-11;-12mutton \\x1b[3mcaption\\x1b[0;-11;-12m {commands} \\x1b[3m{icon} {options} profile\\x1b[0;-11;-12m');\r\n                if (args[0].length === 0)\r\n                    throw new Error('Invalid button name, caption or commands');\r\n\r\n                if (args[0].match(/^\\{[\\s\\S]*\\}$/g)) {\r\n                    item.commands = args.shift();\r\n                    item.commands = item.commands.substr(1, item.commands.length - 2);\r\n                }\r\n                else {\r\n                    item.name = this.parseInline(this.stripQuotes(args.shift()));\r\n                    if (!item.name || item.name.length === 0)\r\n                        throw new Error('Invalid button name or caption');\r\n                    if (args[0].match(/^\\{[\\s\\S]*\\}$/g)) {\r\n                        item.commands = args.shift();\r\n                        item.commands = item.commands.substr(1, item.commands.length - 2);\r\n                    }\r\n                    else {\r\n                        item.caption = this.stripQuotes(args.shift());\r\n                        if (!args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            throw new Error('Missing commands');\r\n                    }\r\n                }\r\n\r\n                if (args.length !== 0) {\r\n                    if (args[0].match(/^\\{.*\\}$/g)) {\r\n                        item.icon = args.shift();\r\n                        item.icon = item.icon.substr(1, item.icon.length - 2);\r\n                    }\r\n                    if (args.length === 1) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        else\r\n                            args[0] = this.stripQuotes(args[0]);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nosend':\r\n                                    case 'chain':\r\n                                    case 'append':\r\n                                    case 'stretch':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid button priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid button priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid button option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid button options');\r\n                    }\r\n                    else if (args.length === 2) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nosend':\r\n                                    case 'chain':\r\n                                    case 'append':\r\n                                    case 'stretch':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid button priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid button priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid button option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid button options');\r\n                        item.profile = this.stripQuotes(args[1]);\r\n                        if (item.profile.length !== 0)\r\n                            item.profile = this.parseInline(item.profile);\r\n                    }\r\n                }\r\n                if (!item.profile || item.profile.length === 0) {\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0)\r\n                        return null;\r\n                    if (kl === 1) {\r\n                        if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                            throw Error('No enabled profiles found!');\r\n                        profile = this.client.profiles.items[keys[0]];\r\n                        if (item.name !== null)\r\n                            trigger = this.client.profiles.items[keys[k]].find('buttons', 'name', item.name);\r\n                        else\r\n                            trigger = this.client.profiles.items[keys[k]].find('buttons', 'caption', item.caption);\r\n                    }\r\n                    else {\r\n                        for (; k < kl; k++) {\r\n                            if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                continue;\r\n                            if (item.name !== null)\r\n                                trigger = this.client.profiles.items[keys[k]].find('buttons', 'name', item.name);\r\n                            else\r\n                                trigger = this.client.profiles.items[keys[k]].find('buttons', 'caption', item.caption);\r\n                            if (trigger) {\r\n                                profile = this.client.profiles.items[keys[k]];\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!profile)\r\n                            profile = this.client.activeProfile;\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.client.profiles.contains(item.profile))\r\n                        profile = this.client.profiles.items[item.profile.toLowerCase()];\r\n                    else\r\n                        throw new Error('Profile not found: ' + item.profile);\r\n                    if (item.name !== null)\r\n                        trigger = profile.find('buttons', 'name', item.name);\r\n                    else\r\n                        trigger = profile.find('buttons', 'caption', item.caption);\r\n                }\r\n                if (!trigger) {\r\n                    trigger = new Button();\r\n                    trigger.name = item.name || '';\r\n                    trigger.caption = item.caption || '';\r\n                    profile.buttons.push(trigger);\r\n                    if (!item.name && !item.caption)\r\n                        this.client.echo('Button added.', -7, -8, true, true);\r\n                    else\r\n                        this.client.echo('Button \\'' + (trigger.name || trigger.caption || '') + '\\' added.', -7, -8, true, true);\r\n                    item.new = true;\r\n                }\r\n                else\r\n                    this.client.echo('Button \\'' + (trigger.name || trigger.caption || '') + '\\' updated.', -7, -8, true, true);\r\n                if (item.caption !== null)\r\n                    trigger.caption = item.caption;\r\n                if (item.commands !== null)\r\n                    trigger.value = item.commands;\r\n\r\n                if (item.options.icon)\r\n                    trigger.icon = item.options.icon;\r\n                if (item.options.nosend)\r\n                    trigger.send = false;\r\n                if (item.options.chain)\r\n                    trigger.chain = true;\r\n                if (item.options.append)\r\n                    trigger.append = true;\r\n                if (item.options.stretch)\r\n                    trigger.stretch = true;\r\n                if (item.options.disable)\r\n                    trigger.enabled = false;\r\n                else if (item.options.enable)\r\n                    trigger.enabled = true;\r\n                trigger.priority = item.options.priority;\r\n                this.client.saveProfiles();\r\n                if (reload)\r\n                    this.client.clearCache();\r\n                if (item.new)\r\n                    this.emit('item-added', 'button', profile.name, trigger);\r\n                else\r\n                    this.emit('item-updated', 'button', profile.name, profile.buttons.indexOf(trigger), trigger);\r\n                profile = null;\r\n                //#endregion\r\n                return null;\r\n            case 'unbutton':\r\n            case 'unb':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region unbutton\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'unb\\x1b[0;-11;-12mtton name or \\x1b[4m' + cmdChar + 'unb\\x1b[0;-11;-12mtton {name} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                else {\r\n                    reload = true;\r\n                    profile = null;\r\n                    if (args[0].match(/^\\{.*\\}$/g) || args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g)) {\r\n                        if (args.length > 2)\r\n                            throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'unb\\x1b[0;-11;-12mtton name or \\x1b[4m' + cmdChar + 'unb\\x1b[0;-11;-12mtton {name} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                        if (args.length === 2) {\r\n                            profile = this.parseInline(this.stripQuotes(args[1]));\r\n                            if (this.client.profiles.contains(profile))\r\n                                profile = this.client.profiles.items[profile.toLowerCase()];\r\n                            else\r\n                                throw new Error('Profile not found: ' + profile);\r\n                        }\r\n                        else\r\n                            profile = this.client.activeProfile;\r\n                        if (args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g))\r\n                            n = this.parseInline(this.stripQuotes(args[0]));\r\n                        else\r\n                            n = this.parseInline(args[0].substr(1, args[0].length - 2));\r\n                    }\r\n                    else {\r\n                        n = this.parseInline(args.join(' '));\r\n                        profile = this.client.activeProfile;\r\n                    }\r\n                    items = SortItemArrayByPriority(profile.buttons);\r\n                    tmp = n;\r\n                    if (/^\\s*?\\d+\\s*?$/.exec(n)) {\r\n                        n = parseInt(n, 10);\r\n                        if (n < 0 || n >= items.length)\r\n                            throw new Error('Button index must be >= 0 and < ' + items.length);\r\n                        f = true;\r\n                    }\r\n                    else {\r\n                        n = this.stripQuotes(n);\r\n                        n = items.findIndex(i => i.name === n || i.caption === n);\r\n                        f = n !== -1;\r\n                    }\r\n                    if (!f)\r\n                        this.client.echo('Button \\'' + tmp + '\\' not found.', -7, -8, true, true);\r\n                    else {\r\n                        if (items[n].name.length === 0 && items[n].caption.length === 0)\r\n                            this.client.echo('Button \\'' + tmp + '\\' removed.', -7, -8, true, true);\r\n                        else\r\n                            this.client.echo('Button \\'' + (items[n].name || items[n].caption) + '\\' removed.', -7, -8, true, true);\r\n                        n = profile.buttons.indexOf(items[n]);\r\n                        profile.buttons.splice(n, 1);\r\n                        this.client.saveProfiles();\r\n                        if (reload)\r\n                            this.client.clearCache();\r\n                        this.emit('item-removed', 'button', profile.name, n);\r\n                        profile = null;\r\n                    }\r\n                }\r\n                return null;\r\n            //#endregion button\r\n            case 'alarm':\r\n            case 'ala':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region alarm\r\n                //spell-checker:ignore timepattern\r\n                profile = null;\r\n                name = null;\r\n                reload = true;\r\n                n = false;\r\n                if (args.length < 2 || args.length > 4)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'ala\\x1b[0;-11;-12mrm name {timepattern} {commands} \\x1b[3mprofile\\x1b[0;-11;-12m, \\x1b[4m' + cmdChar + 'ala\\x1b[0;-11;-12mrm name {timepattern} \\x1b[3mprofile\\x1b[0;-11;-12m, or \\x1b[4m' + cmdChar + 'ala\\x1b[0;-11;-12mrm {timepattern} {commands} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                if (args[0].length === 0)\r\n                    throw new Error('Invalid name or timepattern');\r\n                //{pattern} {commands} profile\r\n                if (args[0].match(/^\\{.*\\}$/g)) {\r\n                    if (args.length > 3)\r\n                        throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'ala\\x1b[0;-11;-12mrm {timepattern} {commands} profile');\r\n                    args[0] = args[0].substr(1, args[0].length - 2);\r\n                    args[0] = this.parseInline(args[0]);\r\n                    if (args[1].match(/^\\{[\\s\\S]*\\}$/g))\r\n                        args[1] = args[1].substr(1, args[1].length - 2);\r\n                    if (args.length === 3) {\r\n                        profile = this.stripQuotes(args[2]);\r\n                        profile = this.parseInline(profile);\r\n                    }\r\n\r\n                    if (!profile || profile.length === 0)\r\n                        profile = this.client.activeProfile;\r\n                    else {\r\n                        if (this.client.profiles.contains(profile))\r\n                            profile = this.client.profiles.items[profile.toLowerCase()];\r\n                        else\r\n                            throw new Error('Profile not found: ' + profile);\r\n                    }\r\n                    trigger = new Trigger();\r\n                    trigger.pattern = args[0];\r\n                    trigger.value = args[1];\r\n                    trigger.type = TriggerType.Alarm;\r\n                    profile.triggers.push(trigger);\r\n                    this.client.saveProfiles();\r\n                    if (reload) {\r\n                        this._lastSuspend = -1;\r\n                        this.client.updateAlarms();\r\n                    }\r\n                    this.client.echo('Alarm \\'' + trigger.pattern + '\\' added.', -7, -8, true, true);\r\n                    this.emit('item-added', 'trigger', profile.name, trigger);\r\n                    profile = null;\r\n                    return null;\r\n                }\r\n                name = this.stripQuotes(args[0]);\r\n                if (!name || name.length === 0)\r\n                    throw new Error('Invalid alarm name');\r\n                name = this.parseInline(name);\r\n                let pattern = args[1];\r\n                let commands = null;\r\n                if (pattern.match(/^\\{.*\\}$/g))\r\n                    pattern = pattern.substr(1, pattern.length - 2);\r\n                pattern = this.parseInline(pattern);\r\n                if (args.length === 3) {\r\n                    if (args[2].match(/^\\{[\\s\\S]*\\}$/g))\r\n                        commands = args[2].substr(1, args[2].length - 2);\r\n                    else\r\n                        profile = this.stripQuotes(args[2]);\r\n                }\r\n                else if (args.length === 4) {\r\n                    commands = args[2];\r\n                    profile = this.stripQuotes(args[3]);\r\n                    if (commands.match(/^\\{[\\s\\S]*\\}$/g))\r\n                        commands = commands.substr(1, commands.length - 2);\r\n                }\r\n                if (!profile || profile.length === 0) {\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0)\r\n                        return null;\r\n                    if (kl === 1) {\r\n                        if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                            throw Error('No enabled profiles found!');\r\n                        profile = this.client.profiles.items[keys[0]];\r\n                        trigger = profile.find('triggers', 'name', name);\r\n                        if (!trigger && !commands)\r\n                            throw new Error('Alarm not found!');\r\n                        else if (!trigger) {\r\n                            trigger = new Trigger();\r\n                            trigger.name = name;\r\n                            profile.triggers.push(trigger);\r\n                            this.client.echo('Alarm \\'' + trigger.name + '\\' added.', -7, -8, true, true);\r\n                            n = true;\r\n                        }\r\n                        else\r\n                            this.client.echo('Alarm \\'' + trigger.name + '\\' updated.', -7, -8, true, true);\r\n                    }\r\n                    else {\r\n                        for (; k < kl; k++) {\r\n                            if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                continue;\r\n                            trigger = this.client.profiles.items[keys[k]].find('triggers', 'name', name);\r\n                            if (trigger) {\r\n                                profile = this.client.profiles.items[keys[k]];\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!profile && !commands)\r\n                            throw new Error('Alarm not found!');\r\n                        if (!profile)\r\n                            profile = this.client.activeProfile;\r\n                        if (!trigger) {\r\n                            trigger = new Trigger();\r\n                            n = true;\r\n                            trigger.name = name;\r\n                            profile.triggers.push(trigger);\r\n                            this.client.echo('Alarm \\'' + trigger.name + '\\' added.', -7, -8, true, true);\r\n                        }\r\n                        else\r\n                            this.client.echo('Alarm \\'' + trigger.name + '\\' updated.', -7, -8, true, true);\r\n                    }\r\n                }\r\n                else {\r\n                    profile = this.parseInline(profile);\r\n                    if (this.client.profiles.contains(profile))\r\n                        profile = this.client.profiles.items[profile.toLowerCase()];\r\n                    else\r\n                        throw new Error('Profile not found: ' + profile);\r\n                    trigger = profile.find('triggers', 'name', name);\r\n                    if (!trigger && !commands)\r\n                        throw new Error('Alarm not found!');\r\n                    else if (!trigger) {\r\n                        trigger = new Trigger();\r\n                        trigger.name = name;\r\n                        profile.triggers.push(trigger);\r\n                        n = true;\r\n                        this.client.echo('Alarm \\'' + trigger.name + '\\' added.', -7, -8, true, true);\r\n                    }\r\n                    else\r\n                        this.client.echo('Alarm \\'' + trigger.name + '\\' updated.', -7, -8, true, true);\r\n                }\r\n                trigger.pattern = pattern;\r\n                trigger.type = TriggerType.Alarm;\r\n                if (commands)\r\n                    trigger.value = commands;\r\n                this.client.saveProfiles();\r\n                if (n)\r\n                    this.emit('item-added', 'trigger', profile.name, trigger);\r\n                else\r\n                    this.emit('item-updated', 'trigger', profile.name, profile.triggers.indexOf(trigger), trigger);\r\n                profile = null;\r\n                if (reload) {\r\n                    this._lastSuspend = -1;\r\n                    this.client.updateAlarms();\r\n                }\r\n                return null;\r\n            //#endregion alarm\r\n            case 'ungag':\r\n            case 'ung':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length > 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'ung\\x1b[0;-11;-12mag number or \\x1b[4m' + cmdChar + 'ung\\x1b[0;-11;-12mag');\r\n                if (this._gagID.length) {\r\n                    clearTimeout(this._gagID.pop());\r\n                    this._gags.pop();\r\n                }\r\n                this._gag = 0;\r\n                return null;\r\n            case 'gag':\r\n            case 'ga':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region gag\r\n                if (args.length === 0) {\r\n                    //if one exist for this line remove it and replace it with new one\r\n                    if (this._gags.length && this._gags[this._gags.length - 1] == this.client.display.lines.length) {\r\n                        this._gag = 0;\r\n                        this._gags.pop();\r\n                    }\r\n                    this._gags.push(this.client.display.lines.length);\r\n                    this._gagID.push(setTimeout(() => {\r\n                        n = this.adjustLastLine(this._gags.pop());\r\n                        if (this._gags.length) {\r\n                            let gl = this._gags.length;\r\n                            while (gl >= 0) {\r\n                                gl--;\r\n                                if (this._gags[gl] > n)\r\n                                    this._gags[gl]--;\r\n                            }\r\n                        }\r\n                        this.client.display.removeLine(n);\r\n                    }, 0));\r\n                    this._gag = 0;\r\n                    return null;\r\n                }\r\n                else if (args.length > 1)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'ga\\x1b[0;-11;-12mg number or \\x1b[4m' + cmdChar + 'ga\\x1b[0;-11;-12mg');\r\n                i = parseInt(args[0], 10);\r\n                if (isNaN(i))\r\n                    throw new Error('Invalid number \\'' + args[0] + '\\'');\r\n                //if one exist for this line remove it and replace it with new one\r\n                if (this._gags.length && this._gags[this._gags.length - 1] == this.client.display.lines.length) {\r\n                    this._gag = 0;\r\n                    this._gags.pop();\r\n                }\r\n                this._gags.push(this.client.display.lines.length);\r\n                if (i >= 0) {\r\n                    this._gagID.push(setTimeout(() => {\r\n                        n = this.adjustLastLine(this._gags.pop());\r\n                        if (this._gags.length) {\r\n                            let gl = this._gags.length;\r\n                            while (gl >= 0) {\r\n                                gl--;\r\n                                if (this._gags[gl] > n)\r\n                                    this._gags[gl]--;\r\n                            }\r\n                        }\r\n                        this.client.display.removeLine(n);\r\n                        this._gag = i;\r\n                    }, 0));\r\n                    this._gag = 0;\r\n                }\r\n                else {\r\n                    this._gagID.push(setTimeout(() => {\r\n                        n = this.adjustLastLine(this._gags.pop());\r\n                        i *= -1;\r\n                        if (i > this.client.display.lines.length)\r\n                            i = this.client.display.lines.length;\r\n                        this.client.display.removeLines(n - i, i);\r\n                        this._gag = 0;\r\n                    }, 0));\r\n                    this._gag = 0;\r\n                }\r\n                return null;\r\n            //#endregion gag\r\n            case 'wait':\r\n            case 'wa':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //filter out empty arguments to avoid trailing spaces\r\n                args = args.filter(a => a);\r\n                if (args.length === 0 || args.length > 1)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'wa\\x1b[0;-11;-12mit number');\r\n                i = parseInt(this.parseInline(args[0]), 10);\r\n                if (isNaN(i))\r\n                    throw new Error('Invalid number \\'' + i + '\\' for wait');\r\n                if (i < 1)\r\n                    throw new Error('Must be greater then zero for wait');\r\n                return i;\r\n            case 'showclient':\r\n            case 'showcl':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.show();\r\n                return null;\r\n            case 'hideclient':\r\n            case 'hidecl':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.hide();\r\n                return null;\r\n            case 'toggleclient':\r\n            case 'togglecl':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.toggle();\r\n                return null;\r\n            case 'raiseevent':\r\n            case 'raise':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (this.client.getOption('parseDoubleQuotes'))\r\n                    args.forEach((a) => {\r\n                        return a.replace(/^\\\"(.*)\\\"$/g, (v, e, w) => {\r\n                            return e.replace(/\\\\\\\"/g, '\"');\r\n                        });\r\n                    });\r\n                if (this.client.getOption('parseSingleQuotes'))\r\n                    args.forEach((a) => {\r\n                        return a.replace(/^\\'(.*)\\'$/g, (v, e, w) => {\r\n                            return e.replace(/\\\\\\'/g, '\\'');\r\n                        });\r\n                    });\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + '\\x1b[4mraise\\x1b[0;-11;-12mevent name or ' + cmdChar + '\\x1b[4mraise\\x1b[0;-11;-12mevent name arguments');\r\n                else if (args.length === 1)\r\n                    this.client.raise(args[0]);\r\n                else\r\n                    this.client.raise(args[0], args.slice(1));\r\n                return null;\r\n            case 'window':\r\n            case 'win':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (this.client.getOption('parseDoubleQuotes'))\r\n                    args.forEach((a) => {\r\n                        return a.replace(/^\\\"(.*)\\\"$/g, (v, e, w) => {\r\n                            return e.replace(/\\\\\\\"/g, '\"');\r\n                        });\r\n                    });\r\n                if (this.client.getOption('parseSingleQuotes'))\r\n                    args.forEach((a) => {\r\n                        return a.replace(/^\\'(.*)\\'$/g, (v, e, w) => {\r\n                            return e.replace(/\\\\\\'/g, '\\'');\r\n                        });\r\n                    });\r\n                if (args.length === 0 || args.length > 3)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + '\\x1b[4mwin\\x1b[0;-11;-12mdow name \\x1b[3mclose\\x1b[0;-11;-12m or ' + cmdChar + '\\x1b[4mwin\\x1b[0;-11;-12mdow new \\x1b[3mcharacter\\x1b[0;-11;-12m');\r\n                else if (args.length === 3)\r\n                    this.client.emit('window', this.stripQuotes(this.parseInline(args[0])), this.stripQuotes(this.parseInline(args[1])), this.stripQuotes(this.parseInline(args.slice(2).join(' '))));\r\n                else if (args.length === 1)\r\n                    this.client.emit('window', this.stripQuotes(this.parseInline(args[0])));\r\n                else\r\n                    this.client.emit('window', this.stripQuotes(this.parseInline(args[0])), this.stripQuotes(this.parseInline(args.slice(1).join(' '))));\r\n                return null;\r\n            case 'raisedelayed':\r\n            case 'raisede':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'raisede\\x1b[0;-11;-12mlayed milliseconds name or \\x1b[4m' + cmdChar + 'raisede\\x1b[0;-11;-12mlayed milliseconds name arguments');\r\n                i = parseInt(this.stripQuotes(this.parseInline(args[0])), 10);\r\n                if (isNaN(i))\r\n                    throw new Error('Invalid number \\'' + args[0] + '\\' for raisedelayed');\r\n                if (i < 1)\r\n                    throw new Error('Must be greater then zero for raisedelayed');\r\n                args.shift();\r\n                if (this.client.getOption('parseDoubleQuotes'))\r\n                    args.forEach((a) => {\r\n                        return a.replace(/^\\\"(.*)\\\"$/g, (v, e, w) => {\r\n                            return e.replace(/\\\\\\\"/g, '\"');\r\n                        });\r\n                    });\r\n                if (this.client.getOption('parseSingleQuotes'))\r\n                    args.forEach((a) => {\r\n                        return a.replace(/^\\'(.*)\\'$/g, (v, e, w) => {\r\n                            return e.replace(/\\\\\\'/g, '\\'');\r\n                        });\r\n                    });\r\n\r\n                if (args.length === 1)\r\n                    this.client.raise(args[0], 0, i);\r\n                else\r\n                    this.client.raise(args[0], args.slice(1), i);\r\n                return null;\r\n            case 'notify':\r\n            case 'not':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'not\\x1b[0;-11;-12mify title \\x1b[3mmessage icon\\x1b[0;-11;-12m');\r\n                else {\r\n                    args[0] = this.stripQuotes(args[0]);\r\n                    if (args[args.length - 1].match(/^\\{.*\\}$/g)) {\r\n                        item = args.pop();\r\n                        n = { icon: this.parseInline(item.substr(1, item.length - 2)) };\r\n                    }\r\n                    if (args.length === 0)\r\n                        throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'not\\x1b[0;-11;-12mify title \\x1b[3mmessage icon\\x1b[0;-11;-12m');\r\n                    if (args.length === 1)\r\n                        this.client.notify(this.parseInline(this.stripQuotes(args[0])), null, n);\r\n                    else\r\n                        this.client.notify(this.parseInline(this.stripQuotes(args[0])), this.parseInline(args.slice(1).join(' ')), n);\r\n                }\r\n                return null;\r\n            case 'idle':\r\n            case 'idletime':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (!this.client.lastSendTime)\r\n                    this.client.echo('Not connected', -7, -8, true, true);\r\n                else\r\n                    this.client.echo('You have been idle: ' + getTimeSpan(Date.now() - this.client.lastSendTime), -7, -8, true, true);\r\n                return null;\r\n            case 'connect':\r\n            case 'connecttime':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (!this.client.connectTime) {\r\n                    if (!moment && this.client.disconnectTime)\r\n                        this.client.echo('Disconnected since: ' + (new Date(this.client.disconnectTime).toLocaleString()), -7, -8, true, true);\r\n                    else if (this.client.disconnectTime)\r\n                        this.client.echo('Disconnected since: ' + new moment(this.client.disconnectTime).format('MM/DD/YYYY hh:mm:ss A'), -7, -8, true, true);\r\n                    else\r\n                        this.client.echo('Not connected', -7, -8, true, true);\r\n                }\r\n                else\r\n                    this.client.echo('You have been connected: ' + getTimeSpan(Date.now() - this.client.connectTime), -7, -8, true, true);\r\n                return null;\r\n            case 'beep':\r\n            case 'be':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.beep();\r\n                return null;\r\n            case 'version':\r\n            case 've':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.echo(this.client.telnet.terminal + ' v' + this.client.version, -7, -8, true, true);\r\n                return null;\r\n            case 'showprompt':\r\n            case 'showp':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                args = this.parseInline(args.join(' '));\r\n                this.client.telnet.receivedData(StringToUint8Array(args), true, true);\r\n                this.client.telnet.prompt = true;\r\n                return null;\r\n            case 'show':\r\n            case 'sh':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                args = this.parseInline(args.join(' ') + '\\n');\r\n                this.client.telnet.receivedData(StringToUint8Array(args), true, true);\r\n                return null;\r\n            case 'sayprompt':\r\n            case 'sayp':\r\n            case 'echoprompt':\r\n            case 'echop':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                args = this.parseInline(args.join(' '));\r\n                this.client.print('\\x1b[-7;-8m' + args + '\\x1b[0m', false);\r\n                return null;\r\n            case 'say':\r\n            case 'sa':\r\n            case 'echo':\r\n            case 'ec':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                args = this.parseInline(args.join(' '));\r\n                if (this.client.telnet.prompt)\r\n                    this.client.print('\\n\\x1b[-7;-8m' + args + '\\x1b[0m\\n', false);\r\n                else\r\n                    this.client.print('\\x1b[-7;-8m' + args + '\\x1b[0m\\n', false);\r\n                this.client.telnet.prompt = false;\r\n                return null;\r\n            case 'print':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                i = this.client.enableTriggers;\r\n                this.client.enableTriggers = false;\r\n                args = this.parseInline(args.join(' '));\r\n                if (this.client.telnet.prompt)\r\n                    this.client.print('\\n\\x1b[-7;-8m' + args + '\\x1b[0m\\n', false);\r\n                else\r\n                    this.client.print('\\x1b[-7;-8m' + args + '\\x1b[0m\\n', false);\r\n                this.client.telnet.prompt = false;\r\n                this.client.enableTriggers = i;\r\n                return null;\r\n            case 'printprompt':\r\n            case 'printp':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                i = this.client.enableTriggers;\r\n                this.client.enableTriggers = false;\r\n                args = this.parseInline(args.join(' '));\r\n                this.client.print('\\x1b[-7;-8m' + args + '\\x1b[0m', false);\r\n                this.client.enableTriggers = i;\r\n                return null;\r\n            case 'alias':\r\n            case 'al':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'al\\x1b[0;-11;-12mias name value or \\x1b[4m' + cmdChar + 'al\\x1b[0;-11;-12mias name {value} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                else if (args.length === 1)\r\n                    throw new Error('Must supply an alias value');\r\n                else {\r\n                    n = this.parseInline(this.stripQuotes(args.shift()));\r\n                    reload = true;\r\n                    profile = null;\r\n                    if (args[0].match(/^\\{.*\\}$/g) || args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g)) {\r\n                        if (args.length > 2)\r\n                            throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'al\\x1b[0;-11;-12mias name value or \\x1b[4m' + cmdChar + 'al\\x1b[0;-11;-12mias name {value} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                        if (args.length === 2) {\r\n                            profile = this.parseInline(this.stripQuotes(args[1]));\r\n                            if (this.client.profiles.contains(profile))\r\n                                profile = this.client.profiles.items[profile.toLowerCase()];\r\n                            else\r\n                                throw new Error('Profile not found: ' + profile);\r\n                        }\r\n                        else\r\n                            profile = this.client.activeProfile;\r\n                        if (args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g))\r\n                            args = this.parseInline(this.stripQuotes(args[0]));\r\n                        else\r\n                            args = this.parseInline(args[0].substr(1, args[0].length - 2));\r\n                    }\r\n                    else {\r\n                        args = args.join(' ');\r\n                        profile = this.client.activeProfile;\r\n                    }\r\n                    items = profile.aliases;\r\n                    args = this.stripQuotes(args);\r\n                    if (/^\\s*?\\d+\\s*?$/.exec(n)) {\r\n                        n = parseInt(n, 10);\r\n                        if (n < 0 || n >= items.length)\r\n                            throw new Error('Alias index must be >= 0 and < ' + items.length);\r\n                        else {\r\n                            items[n].value = args;\r\n                            this.client.echo('Alias \\'' + items[n].pattern + '\\' updated.', -7, -8, true, true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (i = 0, al = items.length; i < al; i++) {\r\n                            if (items[i]['pattern'] === n) {\r\n                                items[i].value = args;\r\n                                this.client.echo('Alias \\'' + n + '\\' updated.', -7, -8, true, true);\r\n                                this.emit('item-updated', 'alias', profile.name, i, tmp);\r\n                                f = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!f) {\r\n                            tmp = new Alias(n, args);\r\n                            items.push(tmp);\r\n                            this.emit('item-added', 'alias', profile.name, tmp);\r\n                            this.client.echo('Alias \\'' + n + '\\' added.', -7, -8, true, true);\r\n                        }\r\n                    }\r\n                    profile.aliases = items;\r\n                    this.client.saveProfiles();\r\n                    profile = null;\r\n                    if (reload)\r\n                        this.client.clearCache();\r\n                }\r\n                return null;\r\n            case 'unalias':\r\n            case 'una':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'una\\x1b[0;-11;-12mlias name or \\x1b[4m' + cmdChar + 'una\\x1b[0;-11;-12mlias {name} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                else {\r\n                    reload = true;\r\n                    profile = null;\r\n                    if (args[0].match(/^\\{.*\\}$/g) || args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g)) {\r\n                        if (args.length > 2)\r\n                            throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'una\\x1b[0;-11;-12mlias name or \\x1b[4m' + cmdChar + 'una\\x1b[0;-11;-12mlias {name} \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                        if (args.length === 2) {\r\n                            profile = this.stripQuotes(args[1]);\r\n                            profile = this.parseInline(profile);\r\n                            if (this.client.profiles.contains(profile))\r\n                                profile = this.client.profiles.items[profile.toLowerCase()];\r\n                            else\r\n                                throw new Error('Profile not found: ' + profile);\r\n                        }\r\n                        else\r\n                            profile = this.client.activeProfile;\r\n                        if (args[0].match(/^\".*\"$/g) || args[0].match(/^'.*'$/g))\r\n                            n = this.parseInline(this.stripQuotes(args[0]));\r\n                        else\r\n                            n = this.parseInline(args[0].substr(1, args[0].length - 2));\r\n                    }\r\n                    else {\r\n                        n = this.parseInline(args.join(' '));\r\n                        profile = this.client.activeProfile;\r\n                    }\r\n                    items = profile.aliases;\r\n                    n = this.stripQuotes(n);\r\n                    if (/^\\s*?\\d+\\s*?$/.exec(n)) {\r\n                        tmp = n;\r\n                        n = parseInt(n, 10);\r\n                        if (n < 0 || n >= items.length)\r\n                            throw new Error('Alias index must be >= 0 and < ' + items.length);\r\n                        else\r\n                            f = true;\r\n                    }\r\n                    else {\r\n                        tmp = n;\r\n                        n = items.findIndex(i => i.pattern === n);\r\n                        f = n !== -1;\r\n                    }\r\n                    if (!f)\r\n                        this.client.echo('Alias \\'' + tmp + '\\' not found.', -7, -8, true, true);\r\n                    else {\r\n                        this.client.echo('Alias \\'' + items[n].pattern + '\\' removed.', -7, -8, true, true);\r\n                        items.splice(n, 1);\r\n                        profile.aliases = items;\r\n                        this.client.saveProfiles();\r\n                        if (reload)\r\n                            this.client.clearCache();\r\n                        profile = null;\r\n                        this.emit('item-removed', 'alias', profile.name, n);\r\n                    }\r\n                }\r\n                return null;\r\n            case 'setsetting':\r\n            case 'sets':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'sets\\x1b[0;-11;-12metting name value');\r\n                else if (args.length === 1)\r\n                    throw new Error('Must supply a setsetting value');\r\n                else {\r\n                    n = this.stripQuotes(this.parseInline(args[0]));\r\n                    args = this.stripQuotes(this.parseInline(args.slice(1).join(' ')));\r\n                    if (/^\\s*?\\d+\\s*?$/.exec(n)) {\r\n                        tmp = n;\r\n                        n = parseInt(n, 10);\r\n                        if (n < 0 || n >= SettingList.length)\r\n                            throw new Error('Setting index must be >= 0 and < ' + SettingList.length);\r\n                        f = true;\r\n                    }\r\n                    else {\r\n                        n = n.toLowerCase();\r\n                        for (i = 0, al = SettingList.length; i < al; i++) {\r\n                            if (SettingList[i][0].toLowerCase() === n) {\r\n                                n = i;\r\n                                f = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!f)\r\n                        throw new Error('Unknown setting \\'' + tmp + '\\'');\r\n                    else {\r\n                        switch (SettingList[n][2]) {\r\n                            case 0:\r\n                                if (SettingList[n][4] > 0 && args.length > SettingList[n][4])\r\n                                    throw new Error('String can not be longer then ' + SettingList[n][4] + ' characters');\r\n                                else {\r\n                                    this.client.setOption(SettingList[n][1] || SettingList[n][0], args);\r\n                                    this.client.echo('Setting \\'' + SettingList[n][0] + '\\' set to \\'' + args + '\\'.', -7, -8, true, true);\r\n                                    this.client.loadOptions();\r\n                                }\r\n                                break;\r\n                            case 1:\r\n                            case 3:\r\n                                switch (args.toLowerCase()) {\r\n                                    case 'true':\r\n                                    case '1':\r\n                                    case 'yes':\r\n                                        this.client.setOption(SettingList[n][1] || SettingList[n][0], true);\r\n                                        this.client.echo('Setting \\'' + SettingList[n][0] + '\\' set to true.', -7, -8, true, true);\r\n                                        this.client.loadOptions();\r\n                                        break;\r\n                                    case 'no':\r\n                                    case 'false':\r\n                                    case '0':\r\n                                        this.client.setOption(SettingList[n][1] || SettingList[n][0], false);\r\n                                        this.client.echo('Setting \\'' + SettingList[n][0] + '\\' set to false.', -7, -8, true, true);\r\n                                        this.client.loadOptions();\r\n                                        break;\r\n                                    case 'toggle':\r\n                                        args = this.client.getOption(SettingList[n][1] || SettingList[n][0]) ? false : true;\r\n                                        this.client.setOption(SettingList[n][1] || SettingList[n][0], args);\r\n                                        this.client.echo('Setting \\'' + SettingList[n][0] + '\\' set to ' + args + '.', -7, -8, true, true);\r\n                                        this.client.loadOptions();\r\n                                        break;\r\n                                    default:\r\n                                        throw new Error('Invalid value, must be true or false');\r\n                                }\r\n                                break;\r\n                            case 2:\r\n                                i = parseInt(args, 10);\r\n                                if (isNaN(i))\r\n                                    throw new Error('Invalid number \\'' + args + '\\'');\r\n                                else {\r\n                                    this.client.setOption(SettingList[n][1] || SettingList[n][0], i);\r\n                                    this.client.echo('Setting \\'' + SettingList[n][0] + '\\' set to \\'' + i + '\\'.', -7, -8, true, true);\r\n                                    this.client.loadOptions();\r\n                                }\r\n                                break;\r\n                            case 4:\r\n                            case 5:\r\n                                throw new Error('Unsupported setting \\'' + n + '\\'');\r\n                        }\r\n                    }\r\n                }\r\n                return null;\r\n            case 'getsetting':\r\n            case 'gets':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'gets\\x1b[0;-11;-12metting name');\r\n                else {\r\n                    n = this.stripQuotes(this.parseInline(args.join(' ')));\r\n                    if (/^\\s*?\\d+\\s*?$/.exec(n)) {\r\n                        n = parseInt(n, 10);\r\n                        if (n < 0 || n >= SettingList.length)\r\n                            throw new Error('Setting index must be >= 0 and < ' + SettingList.length);\r\n                        else\r\n                            f = true;\r\n                    }\r\n                    else {\r\n\r\n                        tmp = n;\r\n                        n = n.toLowerCase();\r\n                        if (n !== 'all') {\r\n                            for (i = 0, al = SettingList.length; i < al; i++) {\r\n                                if (SettingList[i][0].toLowerCase() === n) {\r\n                                    n = i;\r\n                                    f = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (n === 'all') {\r\n                            tmp = 'Current settings:\\n';\r\n                            //this.client.echo(\"Current settings:\", -7, -8, true, true);\r\n                            for (i = 0, al = SettingList.length; i < al; i++) {\r\n                                switch (SettingList[i][2]) {\r\n                                    case 0:\r\n                                    case 2:\r\n                                        //this.client.echo(\"    \"+_SettingList[i][0]+\": \"+getSetting(_SettingList[i][0]), -7, -8, true, true);\r\n                                        tmp += '    ' + SettingList[i][0] + ': ' + this.client.getOption(SettingList[n][1] || SettingList[n][0]) + '\\n';\r\n                                        break;\r\n                                    case 1:\r\n                                    case 3:\r\n                                        if (this.client.getOption(SettingList[n][1] || SettingList[n][0]))\r\n                                            tmp += '    ' + SettingList[i][0] + ': true\\n';\r\n                                        //this.client.echo(\"    \"+_SettingList[i][0]+\": true\", -7, -8, true, true);\r\n                                        else\r\n                                            tmp += '    ' + SettingList[i][0] + ': false\\n';\r\n                                        //this.client.echo(\"    \"+_SettingList[i][0]+\": false\", -7, -8, true, true);\r\n                                        break;\r\n                                }\r\n                            }\r\n                            this.client.echo(tmp, -7, -8, true, true);\r\n                        }\r\n                        else if (!f)\r\n                            throw new Error('Unknown setting \\'' + n + '\\'');\r\n                        else {\r\n                            switch (SettingList[n][2]) {\r\n                                case 0:\r\n                                case 2:\r\n                                    this.client.echo('Setting \\'' + SettingList[n][0] + '\\' is \\'' + this.client.getOption(SettingList[n][1] || SettingList[n][0]) + '\\'', -7, -8, true, true);\r\n                                    break;\r\n                                case 1:\r\n                                case 3:\r\n                                    if (this.client.getOption(SettingList[n][1] || SettingList[n][0]))\r\n                                        this.client.echo('Setting \\'' + SettingList[n][0] + '\\' is true', -7, -8, true, true);\r\n                                    else\r\n                                        this.client.echo('Setting \\'' + SettingList[n][0] + '\\' is false', -7, -8, true, true);\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return null;\r\n            case 'profilelist':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.echo('\\x1b[4mProfiles:\\x1b[0m', -7, -8, true, true);\r\n                const files = this.client.profiles.keys;\r\n                al = files.length;\r\n                for (i = 0; i < al; i++) {\r\n                    if (this.client.profiles.items[files[i]] && this.client.profiles.items[files[i]].enabled)\r\n                        this.client.echo('   ' + this.client.profiles.keys[i] + ' is enabled', -7, -8, true, true);\r\n                    else\r\n                        this.client.echo('   ' + files[i] + ' is disabled', -7, -8, true, true);\r\n                }\r\n                return null;\r\n            case 'profile':\r\n            case 'pro':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'pro\\x1b[0;-11;-12mfile name or \\x1b[4m' + cmdChar + 'pro\\x1b[0;-11;-12mfile name enable/disable');\r\n                else if (args.length === 1) {\r\n                    args[0] = this.parseInline(args[0]);\r\n                    this.client.toggleProfile(args[0]);\r\n                    if (!this.client.profiles.contains(args[0]))\r\n                        throw new Error('Profile not found');\r\n                    else if (this.client.profiles.length === 1)\r\n                        throw new Error(args[0] + ' can not be disabled as it is the only one enabled');\r\n                    if (!this.client.profiles.contains(args[0].toLowerCase()))\r\n                        args = 'Profile not found';\r\n                    else if (this.client.profiles.items[args[0].toLowerCase()].enabled)\r\n                        args = args[0] + ' is enabled';\r\n                    else\r\n                        args = args[0] + ' is disabled';\r\n                }\r\n                else {\r\n                    args[0] = this.parseInline(args[0]).toLowerCase();\r\n                    if (!this.client.profiles.contains(args[0]))\r\n                        throw new Error('Profile not found');\r\n                    if (!args[1])\r\n                        throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'pro\\x1b[0;-11;-12mfile name or \\x1b[4m' + cmdChar + 'pro\\x1b[0;-11;-12mfile name enable/disable');\r\n                    args[1] = this.parseInline(args[1]);\r\n                    switch (args[1].toLowerCase()) {\r\n                        case 'enable':\r\n                        case 'on':\r\n                        case 'yes':\r\n                            if (this.client.profiles.items[args[0].toLowerCase()].enabled)\r\n                                args = args[0] + ' is already enabled';\r\n                            else {\r\n                                this.client.toggleProfile(args[0]);\r\n                                if (this.client.profiles.items[args[0].toLowerCase()].enabled !== -1)\r\n                                    args = args[0] + ' is enabled';\r\n                                else\r\n                                    args = args[0] + ' remains disabled';\r\n                            }\r\n                            break;\r\n                        case 'disable':\r\n                        case 'off':\r\n                        case 'no':\r\n                            if (!this.client.profiles.items[args[0].toLowerCase()].enabled)\r\n                                args = args[0] + ' is already disabled';\r\n                            else {\r\n                                if (this.client.profiles.length === 1)\r\n                                    throw new Error(args[0] + ' can not be disabled as it is the only one enabled');\r\n                                this.client.toggleProfile(args[0]);\r\n                                args = args[0] + ' is disabled';\r\n                            }\r\n                            break;\r\n                        default:\r\n                            throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'pro\\x1b[0;-11;-12mfile name or \\x1b[4m' + cmdChar + 'pro\\x1b[0;-11;-12mfile name enable/disable');\r\n                    }\r\n                }\r\n                if (this.client.telnet.prompt)\r\n                    this.client.print('\\n\\x1b[-7;-8m' + args + '\\x1b[0m\\n', false);\r\n                else\r\n                    this.client.print('\\x1b[-7;-8m' + args + '\\x1b[0m\\n', false);\r\n                this.client.telnet.prompt = false;\r\n                return null;\r\n            case 'color':\r\n            case 'co':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length > 1 && args.length < 4) {\r\n                    item = {\r\n                        profile: null,\r\n                        pattern: null,\r\n                        commands: null\r\n                    };\r\n                    item.pattern = args.shift();\r\n                    if (item.pattern.match(/^\\{.*\\}$/g))\r\n                        item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                    else\r\n                        item.pattern = this.parseInline(this.stripQuotes(item.pattern));\r\n                    if (args.length === 2) {\r\n                        item.commands = cmdChar + 'COLOR ' + this.parseInline(args[0]);\r\n                        item.profile = this.stripQuotes(args[1]);\r\n                        if (item.profile.length !== 0)\r\n                            item.profile = this.parseInline(item.profile);\r\n                    }\r\n                    else\r\n                        item.commands = cmdChar + 'COLOR ' + this.parseInline(args[0]);\r\n                    this.createTrigger(item.pattern, item.commands, item.profile);\r\n                    return null;\r\n                }\r\n                else if (args.length !== 1)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'co\\x1b[0;-11;-12mlor color or \\x1b[4m' + cmdChar + 'co\\x1b[0;-11;-12mlor {pattern} color \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                if (args.length !== 1)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'co\\x1b[0;-11;-12mlor color or \\x1b[4m' + cmdChar + 'co\\x1b[0;-11;-12mlor {pattern} color \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                args[0] = this.parseInline(this.stripQuotes(args[0]));\r\n                n = this.client.display.lines.length;\r\n                if (args[0].trim().match(/^[-|+]?\\d+$/g)) {\r\n                    setTimeout(() => {\r\n                        n = this.adjustLastLine(n);\r\n                        this.client.display.colorSubStrByLine(n, parseInt(args[0], 10));\r\n                    }, 0);\r\n                }\r\n                //back,fore from color function\r\n                else if (args[0].trim().match(/^[-|+]?\\d+\\s*?,\\s*?[-|+]?\\d+$/g)) {\r\n                    args[0] = args[0].split(',');\r\n                    setTimeout(() => {\r\n                        n = this.adjustLastLine(n);\r\n                        this.client.display.colorSubStrByLine(n, parseInt(args[0][0], 10), parseInt(args[0][1], 10));\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    args = args[0].toLowerCase().split(',');\r\n                    if (args.length === 1) {\r\n                        if (args[0] === 'bold')\r\n                            i = 370;\r\n                        if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        setTimeout(() => {\r\n                            n = this.adjustLastLine(n);\r\n                            this.client.display.colorSubStrByLine(n, i);\r\n                        }, 0);\r\n                    }\r\n                    else if (args.length === 2) {\r\n                        if (args[0] === 'bold' && args[1] === 'bold')\r\n                            throw new Error('Invalid fore color');\r\n                        if (args[0] === 'bold')\r\n                            i = 370;\r\n                        else if (args[0] === 'current')\r\n                            i = null;\r\n                        else if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        if (args[1] === 'bold') {\r\n                            setTimeout(() => {\r\n                                n = this.adjustLastLine(n);\r\n                                if (i === 370)\r\n                                    this.client.display.colorSubStrByLine(n, i);\r\n                                else\r\n                                    this.client.display.colorSubStrByLine(n, i * 10);\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            p = i;\r\n                            if (args[1].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                                i = args[1].trim();\r\n                            else if (args[1].trim().match(/^[-|+]?\\d+$/g))\r\n                                i = parseInt(args[1].trim(), 10);\r\n                            else {\r\n                                i = getAnsiColorCode(args[1], true);\r\n                                if (i === -1) {\r\n                                    if (isMXPColor(args[1]))\r\n                                        i = args[1];\r\n                                    else\r\n                                        throw new Error('Invalid back color');\r\n                                }\r\n                            }\r\n                            setTimeout(() => {\r\n                                n = this.adjustLastLine(n);\r\n                                this.client.display.colorSubStrByLine(n, p, i);\r\n                            }, 0);\r\n                        }\r\n                    }\r\n                    else if (args.length === 3) {\r\n                        if (args[0] === 'bold') {\r\n                            args.shift();\r\n                            args.push('bold');\r\n                        }\r\n                        if (args[0].trim() === 'current')\r\n                            i = null;\r\n                        else if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        if (args[2] !== 'bold')\r\n                            throw new Error('Only bold is supported as third argument');\r\n                        else if (!i)\r\n                            i = 370;\r\n                        else\r\n                            p = i * 10;\r\n                        if (args[1].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[1].trim();\r\n                        else if (args[1].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[1].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[1], true);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[1]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid back color');\r\n                            }\r\n                        }\r\n                        setTimeout(() => {\r\n                            n = this.adjustLastLine(n);\r\n                            this.client.display.colorSubStrByLine(n, p, i);\r\n                        }, 0);\r\n                    }\r\n                }\r\n                return null;\r\n            case 'cw':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                trigger = this.stack.regex;\r\n                if (args.length > 1 && args.length < 4) {\r\n                    item = {\r\n                        profile: null,\r\n                        pattern: null,\r\n                        commands: null\r\n                    };\r\n                    item.pattern = args.shift();\r\n                    if (item.pattern.match(/^\\{.*\\}$/g))\r\n                        item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                    else\r\n                        item.pattern = this.parseInline(this.stripQuotes(item.pattern));\r\n                    if (args.length === 2) {\r\n                        item.commands = cmdChar + 'CW ' + this.parseInline(args[0]);\r\n                        item.profile = this.stripQuotes(args[1]);\r\n                        if (item.profile.length !== 0)\r\n                            item.profile = this.parseInline(item.profile);\r\n                    }\r\n                    else\r\n                        item.commands = cmdChar + 'CW ' + this.parseInline(args[0]);\r\n                    this.createTrigger(item.pattern, item.commands, item.profile);\r\n                    return null;\r\n                }\r\n                else if (args.length !== 1)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'cw color or ' + cmdChar + 'cw {pattern} color \\x1b[3mprofile\\x1b[0;-11;-12m');\r\n                //no regex so\r\n                if (!trigger) return null;\r\n                args[0] = this.parseInline(this.stripQuotes(args[0]));\r\n                n = this.client.display.lines.length;\r\n                if (args[0].trim().match(/^[-|+]?\\d+$/g)) {\r\n                    setTimeout(() => {\r\n                        n = this.adjustLastLine(n);\r\n                        //verbatim so color whole line\r\n                        if (trigger.length === 1)\r\n                            this.client.display.colorSubStrByLine(n, parseInt(args[0], 10));\r\n                        else {\r\n                            trigger[1].lastIndex = 0;\r\n                            tmp = trigger[0].matchAll(trigger[1]);\r\n                            for (const match of tmp) {\r\n                                this.client.display.colorSubStrByLine(n, parseInt(args[0], 10), null, match.index, match[0].length);\r\n                            }\r\n                        }\r\n                    }, 0);\r\n                }\r\n                //back,fore from color function\r\n                else if (args[0].trim().match(/^[-|+]?\\d+,[-|+]?\\d+$/g)) {\r\n                    args[0] = args[0].split(',');\r\n                    setTimeout(() => {\r\n                        n = this.adjustLastLine(n);\r\n                        //verbatim so color whole line\r\n                        if (trigger.length === 1)\r\n                            this.client.display.colorSubStrByLine(n, parseInt(args[0][0], 10), parseInt(args[0][1], 10));\r\n                        else {\r\n                            trigger[1].lastIndex = 0;\r\n                            tmp = trigger[0].matchAll(trigger[1]);\r\n                            for (const match of tmp) {\r\n                                this.client.display.colorSubStrByLine(n, parseInt(args[0], 10), parseInt(args[0][1], 10), match.index, match[0].length);\r\n                            }\r\n                        }\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    args = args[0].toLowerCase().split(',');\r\n                    if (args.length === 1) {\r\n                        if (args[0] === 'bold')\r\n                            i = 370;\r\n                        if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        setTimeout(() => {\r\n                            n = this.adjustLastLine(n);\r\n                            //verbatim so color whole line\r\n                            if (trigger.length === 1)\r\n                                this.client.display.colorSubStrByLine(n, i);\r\n                            else {\r\n                                trigger[1].lastIndex = 0;\r\n                                tmp = trigger[0].matchAll(trigger[1]);\r\n                                for (const match of tmp) {\r\n                                    this.client.display.colorSubStrByLine(n, i, null, match.index, match[0].length);\r\n                                }\r\n                            }\r\n                        }, 0);\r\n                    }\r\n                    else if (args.length === 2) {\r\n                        if (args[0] === 'bold' && args[1] === 'bold')\r\n                            throw new Error('Invalid fore color');\r\n                        if (args[0] === 'bold')\r\n                            i = 370;\r\n                        else if (args[0] === 'current')\r\n                            i = null;\r\n                        else if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        if (args[1] === 'bold') {\r\n                            setTimeout(() => {\r\n                                n = this.adjustLastLine(n);\r\n                                if (i !== 370)\r\n                                    i *= 10;\r\n                                //verbatim so color whole line\r\n                                if (trigger.length === 1)\r\n                                    this.client.display.colorSubStrByLine(n, i);\r\n                                else {\r\n                                    trigger[1].lastIndex = 0;\r\n                                    tmp = trigger[0].matchAll(trigger[1]);\r\n                                    for (const match of tmp) {\r\n                                        this.client.display.colorSubStrByLine(n, i, null, match.index, match[0].length);\r\n                                    }\r\n                                }\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            p = i;\r\n                            if (args[1].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                                i = args[1].trim();\r\n                            else if (args[1].trim().match(/^[-|+]?\\d+$/g))\r\n                                i = parseInt(args[1].trim(), 10);\r\n                            else {\r\n                                i = getAnsiColorCode(args[1], true);\r\n                                if (i === -1) {\r\n                                    if (isMXPColor(args[1]))\r\n                                        i = args[1];\r\n                                    else\r\n                                        throw new Error('Invalid back color');\r\n                                }\r\n                            }\r\n                            setTimeout(() => {\r\n                                n = this.adjustLastLine(n);\r\n                                //verbatim so color whole line\r\n                                if (trigger.length === 1)\r\n                                    this.client.display.colorSubStrByLine(n, p, i);\r\n                                else {\r\n                                    trigger[1].lastIndex = 0;\r\n                                    tmp = trigger[0].matchAll(trigger[1]);\r\n                                    for (const match of tmp) {\r\n                                        this.client.display.colorSubStrByLine(n, p, i, match.index, match[0].length);\r\n                                    }\r\n                                }\r\n                            }, 0);\r\n                        }\r\n                    }\r\n                    else if (args.length === 3) {\r\n                        if (args[0] === 'bold') {\r\n                            args.shift();\r\n                            args.push('bold');\r\n                        }\r\n                        if (args[0].trim() === 'current')\r\n                            i = null;\r\n                        else if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        if (args[2] !== 'bold')\r\n                            throw new Error('Only bold is supported as third argument');\r\n                        else if (!i)\r\n                            i = 370;\r\n                        else\r\n                            p = i * 10;\r\n                        if (args[1].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[1].trim();\r\n                        else if (args[1].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[1].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[1], true);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[1]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid back color');\r\n                            }\r\n                        }\r\n                        setTimeout(() => {\r\n                            n = this.adjustLastLine(n);\r\n                            //verbatim so color whole line\r\n                            if (trigger.length === 1)\r\n                                this.client.display.colorSubStrByLine(n, p, i);\r\n                            else {\r\n                                trigger[1].lastIndex = 0;\r\n                                tmp = trigger[0].matchAll(trigger[1]);\r\n                                for (const match of tmp) {\r\n                                    this.client.display.colorSubStrByLine(n, p, i, match.index, match[0].length);\r\n                                }\r\n                            }\r\n                        }, 0);\r\n                    }\r\n                }\r\n                return null;\r\n            case 'pcol':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 1 || args.length > 5)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'pcol color \\x1b[3mXStart, XEnd, YStart, YEnd\\x1b[0;-11;-12m');\r\n                if (args.length > 1) {\r\n                    tmp = [].concat(...args.slice(1).map(s => this.parseInline(this.stripQuotes(s)).split(' ')));\r\n                    if (tmp.length > 4)\r\n                        throw new Error('Too many arguments use ' + cmdChar + 'pcol color \\x1b[3mXStart, XEnd, YStart, YEnd\\x1b[0;-11;-12m');\r\n                    item = { xStart: 0 };\r\n                    if (tmp.length > 0)\r\n                        item.xStart = parseInt(tmp[0], 10);\r\n                    if (tmp.length > 1)\r\n                        item.xEnd = parseInt(tmp[1], 10);\r\n                    if (tmp.length > 2)\r\n                        item.yStart = parseInt(tmp[2], 10);\r\n                    if (tmp.length > 3)\r\n                        item.yEnd = parseInt(tmp[3], 10);\r\n                    if (item.hasOwnProperty('yEnd') && item.yEnd > item.yStart)\r\n                        throw new Error('yEnd must be smaller or equal to yStart');\r\n                    if (item.hasOwnProperty('xEnd') && item.xEnd < item.xStart)\r\n                        throw new Error('xEnd must be larger or equal to xStart');\r\n                }\r\n                else\r\n                    item = { xStart: 0 };\r\n                args[0] = this.parseInline(this.stripQuotes(args[0]));\r\n                n = this.adjustLastLine(this.client.display.lines.length);\r\n                if (args[0].trim().match(/^[-|+]?\\d+$/g)) {\r\n                    setTimeout(() => {\r\n                        this.colorPosition(n, parseInt(args[0], 10), null, item);\r\n                    }, 0);\r\n                }\r\n                //back,fore from color function\r\n                else if (args[0].trim().match(/^[-|+]?\\d+\\s*?,\\s*?[-|+]?\\d+$/g)) {\r\n                    args[0] = args[0].split(',');\r\n                    setTimeout(() => {\r\n                        this.colorPosition(n, parseInt(args[0][0], 10), parseInt(args[0][1], 10), item);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    args = args[0].toLowerCase().split(',');\r\n                    if (args.length === 1) {\r\n                        if (args[0] === 'bold')\r\n                            i = 370;\r\n                        if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        setTimeout(() => {\r\n                            this.colorPosition(n, i, null, item);\r\n                        }, 0);\r\n                    }\r\n                    else if (args.length === 2) {\r\n                        if (args[0] === 'bold' && args[1] === 'bold')\r\n                            throw new Error('Invalid fore color');\r\n                        if (args[0] === 'bold')\r\n                            i = 370;\r\n                        else if (args[0] === 'current')\r\n                            i = null;\r\n                        else if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        if (args[1] === 'bold') {\r\n                            setTimeout(() => {\r\n                                this.colorPosition(n, i === 370 ? i : i * 10, null, item);\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            p = i;\r\n                            if (args[1].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                                i = args[1].trim();\r\n                            else if (args[1].trim().match(/^[-|+]?\\d+$/g))\r\n                                i = parseInt(args[1].trim(), 10);\r\n                            else {\r\n                                i = getAnsiColorCode(args[1], true);\r\n                                if (i === -1) {\r\n                                    if (isMXPColor(args[1]))\r\n                                        i = args[1];\r\n                                    else\r\n                                        throw new Error('Invalid back color');\r\n                                }\r\n                            }\r\n                            setTimeout(() => {\r\n                                this.colorPosition(n, p, i, item);\r\n                            }, 0);\r\n                        }\r\n                    }\r\n                    else if (args.length === 3) {\r\n                        if (args[0] === 'bold') {\r\n                            args.shift();\r\n                            args.push('bold');\r\n                        }\r\n                        if (args[0].trim() === 'current')\r\n                            i = null;\r\n                        else if (args[0].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[0].trim();\r\n                        else if (args[0].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[0].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[0]);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[0]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid fore color');\r\n                            }\r\n                        }\r\n                        if (args[2] !== 'bold')\r\n                            throw new Error('Only bold is supported as third argument');\r\n                        else if (!i)\r\n                            i = 370;\r\n                        else\r\n                            p = i * 10;\r\n                        if (args[1].trim().match(/^#(?:[a-f0-9]{3}|[a-f0-9]{6})\\b$/g))\r\n                            i = args[1].trim();\r\n                        else if (args[1].trim().match(/^[-|+]?\\d+$/g))\r\n                            i = parseInt(args[1].trim(), 10);\r\n                        else {\r\n                            i = getAnsiColorCode(args[1], true);\r\n                            if (i === -1) {\r\n                                if (isMXPColor(args[1]))\r\n                                    i = args[0];\r\n                                else\r\n                                    throw new Error('Invalid back color');\r\n                            }\r\n                        }\r\n                        setTimeout(() => {\r\n                            this.colorPosition(n, p, i, item);\r\n                        }, 0);\r\n                    }\r\n                }\r\n                return null;\r\n            case 'highlight':\r\n            case 'hi':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length > 0 && args.length < 2) {\r\n                    item = {\r\n                        profile: null,\r\n                        pattern: null,\r\n                        commands: cmdChar + 'HIGHLIGHT'\r\n                    };\r\n                    item.pattern = args.shift();\r\n                    if (item.pattern.match(/^\\{.*\\}$/g))\r\n                        item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                    else\r\n                        item.pattern = this.parseInline(this.stripQuotes(item.pattern));\r\n                    if (args.length === 1)\r\n                        item.profile = this.parseInline(this.stripQuotes(args[0]));\r\n                    this.createTrigger(item.pattern, item.commands, item.profile);\r\n                    return null;\r\n                }\r\n                else if (args.length)\r\n                    throw new Error('Too many arguments use \\x1b[4m' + cmdChar + 'hi\\x1b[0;-11;-12mghlight \\x1b[3mpattern profile\\x1b[0;-11;-12m');\r\n                n = this.client.display.lines.length;\r\n                setTimeout(() => {\r\n                    n = this.adjustLastLine(n);\r\n                    this.client.display.highlightSubStrByLine(n);\r\n                }, 0);\r\n                return null;\r\n            case 'break':\r\n            case 'br':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'br\\x1b[0;-11;-12meak\\x1b[0;-11;-12m');\r\n                if (!this.loops.length)\r\n                    throw new Error('\\x1b[4m' + cmdChar + 'br\\x1b[0;-11;-12meak\\x1b[0;-11;-12m must be used in a loop.');\r\n                if (this.stack.break)\r\n                    this.stack.break++;\r\n                else\r\n                    this.stack.break = 1;\r\n                return -1;\r\n            case 'continue':\r\n            case 'cont':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'cont\\x1b[0;-11;-12minue\\x1b[0;-11;-12m');\r\n                if (!this.loops.length)\r\n                    throw new Error('\\x1b[4m' + cmdChar + 'cont\\x1b[0;-11;-12minue\\x1b[0;-11;-12m must be used in a loop.');\r\n                this.stack.continue = true;\r\n                return -2;\r\n            case 'if':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (!args.length || args.length > 3)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'if {expression} {true-command} \\x1b[3m{false-command}\\x1b[0;-11;-12m');\r\n                if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args[0] = args[0].substr(1, args[0].length - 2);\r\n                tmp = null;\r\n                if (this.evaluate(this.parseInline(args[0]))) {\r\n                    if (args[1].match(/^\\{[\\s\\S]*\\}$/g))\r\n                        args[1] = args[1].substr(1, args[1].length - 2);\r\n                    tmp = this.parseOutgoing(args[1]);\r\n                }\r\n                else if (args.length > 2) {\r\n                    if (args[2].match(/^\\{[\\s\\S]*\\}$/g))\r\n                        args[2] = args[2].substr(1, args[2].length - 2);\r\n                    tmp = this.parseOutgoing(args[2]);\r\n                }\r\n                if (tmp != null && tmp.length > 0)\r\n                    return tmp;\r\n                return null;\r\n            case 'case':\r\n            case 'ca':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (!args.length || args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'ca\\x1b[0;-11;-12mse\\x1b[0;-11;-12m index {command 1} \\x1b[3m{command n}\\x1b[0;-11;-12m');\r\n                if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args[0] = args[0].substr(1, args[0].length - 2);\r\n                n = this.evaluate(this.parseInline(args[0]));\r\n                if (typeof n !== 'number')\r\n                    return null;\r\n                if (n > 0 && n < args.length) {\r\n                    if (args[n].match(/^\\{[\\s\\S]*\\}$/g))\r\n                        args[n] = args[n].substr(1, args[n].length - 2);\r\n                    tmp = this.parseOutgoing(args[n]);\r\n                    if (tmp != null && tmp.length > 0)\r\n                        return tmp;\r\n                }\r\n                return null;\r\n            case 'switch':\r\n            case 'sw':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (!args.length || args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'sw\\x1b[0;-11;-12mitch\\x1b[0;-11;-12m (expression) {command} \\x1b[3m(expression) {command} ... {else_command}\\x1b[0;-11;-12m');\r\n                if (args.length % 2 === 1)\r\n                    n = args.pop();\r\n                else\r\n                    n = null;\r\n                al = args.length;\r\n                //skip every other one as odd items are the commands to execute\r\n                for (i = 0; i < al; i += 2) {\r\n                    if (args[i].match(/^\\{[\\s\\S]*\\}$/g))\r\n                        args[i] = args[i].substr(1, args[i].length - 2);\r\n                    if (this.evaluate(this.parseInline(args[i]))) {\r\n                        if (args[i + 1].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[i + 1] = args[i + 1].substr(1, args[i + 1].length - 2);\r\n                        tmp = this.parseOutgoing(args[i + 1]);\r\n                        if (tmp != null && tmp.length > 0)\r\n                            return tmp;\r\n                        return null;\r\n                    }\r\n                }\r\n                if (n) {\r\n                    if (n.match(/^\\{[\\s\\S]*\\}$/g))\r\n                        n = n.substr(1, n.length - 2);\r\n                    tmp = this.parseOutgoing(n);\r\n                    if (tmp != null && tmp.length > 0)\r\n                        return tmp;\r\n                }\r\n                return null\r\n            case 'loop':\r\n            case 'loo':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'loo\\x1b[0;-11;-12mp\\x1b[0;-11;-12m range {commands}');\r\n                n = this.parseInline(args.shift()).split(',');\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                if (n.length === 1) {\r\n                    tmp = parseInt(n[0], 10);\r\n                    if (isNaN(tmp))\r\n                        throw new Error('Invalid loop range \\'' + n[0] + '\\' must be a number');\r\n                    return this.executeForLoop(0, tmp, args);\r\n                }\r\n                tmp = parseInt(n[0], 10);\r\n                if (isNaN(tmp))\r\n                    throw new Error('Invalid loop min \\'' + n[0] + '\\' must be a number');\r\n                i = parseInt(n[1], 10);\r\n                if (isNaN(i))\r\n                    throw new Error('Invalid loop max \\'' + n[1] + '\\' must be a number');\r\n                if (tmp > i) tmp++;\r\n                else tmp--;\r\n                return this.executeForLoop(tmp, i, args);\r\n            case 'repeat':\r\n            case 'rep':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'rep\\x1b[0;-11;-12meat\\x1b[0;-11;-12m expression {commands}');\r\n                i = args.shift();\r\n                if (i.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                i = this.evaluate(this.parseInline(i));\r\n                if (typeof i !== 'number')\r\n                    throw new Error('Arguments must be a number');\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                if (i < 1)\r\n                    return this.executeForLoop((-i) + 1, 1, args);\r\n                return this.executeForLoop(0, i, args);\r\n            case 'until':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'until expression {commands}');\r\n                i = args.shift();\r\n                if (i.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                tmp = [];\r\n                this.loops.push(0);\r\n                while (!this.evaluate(this.parseInline(i))) {\r\n                    let out = this.parseOutgoing(args);\r\n                    if (out != null && out.length > 0)\r\n                        tmp.push(out);\r\n                    if (this.stack.continue) {\r\n                        this.stack.continue = false;\r\n                        continue;\r\n                    }\r\n                    if (this.stack.break) {\r\n                        this.stack.break--;\r\n                        break;\r\n                    }\r\n                }\r\n                this.loops.pop();\r\n                if (tmp.length > 0)\r\n                    return tmp.map(v => v.trim()).join('\\n');\r\n                return null;\r\n            case 'while':\r\n            case 'wh':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'wh\\x1b[0;-11;-12mile expression {commands}');\r\n                i = args.shift();\r\n                if (i.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                tmp = [];\r\n                this.loops.push(0);\r\n                while (this.evaluate(this.parseInline(i))) {\r\n                    let out = this.parseOutgoing(args);\r\n                    if (out != null && out.length > 0)\r\n                        tmp.push(out);\r\n                    if (this.stack.continue) {\r\n                        this.stack.continue = false;\r\n                        continue;\r\n                    }\r\n                    if (this.stack.break) {\r\n                        this.stack.break--;\r\n                        break;\r\n                    }\r\n                }\r\n                this.loops.pop();\r\n                if (tmp.length > 0)\r\n                    return tmp.map(v => v.trim()).join('\\n');\r\n                return null;\r\n            case 'forall':\r\n            case 'fo':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'fo\\x1b[0;-11;-12mrall stringlist {commands}');\r\n                i = args.shift();\r\n                if (i.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                tmp = [];\r\n                i = this.splitByQuotes(this.stripQuotes(this.parseInline(i)), '|');\r\n                al = i.length;\r\n                for (n = 0; n < al; n++) {\r\n                    this.loops.push(i[n]);\r\n                    let out = this.parseOutgoing(args);\r\n                    if (out != null && out.length > 0)\r\n                        tmp.push(out);\r\n                    if (this.stack.continue) {\r\n                        this.stack.continue = false;\r\n                        continue;\r\n                    }\r\n                    if (this.stack.break) {\r\n                        this.stack.break--;\r\n                        break;\r\n                    }\r\n                    this.loops.pop();\r\n                }\r\n                if (tmp.length > 0)\r\n                    return tmp.map(v => v.trim()).join('\\n');\r\n                return null;\r\n            case 'variable':\r\n            case 'var':\r\n            case 'va':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0) {\r\n                    i = Object.keys(this.client.variables);\r\n                    al = i.length;\r\n                    tmp = [];\r\n                    for (n = 0; n < al; n++)\r\n                        tmp.push(i[n] + ' = ' + this.client.variables[i[n]]);\r\n                    return tmp.join('\\n');\r\n                }\r\n                i = args.shift();\r\n                if (i.match(/^\\{.*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                i = this.parseInline(i);\r\n                if (!isValidIdentifier(i))\r\n                    throw new Error(\"Invalid variable name\");\r\n                if (args.length === 0)\r\n                    return this.client.variables[i]?.toString();\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                args = this.parseInline(args);\r\n                if (args.match(/^\\s*?[-|+]?\\d+\\s*?$/))\r\n                    this.client.variables[i] = parseInt(args, 10);\r\n                else if (args.match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    this.client.variables[i] = parseFloat(args);\r\n                else if (args === \"true\")\r\n                    this.client.variables[i] = true;\r\n                else if (args === \"false\")\r\n                    this.client.variables[i] = false;\r\n                else\r\n                    this.client.variables[i] = this.stripQuotes(args);\r\n                return null;\r\n            case 'unvar':\r\n            case 'unv':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length !== 1)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'unv\\x1b[0;-11;-12mar name ');\r\n                i = args.shift();\r\n                if (i.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                i = this.parseInline(i);\r\n                delete this.client.variables[i];\r\n                return null;\r\n            case 'add':\r\n            case 'ad':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'ad\\x1b[0;-11;-12md name value');\r\n                i = args.shift();\r\n                if (i.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                i = this.parseInline(i);\r\n                if (this.client.variables.hasOwnProperty(i) && typeof this.client.variables[i] !== 'number')\r\n                    throw new Error(i + ' is not a number for add');\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                args = this.evaluate(this.parseInline(args));\r\n                if (typeof args !== 'number')\r\n                    throw new Error('Value is not a number for add');\r\n                if (!this.client.variables.hasOwnProperty(i))\r\n                    this.client.variables[i] = args;\r\n                else\r\n                    this.client.variables[i] += args;\r\n                return null;\r\n            case 'math':\r\n            case 'mat':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length < 2)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'mat\\x1b[0;-11;-12mh name value');\r\n                i = args.shift();\r\n                if (i.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    i = i.substr(1, i.length - 2);\r\n                i = this.parseInline(i);\r\n                args = args.join(' ');\r\n                if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                    args = args.substr(1, args.length - 2);\r\n                args = this.evaluate(this.parseInline(args));\r\n                if (typeof args !== 'number')\r\n                    throw new Error('Value is not a number for add');\r\n                this.client.variables[i] = args;\r\n                return null;\r\n            case 'evaluate':\r\n            case 'eva':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'eva\\x1b[0;-11;-12mluate expression');\r\n                args = this.evaluate(this.parseInline(args.join(' ')));\r\n                if (this.client.getOption('ignoreEvalUndefined') && typeof args === 'undefined')\r\n                    args = '';\r\n                else\r\n                    args = '' + args;\r\n                if (this.client.telnet.prompt)\r\n                    this.client.print('\\n' + args + '\\x1b[0m\\n', false);\r\n                else\r\n                    this.client.print(args + '\\x1b[0m\\n', false);\r\n                this.client.telnet.prompt = false;\r\n                return null\r\n            case 'freeze':\r\n            case 'fr':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region freeze\r\n                if (args.length === 0) {\r\n                    this.scrollLock = !this.scrollLock;\r\n                    if (this.scrollLock) {\r\n                        if (this.client.display.scrollAtBottom)\r\n                            this.client.display.scrollUp();\r\n                    }\r\n                    else\r\n                        this.client.display.scrollDisplay();\r\n                }\r\n                else if (args.length === 1) {\r\n                    if (args[0] === \"0\" || args[0] === \"false\") {\r\n                        if (this.scrollLock) {\r\n                            this.scrollLock = false;\r\n                            this.client.display.scrollDisplay();\r\n                        }\r\n                    }\r\n                    else if (!this.scrollLock) {\r\n                        this.scrollLock = true;\r\n                        if (this.client.display.scrollAtBottom)\r\n                            this.client.display.scrollUp();\r\n                    }\r\n                }\r\n                else if (args.length > 1)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'fr\\x1b[0;-11;-12meeze \\x1b[3mnumber\\x1b[0;-11;-12m');\r\n                return null;\r\n            //#endregion freeze                \r\n            case 'clr':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'CLR');\r\n                //nothing to clear so just bail\r\n                if (this.client.display.lines.length === 0)\r\n                    return null;\r\n                i = this.client.display.WindowSize.height + 2;\r\n                //skip trailing new lines\r\n                n = this.client.display.lines.length;\r\n                while (n-- && i) {\r\n                    if (this.client.display.lines[n].text.length)\r\n                        break;\r\n                    i--;\r\n                }\r\n                tmp = [];\r\n                while (i--)\r\n                    tmp.push('\\n');\r\n                this.client.print(tmp.join(''), true);\r\n                return null;\r\n            case 'fire':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                args = this.parseInline(args.join(' ') + '\\n');\r\n                this.ExecuteTriggers(TriggerTypes.Regular | TriggerTypes.Pattern | TriggerTypes.LoopExpression, args, args, false, false);\r\n                return null;\r\n            case 'state': //#STATE id state profile\r\n            case 'sta':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //setup args for easy use\r\n                args = args.map(m => {\r\n                    if (!m || !m.length)\r\n                        return m;\r\n                    if (m.match(/^\\{.*\\}$/g))\r\n                        return this.parseInline(m.substr(1, m.length - 2));\r\n                    return this.parseInline(this.stripQuotes(m));\r\n                })\r\n                switch (args.length) {\r\n                    case 0:\r\n                        throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'sta\\x1b[0;-11;-12mte \\x1b[3m name|pattern state profile\\x1b[0;-11;-12m');\r\n                    case 1:\r\n                        //state\r\n                        if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/)) {\r\n                            if (!this._LastTrigger)\r\n                                throw new Error(\"No trigger has fired yet, unable to set state\");\r\n                            trigger = this._LastTrigger;\r\n                            n = trigger.state;\r\n                            trigger.state = parseInt(args[0], 10);\r\n                        }\r\n                        else {\r\n                            //name|pattern\r\n                            const keys = this.client.profiles.keys;\r\n                            let k = 0;\r\n                            const kl = keys.length;\r\n                            if (kl === 0)\r\n                                return null;\r\n                            if (kl === 1) {\r\n                                if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                                    throw Error('No enabled profiles found!');\r\n                                trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                trigger = trigger.find(t => {\r\n                                    return t.name === args[0] || t.pattern === args[0];\r\n                                });\r\n                            }\r\n                            else {\r\n                                for (; k < kl; k++) {\r\n                                    if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                        continue;\r\n                                    trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                    trigger = trigger.find(t => {\r\n                                        return t.name === args[0] || t.pattern === args[0];\r\n                                    });\r\n                                    if (trigger)\r\n                                        break;\r\n                                }\r\n                            }\r\n                            if (!trigger)\r\n                                throw new Error(\"Trigger not found: \" + args[0]);\r\n                            n = trigger.state;\r\n                            trigger.state = 0;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/))\r\n                            throw new Error('Invalid argument to ' + cmdChar + 'state, first argument must be name|pattern');\r\n                        //name|pattern state\r\n                        if (args[1].match(/^\\s*?[-|+]?\\d+\\s*?$/)) {\r\n                            const keys = this.client.profiles.keys;\r\n                            let k = 0;\r\n                            const kl = keys.length;\r\n                            if (kl === 0)\r\n                                return null;\r\n                            if (kl === 1) {\r\n                                if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                                    throw Error('No enabled profiles found!');\r\n                                trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                trigger = trigger.find(t => {\r\n                                    return t.name === args[0] || t.pattern === args[0];\r\n                                });\r\n                            }\r\n                            else {\r\n                                for (; k < kl; k++) {\r\n                                    if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                        continue;\r\n                                    trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                    trigger = trigger.find(t => {\r\n                                        return t.name === args[0] || t.pattern === args[0];\r\n                                    });\r\n                                    if (trigger)\r\n                                        break;\r\n                                }\r\n                            }\r\n                            if (!trigger)\r\n                                throw new Error(\"Trigger not found: \" + args[0]);\r\n                            n = trigger.state;\r\n                            trigger.state = parseInt(args[1], 10);\r\n                        }\r\n                        //name|pattern profile\r\n                        else {\r\n                            profile = args[1];\r\n                            if (this.client.profiles.contains(profile))\r\n                                profile = this.client.profiles.items[profile.toLowerCase()];\r\n                            else\r\n                                throw new Error('Profile not found: ' + args[1]);\r\n                            trigger = SortItemArrayByPriority(profile.triggers);\r\n                            trigger = trigger.find(t => {\r\n                                return t.name === args[0] || t.pattern === args[0];\r\n                            });\r\n                            if (!trigger)\r\n                                throw new Error(\"Trigger not found: \" + args[0] + \" in profile: \" + profile.name);\r\n                            n = trigger.state;\r\n                            trigger.state = 0;\r\n                        }\r\n                        break;\r\n                    case 3: //name|pattern state profile\r\n                        if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/))\r\n                            throw new Error('Invalid argument to ' + cmdChar + 'state, first argument must be name|pattern');\r\n                        profile = args[2];\r\n                        if (this.client.profiles.contains(profile))\r\n                            profile = this.client.profiles.items[profile.toLowerCase()];\r\n                        else\r\n                            throw new Error('Profile not found: ' + args[2]);\r\n                        trigger = SortItemArrayByPriority(profile.triggers);\r\n                        trigger = trigger.find(t => {\r\n                            return t.name === args[0] || t.pattern === args[0];\r\n                        });\r\n                        if (!trigger)\r\n                            throw new Error(\"Trigger not found: \" + args[0]);\r\n                        n = trigger.state;\r\n                        trigger.state = parseInt(args[1], 10);\r\n                        break;\r\n                    default:\r\n                        throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'sta\\x1b[0;-11;-12mte \\x1b[3m name|pattern state profile\\x1b[0;-11;-12m');\r\n                }\r\n                if (trigger.state < 0 || trigger.state > trigger.triggers.length) {\r\n                    trigger.state = n;\r\n                    throw new Error(\"Trigger state must be greater than or equal to 0 or less than or equal to \" + trigger.triggers.length);\r\n                }\r\n                i = trigger.fired;\r\n                trigger.fired = false;\r\n                this.resetTriggerState(this._TriggerCache.indexOf(trigger), n, i);\r\n                this.client.restartAlarmState(trigger, n, trigger.state);\r\n                this.client.saveProfiles();\r\n                this.client.emit('item-updated', 'trigger', trigger.profile.name, trigger.profile.triggers.indexOf(trigger), trigger);\r\n                this.client.echo('Trigger state set to ' + trigger.state + '.', -7, -8, true, true);\r\n                return null;\r\n            case 'set':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#SET pattern|name state value profile\r\n                //setup args for easy use\r\n                args = args.map(m => {\r\n                    if (!m || !m.length)\r\n                        return m;\r\n                    if (m.match(/^\\{.*\\}$/g))\r\n                        return this.parseInline(m.substr(1, m.length - 2));\r\n                    return this.parseInline(this.stripQuotes(m));\r\n                })\r\n                n = 0;\r\n                i = false;\r\n                switch (args.length) {\r\n                    case 0: //state - set fired to true for last trigger\r\n                        throw new Error('Invalid syntax use ' + cmdChar + 'set \\x1b[3mname|pattern\\x1b[0;-11;-12m state \\x1b[3mvalue profile\\x1b[0;-11;-12m');\r\n                    case 1:\r\n                        //state\r\n                        if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/)) {\r\n                            if (!this._LastTrigger)\r\n                                throw new Error(\"No trigger has fired yet, unable to set state\");\r\n                            trigger = this._LastTrigger;\r\n                            n = parseInt(args[0], 10)\r\n                            if (n < 0 || n > trigger.triggers.length)\r\n                                throw new Error(\"Trigger state must be greater than or equal to 0 or less than or equal to \" + trigger.triggers.length);\r\n                            if (n === 0) {\r\n                                i = trigger.fired;\r\n                                trigger.fired = true;\r\n                            }\r\n                            else {\r\n                                i = trigger.triggers[n - 1].fired;\r\n                                trigger.triggers[n - 1].fired = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(\"Trigger state must be greater than or equal to 0 or less than or equal to \" + trigger.triggers.length);\r\n                        break;\r\n                    case 2:\r\n                        //state value - set fired to value for last trigger\r\n                        if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/)) {\r\n                            if (!this._LastTrigger)\r\n                                throw new Error(\"No trigger has fired yet, unable to set state\");\r\n                            trigger = this._LastTrigger;\r\n                            n = parseInt(args[0], 10)\r\n                            if (n < 0 || n > trigger.triggers.length)\r\n                                throw new Error(\"Trigger state must be greater than or equal to 0 or less than or equal to \" + trigger.triggers.length);\r\n                            if (args[1] !== \"0\" && args[1] !== \"1\" && args[1] !== \"true\" && args[1] !== \"false\")\r\n                                throw new Error(\"Value must be 0, 1, true, or false\");\r\n                            if (n === 0) {\r\n                                i = trigger.fired;\r\n                                trigger.fired = args[1] === \"1\" || args[1] === \"true\";\r\n                            }\r\n                            else {\r\n                                i = trigger.triggers[n - 1].fired;\r\n                                trigger.triggers[n - 1].fired = args[1] === \"1\" || args[1] === \"true\";\r\n                            }\r\n                        }\r\n                        //pattern|name state - set trigger state fired to true\r\n                        else {\r\n                            const keys = this.client.profiles.keys;\r\n                            let k = 0;\r\n                            const kl = keys.length;\r\n                            if (kl === 0)\r\n                                return null;\r\n                            if (kl === 1) {\r\n                                if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                                    throw Error('No enabled profiles found!');\r\n                                trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                trigger = trigger.find(t => {\r\n                                    return t.name === args[0] || t.pattern === args[0];\r\n                                });\r\n                            }\r\n                            else {\r\n                                for (; k < kl; k++) {\r\n                                    if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                        continue;\r\n                                    trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                    trigger = trigger.find(t => {\r\n                                        return t.name === args[0] || t.pattern === args[0];\r\n                                    });\r\n                                    if (trigger)\r\n                                        break;\r\n                                }\r\n                            }\r\n                            if (!trigger)\r\n                                throw new Error(\"Trigger not found: \" + args[0]);\r\n                            n = parseInt(args[1], 10)\r\n                            if (n < 0 || n > trigger.triggers.length)\r\n                                throw new Error(\"Trigger state must be greater than or equal to 0 or less than or equal to \" + trigger.triggers.length);\r\n                            if (n === 0) {\r\n                                i = trigger.fired;\r\n                                trigger.fired = true;\r\n                            }\r\n                            else {\r\n                                i = trigger.triggers[n - 1].fired;\r\n                                trigger.triggers[n - 1].fired = true;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        //pattern|name state profile - set trigger state to fired in profile\r\n                        if (args[2] === \"0\" && args[2] !== \"1\" && args[2] !== \"true\" && args[21] !== \"false\") {\r\n                            profile = args[2];\r\n                            if (this.client.profiles.contains(profile))\r\n                                profile = this.client.profiles.items[profile.toLowerCase()];\r\n                            else\r\n                                throw new Error('Profile not found: ' + profile);\r\n                            trigger = SortItemArrayByPriority(profile.triggers);\r\n                            trigger = trigger.find(t => {\r\n                                return t.name === args[0] || t.pattern === args[0];\r\n                            });\r\n                            if (!trigger)\r\n                                throw new Error(\"Trigger not found: \" + args[0] + \" in profile: \" + profile.name);\r\n                            n = parseInt(args[1], 10)\r\n                            if (n < 0 || n > trigger.triggers.length)\r\n                                throw new Error(\"Trigger state must be greater than or equal to 0 or less than or equal to \" + trigger.triggers.length);\r\n                            if (n === 0) {\r\n                                i = trigger.fired;\r\n                                trigger.fired = true;\r\n                            }\r\n                            else {\r\n                                i = trigger.triggers[n - 1].fired;\r\n                                trigger.triggers[n - 1].fired = true;\r\n                            }\r\n                        }\r\n                        //pattern|name state value - set trigger state fired to value          \r\n                        else {\r\n                            const keys = this.client.profiles.keys;\r\n                            let k = 0;\r\n                            const kl = keys.length;\r\n                            if (kl === 0)\r\n                                return null;\r\n                            if (kl === 1) {\r\n                                if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                                    throw Error('No enabled profiles found!');\r\n                                trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                trigger = trigger.find(t => {\r\n                                    return t.name === args[0] || t.pattern === args[0];\r\n                                });\r\n                            }\r\n                            else {\r\n                                for (; k < kl; k++) {\r\n                                    if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                        continue;\r\n                                    trigger = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                    trigger = trigger.find(t => {\r\n                                        return t.name === args[0] || t.pattern === args[0];\r\n                                    });\r\n                                    if (trigger)\r\n                                        break;\r\n                                }\r\n                            }\r\n                            if (!trigger)\r\n                                throw new Error(\"Trigger not found: \" + args[0]);\r\n                            n = parseInt(args[1], 10)\r\n                            if (n < 0 || n > trigger.triggers.length)\r\n                                throw new Error(\"Trigger state must be greater than or equal to 0 or less than or equal to \" + trigger.triggers.length);\r\n                            if (n === 0) {\r\n                                i = trigger.fired;\r\n                                trigger.fired = args[2] === \"1\" || args[2] === \"true\";\r\n                            }\r\n                            else {\r\n                                i = trigger.triggers[n - 1].fired;\r\n                                trigger.triggers[n - 1].fired = args[2] === \"1\" || args[2] === \"true\";\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        //pattern|name state value profile - set trigger state to value in profile \r\n                        profile = args[2];\r\n                        if (this.client.profiles.contains(profile))\r\n                            profile = this.client.profiles.items[profile.toLowerCase()];\r\n                        else\r\n                            throw new Error('Profile not found: ' + profile);\r\n                        trigger = SortItemArrayByPriority(profile.triggers);\r\n                        trigger = trigger.find(t => {\r\n                            return t.name === args[0] || t.pattern === args[0];\r\n                        });\r\n                        if (!trigger)\r\n                            throw new Error(\"Trigger not found: \" + args[0] + \" in profile: \" + profile.name);\r\n                        if (args[2] !== \"0\" && args[2] !== \"1\" && args[2] !== \"true\" && args[2] !== \"false\")\r\n                            throw new Error(\"Value must be 0, 1, true, or false\");\r\n                        if (n === 0) {\r\n                            i = trigger.fired;\r\n                            trigger.fired = args[2] === \"1\" || args[2] === \"true\";\r\n                        }\r\n                        else {\r\n                            i = trigger.triggers[n - 1].fired;\r\n                            trigger.triggers[n - 1].fired = args[2] === \"1\" || args[2] === \"true\";\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw new Error('Invalid syntax use ' + cmdChar + 'set \\x1b[3mname|pattern\\x1b[0;-11;-12m state \\x1b[3mvalue profile\\x1b[0;-11;-12m');\r\n                }\r\n                this.client.saveProfiles();\r\n                this.client.emit('item-updated', 'trigger', trigger.profile.name, trigger.profile.triggers.indexOf(trigger), trigger);\r\n                this.resetTriggerState(this._TriggerCache.indexOf(trigger), n, i);\r\n                if (n === 0)\r\n                    this.client.echo('Trigger state 0 fired state set to ' + trigger.fired + '.', -7, -8, true, true);\r\n                else {\r\n                    this.client.echo('Trigger state ' + n + ' fired state set to ' + trigger.triggers[n - 1].fired + '.', -7, -8, true, true);\r\n                    //manual trigger fire it using set type\r\n                    if (trigger.enabled && trigger.triggers[n - 1].enabled && trigger.triggers[n - 1].type === SubTriggerTypes.Manual) {\r\n                        this._LastTriggered = '';\r\n                        this.ExecuteTrigger(trigger, [], false, this._TriggerCache.indexOf(trigger), 0, 0, trigger);\r\n                    }\r\n                }\r\n                return null;\r\n            case 'condition':\r\n            case 'cond':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region condition\r\n                item = {\r\n                    profile: null,\r\n                    name: null,\r\n                    pattern: null,\r\n                    commands: null,\r\n                    options: { priority: 0 }\r\n                };\r\n                if (args.length < 2 || args.length > 5)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'cond\\x1b[0;-11;-12mition name|pattern {pattern} {commands} \\x1b[3moptions profile\\x1b[0;-11;-12m or \\x1b[4m' + cmdChar + 'cond\\x1b[0;-11;-12mition {pattern} {commands} \\x1b[3m{options} profile\\x1b[0;-11;-12m');\r\n                if (args[0].length === 0)\r\n                    throw new Error('Invalid trigger name or pattern');\r\n\r\n                if (args[0].match(/^\\{.*\\}$/g)) {\r\n                    item.pattern = args.shift();\r\n                    item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                }\r\n                else {\r\n                    item.name = this.parseInline(this.stripQuotes(args.shift()));\r\n                    if (!item.name || item.name.length === 0)\r\n                        throw new Error('Invalid trigger name');\r\n                    if (args[0].match(/^\\{.*\\}$/g)) {\r\n                        item.pattern = args.shift();\r\n                        item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                    }\r\n                }\r\n                if (args.length !== 0) {\r\n                    if (args[0].match(/^\\{[\\s\\S]*\\}$/g)) {\r\n                        item.commands = args.shift();\r\n                        item.commands = item.commands.substr(1, item.commands.length - 2);\r\n                    }\r\n                    if (args.length === 1) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        else\r\n                            args[0] = this.stripQuotes(args[0]);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nocr':\r\n                                    case 'prompt':\r\n                                    case 'case':\r\n                                    case 'verbatim':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                    case 'cmd':\r\n                                    case 'temporary':\r\n                                    case 'temp':\r\n                                    case 'raw':\r\n                                    case 'pattern':\r\n                                    case 'regular':\r\n                                    case 'alarm':\r\n                                    case 'event':\r\n                                    case 'cmdpattern':\r\n                                    case 'loopexpression':\r\n                                    //case 'expression':\r\n                                    case 'reparse':\r\n                                    case 'reparsepattern':\r\n                                    case 'manual':\r\n                                    case 'skip':\r\n                                    case 'looplines':\r\n                                    case 'looppattern':\r\n                                    case 'wait':\r\n                                    case 'duration':\r\n                                    case 'withinlines':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('param=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger param option '${o.trim()}'`);\r\n                                            item.options['params'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('type=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger type option '${o.trim()}'`);\r\n                                            if (!this.isTriggerType(tmp[1]))\r\n                                                throw new Error('Invalid trigger type');\r\n                                            item.options['type'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid trigger priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid trigger option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid trigger options');\r\n                    }\r\n                    else if (args.length === 2) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nocr':\r\n                                    case 'prompt':\r\n                                    case 'case':\r\n                                    case 'verbatim':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                    case 'cmd':\r\n                                    case 'temporary':\r\n                                    case 'temp':\r\n                                    case 'raw':\r\n                                    case 'pattern':\r\n                                    case 'regular':\r\n                                    case 'alarm':\r\n                                    case 'event':\r\n                                    case 'cmdpattern':\r\n                                    case 'loopexpression':\r\n                                    //case 'expression':\r\n                                    case 'reparse':\r\n                                    case 'reparsepattern':\r\n                                    case 'manual':\r\n                                    case 'skip':\r\n                                    case 'looplines':\r\n                                    case 'looppattern':\r\n                                    case 'wait':\r\n                                    case 'duration':\r\n                                    case 'withinlines':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('param=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger param option '${o.trim()}'`);\r\n                                            item.options['params'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('type=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger type option '${o.trim()}'`);\r\n                                            if (!this.isTriggerType(tmp[1]))\r\n                                                throw new Error('Invalid trigger type');\r\n\r\n                                            item.options['type'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid trigger priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid trigger priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid trigger option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid trigger options');\r\n                        item.profile = this.stripQuotes(args[1]);\r\n                        if (item.profile.length !== 0)\r\n                            item.profile = this.parseInline(item.profile);\r\n                    }\r\n                }\r\n                this.createTrigger(item.pattern, item.commands, item.profile, item.options, item.name, true);\r\n                //#endregion\r\n                return null;\r\n            case 'cr':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.sendBackground('\\n');\r\n                return null;\r\n            case 'send':\r\n            case 'se':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'se\\x1b[0;-11;-12mnd file \\x1b[3mprefix suffix\\x1b[0;-11;-12m or \\x1b[4m' + cmdChar + 'se\\x1b[0;-11;-12mnd text');\r\n                args = args.join(' ');\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'se\\x1b[0;-11;-12mnd file \\x1b[3mprefix suffix\\x1b[0;-11;-12m or \\x1b[4m' + cmdChar + 'se\\x1b[0;-11;-12mnd text');\r\n                this.client.sendBackground(this.stripQuotes(args), this.client.getOption('allowCommentsFromCommand'));\r\n                return null;\r\n            //work around for send as can not access files so we open a file dialog and ask for the file they want to send instead\r\n            case 'sendfile':\r\n            case 'sendf':\r\n                ((a, r) => {\r\n                    openFileDialog().then(files => {\r\n                        readFile(files[0]).then((contents: any) => {\r\n                            if ((this.client.getOption('echo') & 4) === 4)\r\n                                this.client.echo(r, -3, -4, true, true);\r\n                            p = '';\r\n                            i = '';\r\n                            if (a.length > 1)\r\n                                p = this.stripQuotes(this.parseInline(a[0]));\r\n                            if (a.length > 2)\r\n                                i = this.stripQuotes(this.parseInline(a[1]));\r\n                            //handle \\n and \\r\\n for windows and linux files\r\n                            items = contents.split(/\\r?\\n/);\r\n                            items.forEach(line => {\r\n                                this.client.sendBackground(p + line + i, null, this.client.getOption('allowCommentsFromCommand'));\r\n                            });\r\n                        }).catch(this.client.error);\r\n                    }).catch(() => { });\r\n                })(args, raw);\r\n                return null;\r\n            //work around for sendraw as can not access files so we open a file dialog and ask for the file they want to send instead\r\n            case 'sendfileraw':\r\n            case 'sendfiler':\r\n                ((a, r) => {\r\n                    openFileDialog().then(files => {\r\n                        readFile(files[0]).then((contents: any) => {\r\n                            if ((this.client.getOption('echo') & 4) === 4)\r\n                                this.client.echo(r, -3, -4, true, true);\r\n                            p = '';\r\n                            i = '';\r\n                            if (a.length > 1)\r\n                                p = this.stripQuotes(this.parseInline(a[0]));\r\n                            if (a.length > 2)\r\n                                i = this.stripQuotes(this.parseInline(a[1]));\r\n                            //handle \\n and \\r\\n for windows and linux files\r\n                            items = contents.split(/\\r?\\n/);\r\n                            items.forEach(line => {\r\n                                this.client.sendRaw(p + line + i);\r\n                            });\r\n                        }).catch(this.client.error);\r\n                    }).catch(() => { });\r\n                })(args, raw);\r\n                return null;\r\n            case 'sendraw':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'sendraw text or ' + cmdChar + 'sendraw file \\x1b[3mprefix suffix\\x1b[0;-11;-12m');\r\n                args = args.join(' ');\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'sendraw text or ' + cmdChar + 'sendraw file \\x1b[3mprefix suffix\\x1b[0;-11;-12m');\r\n                if (!args.endsWith('\\n'))\r\n                    args = args + '\\n';\r\n                this.client.sendRaw(args);\r\n                return null;\r\n            case 'sendprompt':\r\n            case 'sendp':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'sendp\\x1b[0;-11;-12mrompt text');\r\n                args = args.join(' ');\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'sendp\\x1b[0;-11;-12mrompt text');\r\n                this.client.sendRaw(args);\r\n                return null;\r\n            case 'character':\r\n            case 'char':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                this.client.sendRaw(window.$character || '');\r\n                return null;\r\n            case 'speak':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'speak text');\r\n                args = args.join(' ');\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'speak text');\r\n                args = this.stripQuotes(this.parseInline(args));\r\n                if (args.length !== 0)\r\n                    window.speechSynthesis.speak(new SpeechSynthesisUtterance(args));\r\n                return null;\r\n            case 'speakstop':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length !== 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'speakstop');\r\n                window.speechSynthesis.cancel();\r\n                return null;\r\n            case 'speakpause':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length !== 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'speakpause');\r\n                window.speechSynthesis.pause();\r\n                return null;\r\n            case 'speakresume':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length !== 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'speakresume');\r\n                window.speechSynthesis.resume();\r\n                return null;\r\n            case 'comment':\r\n            case 'comm':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                return null;\r\n            case 'noop':\r\n            case 'no':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length)\r\n                    this.parseInline(args.join(' '));\r\n                return null;\r\n            case 'temp':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //#region temp\r\n                item = {\r\n                    profile: null,\r\n                    name: null,\r\n                    pattern: null,\r\n                    commands: null,\r\n                    options: { priority: 0 }\r\n                };\r\n                if (args.length < 2 || args.length > 5)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'temp name {pattern} {commands} \\x1b[3moptions profile\\x1b[0;-11;-12m or ' + cmdChar + 'temp {pattern} {commands} \\x1b[3m{options} profile\\x1b[0;-11;-12m');\r\n                if (args[0].length === 0)\r\n                    throw new Error('Invalid temporary trigger or pattern');\r\n\r\n                if (args[0].match(/^\\{.*\\}$/g)) {\r\n                    item.pattern = args.shift();\r\n                    item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                }\r\n                else {\r\n                    item.name = this.parseInline(this.stripQuotes(args.shift()));\r\n                    if (!item.name || item.name.length === 0)\r\n                        throw new Error('Invalid temporary trigger name');\r\n                    if (args[0].match(/^\\{.*\\}$/g)) {\r\n                        item.pattern = args.shift();\r\n                        item.pattern = this.parseInline(item.pattern.substr(1, item.pattern.length - 2));\r\n                    }\r\n                }\r\n                if (args.length !== 0) {\r\n                    if (args[0].match(/^\\{[\\s\\S]*\\}$/g)) {\r\n                        item.commands = args.shift();\r\n                        item.commands = item.commands.substr(1, item.commands.length - 2);\r\n                    }\r\n                    if (args.length === 1) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        else\r\n                            args[0] = this.stripQuotes(args[0]);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nocr':\r\n                                    case 'prompt':\r\n                                    case 'case':\r\n                                    case 'verbatim':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                    case 'cmd':\r\n                                    case 'raw':\r\n                                    case 'pattern':\r\n                                    case 'regular':\r\n                                    case 'alarm':\r\n                                    case 'event':\r\n                                    case 'cmdpattern':\r\n                                    case 'loopexpression':\r\n                                        //case 'expression':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('param=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid temporary trigger param option '${o.trim()}'`);\r\n                                            item.options['params'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('type=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid temporary trigger type option '${o.trim()}'`);\r\n                                            if (!this.isTriggerType(tmp[1], TriggerTypeFilter.Main))\r\n                                                throw new Error('Invalid temporary trigger type');\r\n                                            item.options['type'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid temporary trigger priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid temporary trigger priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid temporary trigger option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid temporary trigger options');\r\n                    }\r\n                    else if (args.length === 2) {\r\n                        if (args[0].match(/^\\{[\\s\\S]*\\}$/g))\r\n                            args[0] = args[0].substr(1, args[0].length - 2);\r\n                        if (args[0].length !== 0) {\r\n                            this.parseInline(args[0]).split(',').forEach(o => {\r\n                                switch (o.trim()) {\r\n                                    case 'nocr':\r\n                                    case 'prompt':\r\n                                    case 'case':\r\n                                    case 'verbatim':\r\n                                    case 'disable':\r\n                                    case 'enable':\r\n                                    case 'cmd':\r\n                                    case 'raw':\r\n                                    case 'pattern':\r\n                                    case 'regular':\r\n                                    case 'alarm':\r\n                                    case 'event':\r\n                                    case 'cmdpattern':\r\n                                    case 'loopexpression':\r\n                                        //case 'expression':\r\n                                        item.options[o.trim()] = true;\r\n                                        break;\r\n                                    default:\r\n                                        if (o.trim().startsWith('param=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid temporary trigger param option '${o.trim()}'`);\r\n                                            item.options['params'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('type=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid temporary trigger type option '${o.trim()}'`);\r\n                                            if (!this.isTriggerType(tmp[1], TriggerTypeFilter.Main))\r\n                                                throw new Error('Invalid temporary trigger type');\r\n\r\n                                            item.options['type'] = tmp[1];\r\n                                        }\r\n                                        else if (o.trim().startsWith('pri=') || o.trim().startsWith('priority=')) {\r\n                                            tmp = o.trim().split('=');\r\n                                            if (tmp.length !== 2)\r\n                                                throw new Error(`Invalid temporary trigger priority option '${o.trim()}'`);\r\n                                            i = parseInt(tmp[1], 10);\r\n                                            if (isNaN(i))\r\n                                                throw new Error('Invalid temporary trigger priority value \\'' + tmp[1] + '\\' must be a number');\r\n                                            item.options['priority'] = i;\r\n                                        }\r\n                                        else\r\n                                            throw new Error(`Invalid temporary trigger option '${o.trim()}'`);\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            throw new Error('Invalid temporary trigger options');\r\n                        item.profile = this.stripQuotes(args[1]);\r\n                        if (item.profile.length !== 0)\r\n                            item.profile = this.parseInline(item.profile);\r\n                    }\r\n                }\r\n                item.options.temporary = true;\r\n                this.createTrigger(item.pattern, item.commands, item.profile, item.options, item.name);\r\n                //#endregion\r\n                return null;\r\n            case 'wrap':\r\n            case 'wr':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                //filter out empty arguments to avoid trailing spaces\r\n                args = args.filter(a => a);\r\n                if (args.length > 1)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'wr\\x1b[0;-11;-12map or \\x1b[4m' + cmdChar + 'wr\\x1b[0;-11;-12map number');\r\n                if (args.length === 0) {\r\n                    this.client.setOption('display.wordWrap', !this.client.getOption('display.wordWrap'))\r\n                    this.client.display.wordWrap = this.client.getOption('display.wordWrap');\r\n                }\r\n                else {\r\n                    i = parseInt(this.parseInline(args[0]), 10);\r\n                    if (isNaN(i))\r\n                        throw new Error('Invalid number \\'' + i + '\\' for wrap');\r\n                    if (i < 0)\r\n                        throw new Error('Must be greater then or equal to zero for wrap');\r\n                    this.client.setOption('display.wordWrap', true)\r\n                    this.client.setOption('display.wordWrap', i)\r\n                    this.client.display.wordWrap = true;\r\n                    this.client.display.wrapAt = i;\r\n                }\r\n                return null;\r\n            case 'prompt':\r\n            case 'pr':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0 || args.length > 4)\r\n                    throw new Error('Invalid syntax use \\x1b[4m' + cmdChar + 'pr\\x1b[0;-11;-12mompt variable \\x1b[3mmessage defaultValue mask\\x1b[0;-11;-12m');\r\n                else {\r\n                    i = args.shift();\r\n                    if (i.match(/^\\{.*\\}$/g))\r\n                        i = i.substr(1, i.length - 2);\r\n                    i = this.parseInline(i);\r\n                    if (!isValidIdentifier(i))\r\n                        throw new Error(\"Invalid variable name\");\r\n                    args = args.map(a => this.parseInline(this.stripQuotes(a)))\r\n                    if (args.length === 3 && args[2] && args[2].toLowerCase() === 'true')\r\n                        args[2] = true;\r\n                    args = window.prompt(...args);\r\n                    if (args?.match(/^\\s*?[-|+]?\\d+\\s*?$/))\r\n                        this.client.variables[i] = parseInt(args, 10);\r\n                    else if (args?.match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                        this.client.variables[i] = parseFloat(args);\r\n                    else if (args === \"true\")\r\n                        this.client.variables[i] = true;\r\n                    else if (args === \"false\")\r\n                        this.client.variables[i] = false;\r\n                    else\r\n                        this.client.variables[i] = args;\r\n                }\r\n                return null;\r\n            case 'setmap':\r\n                if ((this.client.getOption('echo') & 4) === 4)\r\n                    this.client.echo(raw, -3, -4, true, true);\r\n                if (args.length === 0)\r\n                    throw new Error('Invalid syntax use ' + cmdChar + 'setmap file \\x1b[3msetCharacter\\x1b[0;-11;-12m');\r\n                tmp = this.stripQuotes(this.parseInline(args.shift())) || '';\r\n                if (!tmp || !tmp.length)\r\n                    throw new Error('Empty file\\x1b[0;-11;-12m');\r\n                if (args.length > 1)\r\n                    p = this.stripQuotes(this.parseInline(args.join(' '))).toLocaleLowerCase().trim();\r\n                else\r\n                    p = '';\r\n                this.emit('setmap', tmp, p === 'true' || p === 'yes', true);\r\n                return null;\r\n        }\r\n        if (fun.match(/^[-|+]?\\d+$/)) {\r\n            if ((this.client.getOption('echo') & 4) === 4)\r\n                this.client.echo(raw, -3, -4, true, true);\r\n            i = parseInt(fun, 10);\r\n            if (args.length === 0)\r\n                throw new Error('Invalid syntax use ' + cmdChar + 'nnn commands');\r\n            args = args.join(' ');\r\n            if (args.match(/^\\{[\\s\\S]*\\}$/g))\r\n                args = args.substr(1, args.length - 2);\r\n            if (i < 1)\r\n                return this.executeForLoop((-i) + 1, 1, args);\r\n            return this.executeForLoop(0, i, args);\r\n        }\r\n        const data: FunctionEvent = { name: fun, args: args, raw: raw, handled: false, return: null };\r\n        this.client.emit('function', data);\r\n        if (data.handled) {\r\n            if ((this.client.getOption('echo') & 4) === 4)\r\n                this.client.echo(raw, -3, -4, true, true);\r\n            return data.return;\r\n        }\r\n        if (data.raw.startsWith(cmdChar))\r\n            return cmdChar + this.parseOutgoing(data.raw.substr(1), null, null, null, true);\r\n        return this.parseOutgoing(data.raw + '\\n', null, null, null, true);\r\n    }\r\n\r\n    private executeForLoop(start: number, end: number, commands: string) {\r\n        let tmp = [];\r\n        let r: number;\r\n        if (start > end) {\r\n            for (r = start - 1; r >= end; r--) {\r\n                this.loops.push(r);\r\n                try {\r\n                    let out = this.parseOutgoing(commands);\r\n                    if (out != null && out.length > 0)\r\n                        tmp.push(out);\r\n                    if (this.stack.continue) {\r\n                        this.stack.continue = false;\r\n                        continue;\r\n                    }\r\n                    if (this.stack.break) {\r\n                        this.stack.break--;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw e;\r\n                }\r\n                finally {\r\n                    this.loops.pop();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (r = start; r < end; r++) {\r\n                this.loops.push(r + 1);\r\n                try {\r\n                    let out = this.parseOutgoing(commands);\r\n                    if (out != null && out.length > 0)\r\n                        tmp.push(out);\r\n                    if (this.stack.continue) {\r\n                        this.stack.continue = false;\r\n                        continue;\r\n                    }\r\n                    if (this.stack.break) {\r\n                        this.stack.break--;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw e;\r\n                }\r\n                finally {\r\n                    this.loops.pop();\r\n                }\r\n            }\r\n        }\r\n        if (tmp.length > 0)\r\n            return tmp.map(v => v.trim()).join('\\n');\r\n        return null;\r\n    }\r\n\r\n    public parseInline(text) {\r\n        return this.parseOutgoing(text, false, null, false, true);\r\n    }\r\n\r\n    public parseOutgoing(text: string, eAlias?: boolean, stacking?: boolean, append?: boolean, noFunctions?: boolean, noComments?: boolean) {\r\n        const tl = text.length;\r\n        if (!this.enableParsing || text == null || tl === 0)\r\n            return text;\r\n        let str: string = '';\r\n        let alias: string = '';\r\n        let AliasesCached;\r\n        let state = 0;\r\n        //store as local vars to speed up parsing\r\n        const aliases = this.client.aliases;\r\n        const stackingChar: string = this.client.getOption('commandStackingChar');\r\n        const spChar: string = this.client.getOption('speedpathsChar');\r\n        const ePaths: boolean = this.client.getOption('enableSpeedpaths');\r\n        const eCmd: boolean = this.client.getOption('enableCommands');\r\n        const cmdChar: string = this.client.getOption('commandChar');\r\n        const eEscape: boolean = this.client.getOption('allowEscape');\r\n        const escChar: string = this.client.getOption('escapeChar');\r\n        const verbatimChar: string = this.client.getOption('verbatimChar');\r\n        const eVerbatim: boolean = this.client.getOption('enableVerbatim');\r\n        const eParamEscape: boolean = this.client.getOption('enableDoubleParameterEscaping');\r\n        const paramChar: string = this.client.getOption('parametersChar');\r\n        const eParam: boolean = this.client.getOption('enableParameters');\r\n        const nParamChar: string = this.client.getOption('nParametersChar');\r\n        const eNParam: boolean = this.client.getOption('enableNParameters');\r\n        const eEval: boolean = this.client.getOption('allowEval');\r\n        const iEval: boolean = this.client.getOption('ignoreEvalUndefined');\r\n        const iComments: boolean = this.client.getOption('enableInlineComments') && !noComments;\r\n        const bComments: boolean = this.client.getOption('enableBlockComments') && !noComments;\r\n        const iCommentsStr: string[] = this.client.getOption('inlineCommentString').split('');\r\n        const bCommentsStr: string[] = this.client.getOption('blockCommentString').split('');\r\n        const bTrim: boolean = this.client.getOption('ignoreInputLeadingWhitespace');\r\n        let sTrim = '';\r\n        let args = [];\r\n        let arg: any = '';\r\n        let findAlias: boolean = true;\r\n        let out: string = '';\r\n        let a;\r\n        let c: string;\r\n        let al: number;\r\n        let idx: number = 0;\r\n        let tmp;\r\n        let tmp2;\r\n        let start: boolean = true;\r\n        let _neg: boolean = false;\r\n        let _pos: boolean = false;\r\n        let _fall: boolean = false;\r\n        let nest: number = 0;\r\n        const pd: boolean = this.client.getOption('parseDoubleQuotes');\r\n        const ps: boolean = this.client.getOption('parseSingleQuotes');\r\n\r\n        if (eAlias == null)\r\n            eAlias = aliases.length > 0;\r\n        else\r\n            eAlias = eAlias && aliases.length > 0;\r\n\r\n        //if no character set treat it as disabled\r\n        if (stackingChar.length === 0)\r\n            stacking = false;\r\n        else if (stacking == null)\r\n            stacking = this.client.getOption('commandStacking');\r\n        else\r\n            stacking = stacking && this.client.getOption('commandStacking');\r\n\r\n        for (idx = 0; idx < tl; idx++) {\r\n            c = text.charAt(idx);\r\n            switch (state) {\r\n                case ParseState.doubleQuoted:\r\n                    //quoted string\r\n                    if (eEscape && c === escChar)\r\n                        state = ParseState.doubleQuotedEscape;\r\n                    else {\r\n                        if (c === '\"' && pd)\r\n                            state = ParseState.none;\r\n                        if (eAlias && findAlias)\r\n                            alias += c;\r\n                        else\r\n                            str += c;\r\n                    }\r\n                    start = false;\r\n                    break;\r\n                case ParseState.doubleQuotedEscape:\r\n                    state = ParseState.doubleQuoted;\r\n                    if (c !== '\"' && c !== escChar) {\r\n                        idx--;\r\n                        if (eAlias && findAlias)\r\n                            alias += escChar;\r\n                        else\r\n                            str += escChar;\r\n                    }\r\n                    else if (eAlias && findAlias)\r\n                        alias += c;\r\n                    else\r\n                        str += c;\r\n                    break;\r\n                case ParseState.singleQuoted:\r\n                    if (eEscape && c === escChar)\r\n                        state = ParseState.doubleQuotedEscape;\r\n                    else {\r\n                        //quoted string\r\n                        if (c === '\\'' && ps)\r\n                            state = ParseState.none;\r\n                        if (eAlias && findAlias)\r\n                            alias += c;\r\n                        else\r\n                            str += c;\r\n                    }\r\n                    start = false;\r\n                    break;\r\n                case ParseState.singleQuotedEscape:\r\n                    state = ParseState.singleQuoted;\r\n                    if (c !== '\\'' && c !== escChar) {\r\n                        idx--;\r\n                        if (eAlias && findAlias)\r\n                            alias += escChar;\r\n                        else\r\n                            str += escChar;\r\n                    }\r\n                    else if (eAlias && findAlias)\r\n                        alias += c;\r\n                    else\r\n                        str += c;\r\n                    break;\r\n                case ParseState.aliasArguments:\r\n                    //quoted string so keep intact\r\n                    if (c === '\"' && pd) {\r\n                        arg += c;\r\n                        state = ParseState.aliasArgumentsDouble;\r\n                        start = false;\r\n                    }\r\n                    //quoted string so keep int\r\n                    else if (c === '\\'' && ps) {\r\n                        arg += c;\r\n                        state = ParseState.aliasArgumentsSingle;\r\n                        start = false;\r\n                    }\r\n                    else if (eEscape && c === escChar) {\r\n                        state = ParseState.aliasArgumentsEscape;\r\n                        start = false;\r\n                    }\r\n                    //end of alias at end of text, new line, or command stack if enabled\r\n                    else if (idx === tl - 1 || c === '\\n' || (stacking && c === stackingChar)) {\r\n                        if (!(c === '\\n' || (stacking && c === stackingChar)))\r\n                            arg += c;\r\n                        //save any arg that was found\r\n                        if (arg.length > 0)\r\n                            args.push(this.parseInline(arg));\r\n                        al = AliasesCached.length;\r\n                        for (a = 0; a < al; a++) {\r\n                            str = this.ExecuteAlias(AliasesCached[a], args);\r\n                            if (typeof str === 'number') {\r\n                                if (str >= 0)\r\n                                    this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                                if (out.length === 0) return null;\r\n                                return out;\r\n                            }\r\n                            if (str !== null) out += str;\r\n                            str = '';\r\n                            if (!a.multi) break;\r\n                            if (this.stack.continue || this.stack.break) {\r\n                                if (out.length === 0) return null;\r\n                                return out;\r\n                            }\r\n                        }\r\n                        alias = '';\r\n                        state = ParseState.none;\r\n                        AliasesCached = null;\r\n                        start = true;\r\n                    }\r\n                    //space so new argument\r\n                    else if (c === ' ') {\r\n                        args.push(this.parseInline(arg));\r\n                        arg = '';\r\n                        start = false;\r\n                    }\r\n                    else {\r\n                        arg += c;\r\n                        start = false;\r\n                    }\r\n                    break;\r\n                case ParseState.aliasArgumentsDouble: //quoted alias argument\r\n                    if (c === '\"')\r\n                        state = ParseState.aliasArguments;\r\n                    arg += c;\r\n                    start = false;\r\n                    break;\r\n                case ParseState.aliasArgumentsSingle: //quoted alias argument\r\n                    if (c === '\\'')\r\n                        state = ParseState.aliasArguments;\r\n                    arg += c;\r\n                    start = false;\r\n                    break;\r\n                case ParseState.aliasArgumentsEscape:\r\n                    state = ParseState.aliasArguments;\r\n                    if (c === escChar || (stacking && c === stackingChar) || (eVerbatim && c === verbatimChar) || (ePaths && c === spChar) || (eCmd && c === cmdChar) || (eParamEscape && c === paramChar) || (eNParam && c === nParamChar))\r\n                        arg += c;\r\n                    else if (iComments && c == iCommentsStr[0])\r\n                        tmp2 = c;\r\n                    else if (bComments && c == bCommentsStr[0])\r\n                        tmp2 = c;\r\n                    else if ('\"\\'{'.indexOf(c) !== -1)\r\n                        arg += c;\r\n                    else\r\n                        arg += escChar + c;\r\n                    break;\r\n                case ParseState.path: //path found\r\n                    if (eEscape && c === escChar) {\r\n                        state = ParseState.pathEscape;\r\n                        start = false;\r\n                    }\r\n                    else if (c === '\\n' || (stacking && c === stackingChar)) {\r\n                        state = ParseState.none;\r\n                        str = this.ProcessPath(str);\r\n                        if (str !== null) out += str;\r\n                        str = '';\r\n                        start = true;\r\n                        if (this.stack.continue || this.stack.break) {\r\n                            if (out.length === 0) return null;\r\n                            return out;\r\n                        }\r\n                    }\r\n                    else if (idx === 1 && c === spChar) {\r\n                        state = ParseState.none;\r\n                        idx--;\r\n                        start = false;\r\n                    }\r\n                    else {\r\n                        str += c;\r\n                        start = false;\r\n                    }\r\n                    break;\r\n                case ParseState.pathEscape:\r\n                    state = ParseState.path;\r\n                    if (c === escChar || (stacking && c === stackingChar) || (eVerbatim && c === verbatimChar) || (ePaths && c === spChar) || (eCmd && c === cmdChar) || (eParamEscape && c === paramChar) || (eNParam && c === nParamChar))\r\n                        str += c;\r\n                    else if (iComments && c == iCommentsStr[0])\r\n                        tmp2 = c;\r\n                    else if (bComments && c == bCommentsStr[0])\r\n                        tmp2 = c;\r\n                    else if ('\"\\'{'.indexOf(c) !== -1)\r\n                        str += c;\r\n                    else\r\n                        str += escChar + c;\r\n                    break;\r\n                case ParseState.function:\r\n                    if (c === '{') {\r\n                        start = false;\r\n                        str += c;\r\n                        nest++;\r\n                    }\r\n                    else if (c === '}') {\r\n                        start = false;\r\n                        str += c;\r\n                        nest--;\r\n                    }\r\n                    else if (nest === 0 && eEscape && c === escChar) {\r\n                        state = ParseState.functionEscape;\r\n                        start = false;\r\n                    }\r\n                    else if (nest === 0 && (c === '\\n' || (stacking && c === stackingChar))) {\r\n                        state = ParseState.none;\r\n                        str = this.executeScript(cmdChar + str);\r\n                        if (typeof str === 'number') {\r\n                            if (str >= 0)\r\n                                this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                            if (out.length === 0) return null;\r\n                            return out;\r\n                        }\r\n                        if (str !== null) {\r\n                            out += sTrim + str + '\\n';\r\n                            /*\r\n                            if (str.startsWith(cmdChar))\r\n                                out += cmdChar + this.parseOutgoing(str.substr(1));\r\n                            else\r\n                                out += this.parseOutgoing(str);\r\n                            */\r\n                        }\r\n                        if (this.stack.continue || this.stack.break) {\r\n                            if (out.length === 0) return null;\r\n                            return out;\r\n                        }\r\n                        str = '';\r\n                        start = true;\r\n                    }\r\n                    else {\r\n                        str += c;\r\n                        start = false;\r\n                    }\r\n                    break;\r\n                case ParseState.functionEscape:\r\n                    state = ParseState.function;\r\n                    str += escChar + c;\r\n                    break;\r\n                case ParseState.paramsP:\r\n                    if (c === '{' && arg.length === 0) {\r\n                        state = ParseState.paramsPBlock;\r\n                        continue;\r\n                    }\r\n                    /*\r\n                    if (eEscape && c === escChar && arg.length === 0) {\r\n                        state = ParseState.paramsPEscape;\r\n                        continue;\r\n                    }\r\n                    */\r\n                    switch (c) {\r\n                        case paramChar:\r\n                            if (arg.length === 0) {\r\n                                if (eAlias && findAlias)\r\n                                    alias += paramChar;\r\n                                else\r\n                                    str += paramChar;\r\n                                state = ParseState.none;\r\n                                if (!eParamEscape)\r\n                                    idx--;\r\n                            }\r\n                            break;\r\n                        case '*':\r\n                            if (arg.length === 0) {\r\n                                if (this.stack.args) {\r\n                                    if (eAlias && findAlias)\r\n                                        alias += this.stack.args.slice(1).join(' ');\r\n                                    else\r\n                                        str += this.stack.args.slice(1).join(' ');\r\n                                    this.stack.used = this.stack.args.length;\r\n                                }\r\n                                else if (eAlias && findAlias)\r\n                                    alias += paramChar + '*';\r\n                                else\r\n                                    str += paramChar + '*';\r\n                                state = ParseState.none;\r\n                                break;\r\n                            }\r\n                        case '-':\r\n                            if (arg.length === 0) {\r\n                                _neg = true;\r\n                                break;\r\n                            }\r\n                            else if (_pos && arg.length == 1) {\r\n                                _neg = true;\r\n                                break;\r\n                            }\r\n                            else\r\n                                _fall = true;\r\n                        case '0':\r\n                        case '1':\r\n                        case '2':\r\n                        case '3':\r\n                        case '4':\r\n                        case '5':\r\n                        case '6':\r\n                        case '7':\r\n                        case '8':\r\n                        case '9':\r\n                            if (!_fall) {\r\n                                arg += c;\r\n                                break;\r\n                            }\r\n                        case 'x':\r\n                            if (!_fall && arg.length === 0) {\r\n                                _pos = true;\r\n                                break;\r\n                            }\r\n                        default:\r\n                            if (this.stack.args && arg.length > 0) {\r\n                                tmp = parseInt(arg, 10);\r\n                                if (_pos) {\r\n                                    if (_neg && this.stack.args.indices && tmp < this.stack.args.length)\r\n                                        tmp = this.stack.indices.slice(tmp).map(v => v ? (v[0] + ' ' + v[1]) : '0 0').join(' ');\r\n                                    else if (this.stack.args.indices && tmp < this.stack.args.length)\r\n                                        tmp = this.stack.args.indices[tmp] ? (this.stack.args.indices[tmp][0] + ' ' + this.stack.args.indices[tmp][1]) : '0 0';\r\n                                    else if (_neg)\r\n                                        tmp = paramChar + 'x-' + tmp;\r\n                                    else\r\n                                        tmp = paramChar + 'x' + tmp;\r\n                                }\r\n                                else {\r\n                                    if (_neg && tmp < this.stack.args.length)\r\n                                        tmp = this.stack.args.slice(arg).join(' ');\r\n                                    else if (tmp < this.stack.args.length)\r\n                                        tmp = this.stack.args[tmp];\r\n                                    else if (_neg)\r\n                                        tmp = paramChar + '-' + tmp;\r\n                                    else\r\n                                        tmp = paramChar + tmp;\r\n                                    if (_neg)\r\n                                        this.stack.used = this.stack.args.length;\r\n                                    else if (arg > this.stack.used)\r\n                                        this.stack.used = parseInt(arg, 10);\r\n                                }\r\n                                if (eAlias && findAlias)\r\n                                    alias += tmp;\r\n                                else\r\n                                    str += tmp;\r\n                                idx--;\r\n                            }\r\n                            else {\r\n                                if (arg.length === 0 && this.loops.length > 0) {\r\n                                    tmp = c.charCodeAt(0) - 105;\r\n                                    if (tmp >= 0 && tmp < 18 && tmp < this.loops.length) {\r\n                                        if (eAlias && findAlias)\r\n                                            alias += this.loops[tmp];\r\n                                        else\r\n                                            str += this.loops[tmp];\r\n                                        state = ParseState.none;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (eAlias && findAlias) {\r\n                                    alias += paramChar;\r\n                                    if (_neg)\r\n                                        alias += '-';\r\n                                    if (_pos)\r\n                                        alias += 'x';\r\n                                }\r\n                                else {\r\n                                    str += paramChar;\r\n                                    if (_neg)\r\n                                        str += '-';\r\n                                    if (_pos)\r\n                                        str += 'x';\r\n                                }\r\n                                idx = idx - arg.length - 1;\r\n                            }\r\n                            state = ParseState.none;\r\n                            arg = '';\r\n                            break;\r\n                    }\r\n                    break;\r\n                case ParseState.paramsPNamed:\r\n                    if (c.match(/[^a-zA-Z0-9_]/g)) {\r\n                        if (this.stack.named.hasOwnProperty(arg)) {\r\n                            if (eAlias && findAlias)\r\n                                alias += this.stack.named[arg];\r\n                            else\r\n                                str += this.stack.named[arg];\r\n                        }\r\n                        else if (eAlias && findAlias)\r\n                            alias += paramChar + arg;\r\n                        else\r\n                            str += paramChar + arg;\r\n                        idx--;\r\n                        state = ParseState.none;\r\n                        arg = '';\r\n                    }\r\n                    else\r\n                        arg += c;\r\n                    break;\r\n                case ParseState.paramsPBlock:\r\n                    if (c === '}' && nest === 0) {\r\n                        if (arg === 'i')\r\n                            tmp2 = this.loops[0];\r\n                        else if (arg === 'repeatnum')\r\n                            tmp2 = this.repeatnum;\r\n                        else if (this.stack.args && arg === '*') {\r\n                            tmp2 = this.stack.args.slice(1).join(' ');\r\n                            this.stack.used = this.stack.args.length;\r\n                        }\r\n                        else if (this.stack.named && this.stack.named.hasOwnProperty(arg))\r\n                            tmp2 = this.stack.named[arg];\r\n                        else {\r\n                            if (this.stack.args && !isNaN(arg)) {\r\n                                tmp = parseInt(arg, 10);\r\n                                if (tmp < 0) {\r\n                                    if (-tmp >= this.stack.args.length) {\r\n                                        if (eEval)\r\n                                            tmp2 = tmp;\r\n                                        else {\r\n                                            tmp2 = paramChar;\r\n                                            idx = idx - tmp.length - 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        tmp2 = this.stack.args.slice(tmp).join(' ');\r\n                                        this.stack.used = this.stack.args.length;\r\n                                    }\r\n                                }\r\n                                else if (tmp < this.stack.args.length) {\r\n                                    tmp2 = this.stack.args[tmp];\r\n                                    if (arg > this.stack.used)\r\n                                        this.stack.used = tmp;\r\n                                }\r\n                                else if (eEval)\r\n                                    tmp2 = tmp;\r\n                                else {\r\n                                    tmp2 = paramChar;\r\n                                    idx = idx - arg.length - 2;\r\n                                }\r\n                            }\r\n                            else if (this.stack.args && this.stack.args.indices && arg.match(/^x[-|+]?\\d+$/)) {\r\n                                tmp = parseInt(arg.substring(1), 10);\r\n                                if (tmp < 0) {\r\n                                    if (-tmp >= this.stack.args.length) {\r\n                                        tmp2 = paramChar;\r\n                                        idx = idx - tmp.length - 2;\r\n                                    }\r\n                                    else\r\n                                        tmp2 = this.stack.indices.slice(tmp).map(v => v ? (v[0] + ' ' + v[1]) : '0 0').join(' ');\r\n                                }\r\n                                else if (tmp < this.stack.args.length)\r\n                                    tmp2 = this.stack.args.indices[tmp] ? (this.stack.args.indices[tmp][0] + ' ' + this.stack.args.indices[tmp][1]) : '0 0';\r\n                                else {\r\n                                    tmp2 = paramChar;\r\n                                    idx = idx - arg.length - 2;\r\n                                }\r\n                            }\r\n                            else {\r\n                                tmp = this.parseVariable(arg);\r\n                                if (tmp != null)\r\n                                    tmp2 = tmp;\r\n                                else if (eEval) {\r\n                                    tmp2 = this.evaluate(this.parseInline(arg));\r\n                                    if (iEval && typeof tmp2 === 'undefined')\r\n                                        tmp2 = null;\r\n                                    else\r\n                                        tmp2 = '' + tmp2;\r\n                                }\r\n                                else {\r\n                                    tmp2 = paramChar;\r\n                                    idx = idx - arg.length - 2;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (tmp2 != null && eAlias && findAlias)\r\n                            alias += tmp2;\r\n                        else if (tmp2 != null)\r\n                            str += tmp2;\r\n                        state = 0;\r\n                        arg = '';\r\n                    }\r\n                    else if (c === '{') {\r\n                        nest++;\r\n                        arg += c;\r\n                    }\r\n                    else if (c === '}') {\r\n                        nest--;\r\n                        arg += c;\r\n                    }\r\n                    else\r\n                        arg += c;\r\n                    break;\r\n                /*\r\n                case ParseState.paramsPEscape:\r\n                    if (c === '{')\r\n                        tmp2 = paramChar+'{';\r\n                    else if (c === escChar)\r\n                        tmp2 = paramChar + escChar;\r\n                    else {\r\n                        tmp2 = paramChar + escChar;\r\n                        idx--;\r\n                    }\r\n                    if (eAlias && findAlias)\r\n                        alias += tmp2;\r\n                    else\r\n                        str += tmp2;\r\n                    state = ParseState.none;\r\n                    break;\r\n                */\r\n                case ParseState.paramsN:\r\n                    if (c === '{')\r\n                        state = ParseState.paramsNBlock;\r\n                    /*\r\n                    else if (eEscape && c === escChar)\r\n                        state = ParseState.paramsNEscape;\r\n                    */\r\n                    else if (c.match(/[^a-zA-Z_$]/g)) {\r\n                        state = ParseState.none;\r\n                        idx--;\r\n                        if (eAlias && findAlias)\r\n                            alias += nParamChar;\r\n                        else\r\n                            str += nParamChar;\r\n                    }\r\n                    else {\r\n                        arg = c;\r\n                        state = ParseState.paramsNNamed;\r\n                    }\r\n                    break;\r\n                case ParseState.paramsNNamed:\r\n                    if (c.match(/[^a-zA-Z0-9_]/g)) {\r\n                        if (this.stack.named && this.stack.named.hasOwnProperty(arg)) {\r\n                            if (eAlias && findAlias)\r\n                                alias += this.stack.named[arg];\r\n                            else\r\n                                str += this.stack.named[arg];\r\n                        }\r\n                        else if (this.client.variables.hasOwnProperty(arg)) {\r\n                            if (eAlias && findAlias)\r\n                                alias += this.client.variables[arg];\r\n                            else\r\n                                str += this.client.variables[arg];\r\n                        }\r\n                        else if (eAlias && findAlias)\r\n                            alias += nParamChar + arg;\r\n                        else\r\n                            str += nParamChar + arg;\r\n                        idx--;\r\n                        state = ParseState.none;\r\n                        arg = '';\r\n                    }\r\n                    else\r\n                        arg += c;\r\n                    break;\r\n                /*\r\n                                case ParseState.paramsNEscape:\r\n                                    if (c === '{')\r\n                                        tmp2 = `\\{`;\r\n                                    else if (c === escChar) \r\n                                        tmp2 = escChar;\r\n                                    else {\r\n                                        tmp2 = nParamChar + escChar;\r\n                                        idx--;\r\n                                    }\r\n                                    if (eAlias && findAlias)\r\n                                        alias += tmp2;\r\n                                    else\r\n                                        str += tmp2;\r\n                                    state = ParseState.none;\r\n                                    break;\r\n                                    */\r\n                case ParseState.paramsNBlock:\r\n                    if (c === '}' && nest === 0) {\r\n                        tmp2 = null;\r\n                        if (arg === 'i')\r\n                            tmp2 = this.loops[0];\r\n                        else if (arg === 'repeatnum')\r\n                            tmp2 = this.repeatnum;\r\n                        else if (this.stack.args && arg === '*') {\r\n                            tmp2 = this.stack.args.slice(1).join(' ');\r\n                            this.stack.used = this.stack.args.length;\r\n                        }\r\n                        else if (this.stack.named && this.stack.named.hasOwnProperty(arg))\r\n                            tmp2 = this.stack.named[arg];\r\n                        else {\r\n                            if (this.stack.args && !isNaN(arg)) {\r\n                                tmp = parseInt(arg, 10);\r\n                                if (tmp < 0) {\r\n                                    if (-tmp >= this.stack.args.length) {\r\n                                        if (eEval)\r\n                                            tmp2 = tmp;\r\n                                        else {\r\n                                            tmp2 = nParamChar;\r\n                                            idx = idx - arg.length - 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        tmp2 = this.stack.args.slice(tmp).join(' ');\r\n                                        this.stack.used = this.stack.args.length;\r\n                                    }\r\n                                }\r\n                                else if (tmp < this.stack.args.length) {\r\n                                    tmp2 = this.stack.args[tmp];\r\n                                    if (tmp > this.stack.used)\r\n                                        this.stack.used = tmp;\r\n                                }\r\n                                else if (eEval)\r\n                                    tmp2 = tmp;\r\n                                else {\r\n                                    tmp2 = nParamChar;\r\n                                    idx = idx - arg.length - 2;\r\n                                }\r\n                            }\r\n                            else if (this.stack.args && this.stack.args.indices && arg.match(/^x[-|+]?\\d+$/)) {\r\n                                tmp = parseInt(arg.substring(1), 10);\r\n                                if (tmp < 0) {\r\n                                    if (-tmp >= this.stack.args.length) {\r\n                                        tmp2 = nParamChar;\r\n                                        idx = idx - arg.length - 2;\r\n                                    }\r\n                                    else\r\n                                        tmp2 = this.stack.indices.slice(tmp).map(v => v ? (v[0] + ' ' + v[1]) : '0 0').join(' ');\r\n                                }\r\n                                else if (tmp < this.stack.args.length)\r\n                                    tmp2 = this.stack.args.indices[tmp] ? (this.stack.args.indices[tmp][0] + ' ' + this.stack.args.indices[tmp][1]) : '0 0';\r\n                                else {\r\n                                    tmp2 = nParamChar;\r\n                                    idx = idx - arg.length - 2;\r\n                                }\r\n                            }\r\n                            else {\r\n                                c = this.parseVariable(arg);\r\n                                if (c != null)\r\n                                    tmp2 = c;\r\n                                else if (eEval) {\r\n                                    tmp2 = this.evaluate(this.parseInline(arg));\r\n                                    if (iEval && typeof tmp2 === 'undefined')\r\n                                        tmp2 = null;\r\n                                    else\r\n                                        tmp2 = '' + tmp2;\r\n                                }\r\n                                else {\r\n                                    tmp2 = nParamChar;\r\n                                    idx = idx - arg.length - 2;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (tmp2 != null && eAlias && findAlias)\r\n                            alias += tmp2;\r\n                        else if (tmp2 != null)\r\n                            str += tmp2;\r\n                        state = ParseState.none;\r\n                        arg = '';\r\n                    }\r\n                    else if (c === '{') {\r\n                        nest++;\r\n                        arg += c;\r\n                    }\r\n                    else if (c === '}') {\r\n                        nest--;\r\n                        arg += c;\r\n                    }\r\n                    else\r\n                        arg += c;\r\n                    break;\r\n                case ParseState.escape:\r\n                    if (c === escChar || (stacking && c === stackingChar) || (eVerbatim && c === verbatimChar) || (ePaths && c === spChar) || (eCmd && c === cmdChar) || (eParamEscape && c === paramChar) || (eNParam && c === nParamChar))\r\n                        tmp2 = c;\r\n                    else if (iComments && c == iCommentsStr[0])\r\n                        tmp2 = c;\r\n                    else if (bComments && c == bCommentsStr[0])\r\n                        tmp2 = c;\r\n                    else if ('\"\\'{'.indexOf(c) !== -1)\r\n                        tmp2 = c;\r\n                    else\r\n                        tmp2 = escChar + c;\r\n                    if (eAlias && findAlias)\r\n                        alias += tmp2;\r\n                    else\r\n                        str += tmp2;\r\n                    state = ParseState.none;\r\n                    break;\r\n                case ParseState.verbatim:\r\n                    if (c === '\\n') {\r\n                        state = ParseState.none;\r\n                        out += str + c;\r\n                        str = '';\r\n                        start = true;\r\n                    }\r\n                    else {\r\n                        str += c;\r\n                        start = false;\r\n                    }\r\n                    break;\r\n                case ParseState.comment:\r\n                    if (iComments && c === iCommentsStr[1])\r\n                        state = ParseState.inlineComment;\r\n                    else if (bComments && c === bCommentsStr[1])\r\n                        state = ParseState.blockComment;\r\n                    else {\r\n                        state = ParseState.none;\r\n                        if (eAlias && findAlias)\r\n                            alias += iCommentsStr[0];\r\n                        else\r\n                            str += iCommentsStr[0];\r\n                        idx--;\r\n                    }\r\n                    break;\r\n                case ParseState.inlineCommentStart:\r\n                    if (c === iCommentsStr[1])\r\n                        state = ParseState.inlineComment;\r\n                    else {\r\n                        state = ParseState.none;\r\n                        if (eAlias && findAlias)\r\n                            alias += iCommentsStr[0];\r\n                        else\r\n                            str += iCommentsStr[0];\r\n                        idx--;\r\n                    }\r\n                    break;\r\n                case ParseState.blockCommentStart:\r\n                    if (bComments && c === bCommentsStr[1])\r\n                        state = ParseState.blockCommentEnd;\r\n                    else {\r\n                        state = ParseState.none;\r\n                        if (eAlias && findAlias)\r\n                            alias += bCommentsStr[0];\r\n                        else\r\n                            str += bCommentsStr[0];\r\n                        idx--;\r\n                    }\r\n                    break;\r\n                case ParseState.inlineComment:\r\n                    if (c === '\\n') {\r\n                        state = ParseState.none;\r\n                        if (!start)\r\n                            idx--;\r\n                        else {\r\n                            alias = '';\r\n                            //new line so need to check for aliases again\r\n                            findAlias = true;\r\n                            start = true;\r\n                        }\r\n                    }\r\n                    break;\r\n                case ParseState.blockComment:\r\n                    if (bCommentsStr.length === 1) {\r\n                        if (c === bCommentsStr[0])\r\n                            state = ParseState.none;\r\n                    }\r\n                    else if (c === bCommentsStr[1])\r\n                        state = ParseState.blockCommentEnd;\r\n                    break;\r\n                case ParseState.blockCommentEnd:\r\n                    if (c === bCommentsStr[0])\r\n                        state = ParseState.none;\r\n                    else\r\n                        state = ParseState.blockComment;\r\n                    break;\r\n                default:\r\n                    if ((iComments || bComments) && c === iCommentsStr[0] && c === bCommentsStr[0]) {\r\n                        if (iComments && iCommentsStr.length === 1)\r\n                            state = ParseState.inlineComment;\r\n                        else if (bComments && bCommentsStr.length === 1)\r\n                            state = ParseState.blockComment;\r\n                        else\r\n                            state = ParseState.comment;\r\n                        continue;\r\n                    }\r\n                    else if (iComments && c === iCommentsStr[0]) {\r\n                        if (iCommentsStr.length === 1)\r\n                            state = ParseState.inlineComment;\r\n                        else\r\n                            state = ParseState.inlineCommentStart;\r\n                        continue;\r\n                    }\r\n                    else if (bComments && c === bCommentsStr[0]) {\r\n                        if (bCommentsStr.length === 1)\r\n                            state = ParseState.blockComment;\r\n                        else\r\n                            state = ParseState.blockCommentStart;\r\n                        continue;\r\n                    }\r\n                    else if (eEscape && c === escChar) {\r\n                        state = ParseState.escape;\r\n                        start = false;\r\n                        continue;\r\n                    }\r\n                    else if (eParam && c === paramChar) {\r\n                        state = ParseState.paramsP;\r\n                        _neg = false;\r\n                        _pos = false;\r\n                        _fall = false;\r\n                        arg = '';\r\n                        start = false;\r\n                    }\r\n                    else if (eNParam && c === nParamChar) {\r\n                        state = ParseState.paramsN;\r\n                        _neg = false;\r\n                        _pos = false;\r\n                        _fall = false;\r\n                        arg = '';\r\n                        start = false;\r\n                    }\r\n                    else if (!noFunctions && eCmd && start && c === cmdChar) {\r\n                        state = ParseState.function;\r\n                        start = false;\r\n                        if (alias.length) {\r\n                            sTrim = alias;\r\n                            alias = '';\r\n                        }\r\n                        else {\r\n                            sTrim = str || '';\r\n                            str = '';\r\n                        }\r\n                    }\r\n                    else if (eVerbatim && start && c === verbatimChar) {\r\n                        state = ParseState.verbatim;\r\n                        start = false;\r\n                    }\r\n                    else if (ePaths && start && c === spChar) {\r\n                        state = ParseState.path;\r\n                        start = false;\r\n                    }\r\n                    else if (c === '\"' && pd) {\r\n                        if (eAlias && findAlias)\r\n                            alias += c;\r\n                        else\r\n                            str += c;\r\n                        state = ParseState.doubleQuoted;\r\n                        start = false;\r\n                    }\r\n                    else if (c === '\\'' && ps) {\r\n                        if (eAlias && findAlias)\r\n                            alias += c;\r\n                        else\r\n                            str += c;\r\n                        state = ParseState.singleQuoted;\r\n                        start = false;\r\n                    }\r\n                    //\\f\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\r\n                    else if (start && bTrim && (c === ' ' || c === '\\t' || c === '\\f' || c === '\\r' || c === '\\v' || c === '\\u0020' || c === '\\u00a0' || c === '\\u1680' || c === '\\u2000-' || c === '\\u200a' || c === '\\u2028' || c === '\\u2029' || c === '\\u202f' || c === '\\u205f' || c === '\\u3000' || c === '\\ufeff')) {\r\n                        if (eAlias && findAlias)\r\n                            alias += c;\r\n                        else\r\n                            str += c;\r\n                    }\r\n                    //if looking for an alias and a space check\r\n                    else if (eAlias && findAlias && c === ' ') {\r\n                        AliasesCached = FilterArrayByKeyValue(aliases, 'pattern', bTrim ? alias.trimStart() : alias);\r\n                        //are aliases enabled and does it match an alias?\r\n                        if (AliasesCached.length > 0) {\r\n                            //move to alias parsing\r\n                            state = ParseState.aliasArguments;\r\n                            //init args\r\n                            args.length = 0;\r\n                            arg = '';\r\n                            args.push(bTrim ? alias.trimStart() : alias);\r\n                        }\r\n                        else //else not an alias so normal space\r\n                        {\r\n                            str += alias + ' ';\r\n                            alias = '';\r\n                            AliasesCached = null;\r\n                        }\r\n                        //no longer look for an alias\r\n                        findAlias = false;\r\n                        start = false;\r\n                    }\r\n                    else if (c === '\\n' || (stacking && c === stackingChar)) {\r\n                        if (eAlias && findAlias && alias.length > 0) {\r\n                            AliasesCached = FilterArrayByKeyValue(aliases, 'pattern', bTrim ? alias.trimStart() : alias);\r\n                            //are aliases enabled and does it match an alias?\r\n                            if (AliasesCached.length > 0) {\r\n                                args.push(bTrim ? alias.trimStart() : alias);\r\n                                //move to alias parsing\r\n                                al = AliasesCached.length;\r\n                                for (a = 0; a < al; a++) {\r\n                                    str = this.ExecuteAlias(AliasesCached[a], args);\r\n                                    if (typeof str === 'number') {\r\n                                        if (str >= 0)\r\n                                            this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                                        if (out.length === 0) return null;\r\n                                        return out;\r\n                                    }\r\n                                    if (str !== null) out += str;\r\n                                    if (!a.multi) break;\r\n                                    if (this.stack.continue || this.stack.break) {\r\n                                        if (out.length === 0) return null;\r\n                                        return out;\r\n                                    }\r\n                                }\r\n                                str = '';\r\n                                //init args\r\n                                args.length = 0;\r\n                                arg = '';\r\n                            }\r\n                            else //else not an alias so normal space\r\n                            {\r\n                                str = this.ExecuteTriggers(TriggerTypes.CommandInputRegular | TriggerTypes.CommandInputPattern, alias, alias, false, true);\r\n                                if (typeof str === 'number') {\r\n                                    if (str >= 0)\r\n                                        this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                                    if (out.length === 0) return null;\r\n                                    return out;\r\n                                }\r\n                                if (str !== null) out += str + '\\n';\r\n                                str = '';\r\n                                AliasesCached = null;\r\n                            }\r\n                            //no longer look for an alias\r\n                        }\r\n                        else {\r\n                            str = this.ExecuteTriggers(TriggerTypes.CommandInputRegular | TriggerTypes.CommandInputPattern, str, str, false, true);\r\n                            if (typeof str === 'number') {\r\n                                if (str >= 0)\r\n                                    this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                                if (out.length === 0) return null;\r\n                                return out;\r\n                            }\r\n                            if (str !== null) out += str + '\\n';\r\n                            str = '';\r\n                        }\r\n                        if (this.stack.continue || this.stack.break) {\r\n                            if (out.length === 0) return null;\r\n                            return out;\r\n                        }\r\n                        alias = '';\r\n                        //new line so need to check for aliases again\r\n                        findAlias = true;\r\n                        start = true;\r\n                    }\r\n                    else if (eAlias && findAlias) {\r\n                        alias += c;\r\n                        start = false;\r\n                    }\r\n                    else {\r\n                        str += c;\r\n                        start = false;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        if (state === ParseState.escape)\r\n            str += escChar;\r\n        else if (state === ParseState.paramsNNamed && arg.length > 0) {\r\n            if (this.stack.named && this.stack.named[arg])\r\n                str += this.stack.named[arg];\r\n            else if (this.client.variables.hasOwnProperty(arg))\r\n                str += this.client.variables[arg];\r\n            else {\r\n                arg = this.parseInline(arg);\r\n                str += nParamChar;\r\n                if (arg != null) str += arg;\r\n            }\r\n        }\r\n        else if (state === ParseState.paramsP && arg.length > 0) {\r\n            if (this.stack.args) {\r\n                arg = parseInt(arg, 10);\r\n                if (_pos && this.stack.args.indices && arg < this.stack.args.length)\r\n                    str += this.stack.args.indices[arg] ? (this.stack.args.indices[arg][0] + ' ' + this.stack.args.indices[arg][1]) : '0 0';\r\n                else {\r\n                    if (_neg && arg < this.stack.args.length)\r\n                        str += this.stack.args.slice(arg).join(' ');\r\n                    else if (arg < this.stack.args.length)\r\n                        str += this.stack.args[arg];\r\n                    if (_neg)\r\n                        this.stack.used = this.stack.args.length;\r\n                    else if (arg > this.stack.used)\r\n                        this.stack.used = arg;\r\n                }\r\n            }\r\n            else {\r\n                arg = this.parseInline(arg);\r\n                str += paramChar;\r\n                if (_neg)\r\n                    str += '-';\r\n                if (_pos)\r\n                    str += 'x';\r\n                if (arg != null) str += arg;\r\n            }\r\n        }\r\n        else if (state === ParseState.paramsPBlock) {\r\n            arg = this.parseInline(arg);\r\n            str += paramChar + '{';\r\n            if (arg != null) str += arg;\r\n        }\r\n        else if (state === ParseState.paramsN && arg.length > 0) {\r\n            if (this.stack.named) {\r\n                if (this.stack.named.hasOwnProperty(arg)) {\r\n                    str += this.stack.named[arg];\r\n                }\r\n                else {\r\n                    arg = this.parseInline(arg);\r\n                    str += nParamChar;\r\n                    if (arg != null) str += arg;\r\n                }\r\n            }\r\n            else {\r\n                arg = this.parseInline(arg);\r\n                str += nParamChar;\r\n                if (arg != null) str += arg;\r\n            }\r\n        }\r\n        else if (state === ParseState.paramsNBlock) {\r\n            arg = this.parseInline(arg);\r\n            str += `${nParamChar}{`;\r\n            if (arg != null) str += arg;\r\n        }\r\n        else if (state === ParseState.path) {\r\n            str = this.ProcessPath(str);\r\n            if (str !== null) out += str;\r\n            str = '';\r\n        }\r\n        else if (state === ParseState.comment) {\r\n            str += iCommentsStr[0];\r\n            idx--;\r\n        }\r\n        else if (state === ParseState.inlineCommentStart) {\r\n            str += iCommentsStr[0];\r\n            idx--;\r\n        }\r\n        else if (state === ParseState.blockCommentStart) {\r\n            str += bCommentsStr[0];\r\n            idx--;\r\n        }\r\n\r\n        if (!noFunctions && state === ParseState.function) {\r\n            str = this.executeScript(cmdChar + str);\r\n            if (typeof str === 'number') {\r\n                if (str >= 0)\r\n                    this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                if (out.length === 0) return null;\r\n                return out;\r\n            }\r\n            if (str !== null) {\r\n                if (append && eAlias && this.stack.args && this.stack.append && this.stack.args.length - 1 > 0 && this.stack.used + 1 < this.stack.args.length) {\r\n                    let r = false;\r\n                    if (str.endsWith('\\n')) {\r\n                        str = str.substring(0, str.length - 1);\r\n                        r = true;\r\n                    }\r\n                    if (!str.endsWith(' '))\r\n                        str += ' ';\r\n                    if (this.stack.used < 1)\r\n                        str += this.stack.args.slice(1).join(' ');\r\n                    else\r\n                        str += this.stack.args.slice(this.stack.used + 1).join(' ');\r\n                    this.stack.used = this.stack.args.length;\r\n                    if (r) str += '\\n';\r\n                }\r\n                out += sTrim + str;\r\n            }\r\n            else if (out.length === 0) return null;\r\n            if (this.stack.continue || this.stack.break) {\r\n                if (out.length === 0) return null;\r\n                return out;\r\n            }\r\n        }\r\n        else if (state === ParseState.verbatim) {\r\n            if (append && eAlias && this.stack.args && this.stack.append && this.stack.args.length - 1 > 0 && this.stack.used + 1 < this.stack.args.length) {\r\n                let r = false;\r\n                if (str.endsWith('\\n')) {\r\n                    str = str.substring(0, str.length - 1);\r\n                    r = true;\r\n                }\r\n                if (!str.endsWith(' '))\r\n                    str += ' ';\r\n                if (this.stack.used < 1)\r\n                    str += this.stack.args.slice(1).join(' ');\r\n                else\r\n                    str += this.stack.args.slice(this.stack.used + 1).join(' ');\r\n                this.stack.used = this.stack.args.length;\r\n                if (r) str += '\\n';\r\n            }\r\n            out += str;\r\n        }\r\n        else if (alias.length > 0 && eAlias && findAlias) {\r\n            if (append && eAlias && this.stack.args && this.stack.append && this.stack.args.length - 1 > 0 && this.stack.used + 1 < this.stack.args.length) {\r\n                let r = false;\r\n                if (str.endsWith('\\n')) {\r\n                    str = str.substring(0, str.length - 1);\r\n                    r = true;\r\n                }\r\n                if (!str.endsWith(' '))\r\n                    str += ' ';\r\n                if (this.stack.used < 1)\r\n                    str += this.stack.args.slice(1).join(' ');\r\n                else\r\n                    str += this.stack.args.slice(this.stack.used + 1).join(' ');\r\n                this.stack.used = this.stack.args.length;\r\n                if (r) str += '\\n';\r\n            }\r\n            if (str.length > 0)\r\n                alias += str;\r\n            AliasesCached = FilterArrayByKeyValue(aliases, 'pattern', bTrim ? alias.trimStart() : alias);\r\n            //are aliases enabled and does it match an alias?\r\n            if (AliasesCached.length > 0) {\r\n                //move to alias parsing\r\n                args.push(bTrim ? alias.trimStart() : alias);\r\n                al = AliasesCached.length;\r\n                for (a = 0; a < al; a++) {\r\n                    str = this.ExecuteAlias(AliasesCached[a], args);\r\n                    if (typeof str === 'number') {\r\n                        if (str >= 0)\r\n                            this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                        if (out.length === 0) return null;\r\n                        return out;\r\n                    }\r\n                    if (str !== null) out += str;\r\n                    else if (out.length === 0) return null;\r\n                    if (this.stack.continue || this.stack.break) {\r\n                        return out;\r\n                    }\r\n                    if (!a.multi) break;\r\n                }\r\n            }\r\n            else //else not an alias so normal space\r\n            {\r\n                str = this.ExecuteTriggers(TriggerTypes.CommandInputRegular | TriggerTypes.CommandInputPattern, alias, alias, false, true);\r\n                if (typeof str === 'number') {\r\n                    if (str >= 0)\r\n                        this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                    if (out.length === 0) return null;\r\n                    return out;\r\n                }\r\n                if (str !== null) out += str;\r\n                else if (out.length === 0) return null;\r\n                if (this.stack.continue || this.stack.break) {\r\n                    return out;\r\n                }\r\n            }\r\n            AliasesCached = null;\r\n        }\r\n        else if (alias.length > 0) {\r\n            if (str.length > 0)\r\n                alias += str;\r\n            str = this.ExecuteTriggers(TriggerTypes.CommandInputRegular | TriggerTypes.CommandInputPattern, alias, alias, false, true);\r\n            if (typeof str === 'number') {\r\n                if (str >= 0)\r\n                    this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                if (out.length === 0) return null;\r\n                return out;\r\n            }\r\n            if (str !== null) {\r\n                if (append && eAlias && this.stack.args && this.stack.append && this.stack.args.length - 1 > 0 && this.stack.used + 1 < this.stack.args.length) {\r\n                    let r = false;\r\n                    if (str.endsWith('\\n')) {\r\n                        str = str.substring(0, str.length - 1);\r\n                        r = true;\r\n                    }\r\n                    if (!str.endsWith(' '))\r\n                        str += ' ';\r\n                    if (this.stack.used < 1)\r\n                        str += this.stack.args.slice(1).join(' ');\r\n                    else\r\n                        str += this.stack.args.slice(this.stack.used + 1).join(' ');\r\n                    this.stack.used = this.stack.args.length;\r\n                    if (r) str += '\\n';\r\n                }\r\n                out += str;\r\n            }\r\n            else if (out.length === 0) return null;\r\n            if (this.stack.continue || this.stack.break) {\r\n                if (out.length === 0) return null;\r\n                return out;\r\n            }\r\n        }\r\n        else if (str.length > 0) {\r\n            str = this.ExecuteTriggers(TriggerTypes.CommandInputRegular | TriggerTypes.CommandInputPattern, str, str, false, true);\r\n            if (typeof str === 'number') {\r\n                if (str >= 0)\r\n                    this.executeWait(text.substr(idx + 1), str, eAlias, stacking, append, noFunctions, noComments);\r\n                if (out.length === 0) return null;\r\n                return out;\r\n            }\r\n            if (str !== null) {\r\n                if (append && eAlias && this.stack.args && this.stack.append && this.stack.args.length - 1 > 0 && this.stack.used + 1 < this.stack.args.length) {\r\n                    let r = false;\r\n                    if (str.endsWith('\\n')) {\r\n                        str = str.substring(0, str.length - 1);\r\n                        r = true;\r\n                    }\r\n                    if (!str.endsWith(' '))\r\n                        str += ' ';\r\n                    if (this.stack.used < 1)\r\n                        str += this.stack.args.slice(1).join(' ');\r\n                    else\r\n                        str += this.stack.args.slice(this.stack.used + 1).join(' ');\r\n                    if (r) str += '\\n';\r\n                }\r\n                out += str;\r\n            }\r\n            else if (out.length === 0) return null;\r\n            if (this.stack.continue || this.stack.break) {\r\n                if (out.length === 0) return null;\r\n                return out;\r\n            }\r\n        }\r\n\r\n        args.length = 0;\r\n        args = null;\r\n        arg = null;\r\n        alias = null;\r\n        return out;\r\n    }\r\n\r\n\r\n    public parseVariable(text) {\r\n        let c;\r\n        switch (text) {\r\n            case 'esc':\r\n                return '\\x1b';\r\n            case 'cr':\r\n                return '\\n';\r\n            case 'lf':\r\n                return '\\r';\r\n            case 'crlf':\r\n                return '\\r\\n';\r\n            case 'copied':\r\n                return window.$copied;\r\n            case 'copied.lower':\r\n                return window.$copied.toLowerCase();\r\n            case 'copied.upper':\r\n                return window.$copied.toUpperCase();\r\n            case 'copied.proper':\r\n                return ProperCase(window.$copied);\r\n            case 'i':\r\n                return this.loops[0];\r\n            case 'repeatnum':\r\n                return this.vStack['$repeatnum'] || this.repeatnum;\r\n            case 'character':\r\n                return window.$character;\r\n            case 'character.lower':\r\n                return window.$character.toLowerCase();\r\n            case 'character.upper':\r\n                return window.$character.toUpperCase();\r\n            case 'character.proper':\r\n                return ProperCase(window.$character);\r\n            case 'selected':\r\n            case 'selectedurl':\r\n            case 'selectedline':\r\n            case 'selectedword':\r\n            case 'selurl':\r\n            case 'selline':\r\n            case 'selword':\r\n            case 'action':\r\n            case 'trigger':\r\n                return this.vStack['$' + text] || window['$' + text] || '';\r\n            case 'selected.lower':\r\n            case 'selectedurl.lower':\r\n            case 'selectedline.lower':\r\n            case 'selectedword.lower':\r\n            case 'selurl.lower':\r\n            case 'selline.lower':\r\n            case 'selword.lower':\r\n                return (this.vStack['$' + text.substr(0, text.length - 6)] || window['$' + text.substr(0, text.length - 6)] || '').toLowerCase();\r\n            case 'selected.upper':\r\n            case 'selectedurl.upper':\r\n            case 'selectedline.upper':\r\n            case 'selectedword.upper':\r\n            case 'selurl.upper':\r\n            case 'selline.upper':\r\n            case 'selword.upper':\r\n                return (this.vStack['$' + text.substr(0, text.length - 6)] || window['$' + text.substr(0, text.length - 6)] || '').toUpperCase();\r\n            case 'selected.proper':\r\n            case 'selectedurl.proper':\r\n            case 'selectedline.proper':\r\n            case 'selectedword.proper':\r\n            case 'selurl.proper':\r\n            case 'selline.proper':\r\n            case 'selword.proper':\r\n                return ProperCase(this.vStack['$' + text.substr(0, text.length - 7)] || window['$' + text.substr(0, text.length - 7)]);\r\n            case 'random':\r\n                return mathjs().randomInt(0, 100);\r\n        }\r\n        if (WindowVariables.indexOf(text) !== -1)\r\n            return this.vStack['$' + text] || window['$' + text] || '';\r\n        if (this.loops.length && text.length === 1) {\r\n            let i = text.charCodeAt(0) - 105;\r\n            if (i >= 0 && i < 18 && i < this.loops.length)\r\n                return this.loops[i];\r\n        }\r\n        const re = new RegExp('^([a-zA-Z]+)\\\\((.*)\\\\)$', 'g');\r\n        let res = re.exec(text);\r\n        if (!res || !res.length) {\r\n            const data: FunctionEvent = { raw: text, name: text, args: [], handled: false, return: null };\r\n            this.client.emit('variable', data);\r\n            if (data.handled)\r\n                return data.return;\r\n            return null;\r\n        }\r\n        let sides;\r\n        let mod;\r\n        let args;\r\n        let min;\r\n        let max;\r\n        let escape = this.client.getOption('allowEscape') ? this.client.getOption('escapeChar') : '';\r\n        switch (res[1]) {\r\n            case 'time':\r\n                if (!moment) return new Date().toISOString();\r\n                if (res[2] && res[2].length > 0)\r\n                    return moment().format(this.stripQuotes(this.parseInline(res[2])));\r\n                return moment().format();\r\n            case 'clip':\r\n                if (res[2] && res[2].length > 0) {\r\n                    (<any>this.client).writeClipboard(this.stripQuotes(this.parseInline(res[2])));\r\n                    return null;\r\n                }\r\n                return (<any>this.client).readClipboard();\r\n            case 'lower':\r\n                return this.stripQuotes(this.parseInline(res[2]).toLowerCase());\r\n            case 'upper':\r\n                return this.stripQuotes(this.parseInline(res[2]).toUpperCase());\r\n            case 'proper':\r\n                return ProperCase(this.stripQuotes(this.parseInline(res[2])));\r\n            case 'eval':\r\n                args = this.evaluate(this.parseInline(res[2]));\r\n                if (this.client.getOption('ignoreEvalUndefined') && typeof args === 'undefined')\r\n                    return null;\r\n                return '' + args;\r\n            case 'dice':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0) throw new Error('Invalid dice');\r\n                if (args.length === 1) {\r\n                    res = /(\\d+)\\s*?d(F|f|%|\\d+)(\\s*?[-|+|*|\\/]?\\s*?\\d+)?/g.exec(args[0]);\r\n                    if (!res || res.length < 3) return null;\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = parseInt(args[0]);\r\n                    sides = args[1].trim();\r\n                    if (args.length > 2)\r\n                        mod = args[2].trim();\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for dice');\r\n\r\n                if (sides === 'F' || sides === 'f')\r\n                    sides = 'F';\r\n                else if (sides !== '%')\r\n                    sides = parseInt(sides);\r\n\r\n                let sum = 0;\r\n                for (let i = 0; i < c; i++) {\r\n                    if (sides === 'F' || sides === 'f')\r\n                        sum += fudgeDice();\r\n                    else if (sides === '%')\r\n                        sum += ~~(Math.random() * 100.0) + 1.0;\r\n                    else\r\n                        sum += ~~(Math.random() * sides) + 1;\r\n                }\r\n                if (sides === '%')\r\n                    sum /= 100.0;\r\n                if (mod)\r\n                    return this.evaluate(sum + mod);\r\n                return '' + sum;\r\n            case 'diceavg':\r\n                //The average of any XdY is X*(Y+1)/2.\r\n                //(min + max) / 2 * a + m\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0) throw new Error('Invalid dice for diceavg');\r\n                if (args.length === 1) {\r\n                    res = /(\\d+)d(F|f|%|\\d+)([-|+|*|/]?\\d+)?/g.exec(args[0]);\r\n                    if (!res || res.length < 3) return null;\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = parseInt(args[0]);\r\n                    sides = args[1].trim();\r\n                    if (args.length > 2)\r\n                        mod = args[2].trim();\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for diceavg');\r\n                min = 1;\r\n                if (sides === 'F' || sides === 'f') {\r\n                    min = -1;\r\n                    max = 1;\r\n                }\r\n                else if (sides === '%') {\r\n                    min = 0;\r\n                    max = 1;\r\n                }\r\n                else\r\n                    max = parseInt(sides);\r\n\r\n                if (mod)\r\n                    return this.evaluate(((min + max) / 2 * c) + mod);\r\n                return '' + ((min + max) / 2 * c);\r\n            case 'dicemin':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0) throw new Error('Invalid dice for dicemin');\r\n                if (args.length === 1) {\r\n                    res = /(\\d+)d(F|f|%|\\d+)([-|+|*|/]?\\d+)?/g.exec(args[0]);\r\n                    if (!res || res.length < 3) return null;\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = parseInt(args[0]);\r\n                    sides = args[1].trim();\r\n                    if (args.length > 2)\r\n                        mod = args[2];\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for dicemin');\r\n                min = 1;\r\n                if (sides === 'F' || sides === 'f')\r\n                    min = -1;\r\n                else if (sides === '%')\r\n                    min = 0;\r\n\r\n                if (mod)\r\n                    return this.evaluate((min * c) + mod);\r\n                return '' + (min * c);\r\n            case 'dicemax':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0) throw new Error('Invalid dice for dicemax');\r\n                if (args.length === 1) {\r\n                    res = /(\\d+)d(F|f|%|\\d+)([-|+|*|/]?\\d+)?/g.exec(args[0]);\r\n                    if (!res || res.length < 3) return null;\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = parseInt(args[0]);\r\n                    sides = args[1].trim();\r\n                    if (args.length > 2)\r\n                        mod = args[2].trim();\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for dicemax');\r\n\r\n                if (sides === 'F' || sides === 'f')\r\n                    max = 1;\r\n                else if (sides === '%')\r\n                    max = 1;\r\n                else\r\n                    max = parseInt(sides);\r\n                if (mod)\r\n                    return this.evaluate((max * c) + mod);\r\n                return '' + (max * c);\r\n            case 'zdicedev':\r\n            case 'dicedev':\r\n                const fun = res[1];\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0) throw new Error('Invalid dice for ' + fun);\r\n                if (args.length === 1) {\r\n                    res = /(\\d+)d(F|f|%|\\d+)([-|+|*|/]?\\d+)?/g.exec(args[0]);\r\n                    if (!res || res.length < 3) return null;\r\n                    c = parseInt(res[1]);\r\n                    sides = res[2];\r\n                    if (res.length > 3)\r\n                        mod = res[3];\r\n                }\r\n                else if (args.length < 4) {\r\n                    c = parseInt(args[0]);\r\n                    sides = args[1].trim();\r\n                    if (args.length > 2)\r\n                        mod = args[2].trim();\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for ' + fun);\r\n\r\n                if (sides === 'F' || sides === 'f')\r\n                    max = 6;\r\n                else if (sides === '%')\r\n                    max = 1;\r\n                else\r\n                    max = parseInt(sides);\r\n\r\n                //zmud formula seems to be 0 index based\r\n                if (fun === 'zdicedev')\r\n                    max--;\r\n                if (mod)\r\n                    return this.evaluate(Math.sqrt(((max * max) - 1) / 12 * c) + mod);\r\n                return '' + Math.sqrt(((max * max) - 1) / 12 * c);\r\n            case 'color':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for color');\r\n                else if (args.length === 1) {\r\n                    if (args[0] === 'bold')\r\n                        return '370';\r\n                    c = getAnsiColorCode(args[0]);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid fore color');\r\n                    return c.toString();\r\n                }\r\n                else if (args.length === 2) {\r\n                    if (args[0] === 'bold')\r\n                        c = 370;\r\n                    else {\r\n                        c = getAnsiColorCode(args[0]);\r\n                        if (c === -1)\r\n                            throw new Error('Invalid fore color');\r\n                        if (args[1] === 'bold')\r\n                            return (c * 10).toString();\r\n                    }\r\n                    sides = c.toString();\r\n                    c = getAnsiColorCode(args[1], true);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid back color');\r\n                    return sides + ',' + c.toString();\r\n                }\r\n                else if (args.length === 3) {\r\n                    if (args[0] === 'bold') {\r\n                        args.shift();\r\n                        args.push('bold');\r\n                    }\r\n                    if (args[2] !== 'bold')\r\n                        throw new Error('Only bold is supported as third argument for color');\r\n                    c = getAnsiColorCode(args[0]);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid fore color');\r\n                    sides = (c * 10).toString();\r\n                    c = getAnsiColorCode(args[1], true);\r\n                    if (c === -1)\r\n                        throw new Error('Invalid back color');\r\n                    return sides + ',' + c.toString();\r\n                }\r\n                throw new Error('Too many arguments');\r\n            case 'zcolor':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for zcolor');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for zcolor');\r\n                return getColorCode(parseInt(args[0], 10));\r\n            case 'ansi':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for ansi');\r\n                c = args.length;\r\n                mod = [];\r\n                min = {};\r\n                for (sides = 0; sides < c; sides++) {\r\n                    if (args[sides].trim() === 'current')\r\n                        mod.push(args[sides].trim());\r\n                    else {\r\n                        max = getAnsiCode(args[sides].trim());\r\n                        if (max === -1)\r\n                            throw new Error('Invalid color or style for ansi');\r\n                        //style\r\n                        if (max >= 0 && max < 30)\r\n                            min[max] = 1;\r\n                        //color\r\n                        else\r\n                            mod.push(args[sides]);\r\n                    }\r\n                }\r\n                // fore,back\r\n                if (mod.length > 2)\r\n                    throw new Error('Too many colors for ansi');\r\n                if (mod.length > 1) {\r\n                    if (mod[1] === 'current')\r\n                        mod[1] = '';\r\n                    else\r\n                        mod[1] = getAnsiCode(mod[1], true);\r\n                }\r\n                if (mod.length > 0) {\r\n                    if (min[1] && mod[0] === 'white')\r\n                        mod[0] = '';\r\n                    else if (mod[0] === 'current')\r\n                        mod[0] = '';\r\n                    else\r\n                        mod[0] = getAnsiCode(mod[0]);\r\n                }\r\n\r\n                min = [...Object.keys(min), ...mod]\r\n                if (!min.length)\r\n                    throw new Error('Invalid colors or styles for ansi');\r\n                //remove any current flags\r\n                min = min.filter(f => f !== '');\r\n                return `\\x1b[${min.join(';')}m`;\r\n            case 'random':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0) throw new Error('Invalid random');\r\n                if (args.length === 1)\r\n                    return mathjs().randomInt(0, parseInt(args[0], 10) + 1);\r\n                else if (args.length === 2)\r\n                    return mathjs().randomInt(parseInt(args[0], 10), parseInt(args[1], 10) + 1);\r\n                else\r\n                    throw new Error('Too many arguments for random');\r\n            case 'case': //case(index,n1,n2...)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for case');\r\n                c = this.evaluate(this.parseInline(args[0]));\r\n                if (typeof c !== 'number')\r\n                    return '';\r\n                if (c > 0 && c < args.length)\r\n                    return this.stripQuotes(args[c]);\r\n                return '';\r\n            case 'switch': //switch(exp,value...)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for switch');\r\n                if (args.length % 2 === 1)\r\n                    throw new Error('All expressions must have a value for switch');\r\n                sides = args.length;\r\n                for (c = 0; c < sides; c += 2) {\r\n                    if (this.evaluate(args[c]))\r\n                        return this.stripQuotes(args[c + 1]);\r\n                }\r\n                return '';\r\n            case 'if': //if(exp,true,false)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length < 3)\r\n                    throw new Error('Missing arguments for if');\r\n                if (args.length !== 3)\r\n                    throw new Error('Too many arguments for if');\r\n                if (this.evaluate(args[0]))\r\n                    return this.stripQuotes(args[1].trim());\r\n                return this.stripQuotes(args[2].trim());\r\n            case 'ascii': //ascii(string)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for ascii');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for ascii');\r\n                if (args[0].trim().length === 0)\r\n                    throw new Error('Invalid argument, empty string for ascii');\r\n                return args[0].trim().charCodeAt(0);\r\n            case 'char': //char(number)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for char');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for char');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for char');\r\n                return String.fromCharCode(c);\r\n            case 'begins'://(string1,string2)` return true if string 1 starts with string 2\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for begins');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for begins');\r\n                return this.stripQuotes(args[0]).startsWith(this.stripQuotes(args[1]));\r\n            case 'ends'://(string1, string2)` returns true if string 1 ends with string 2\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for ends');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for ends');\r\n                return this.stripQuotes(args[0]).endsWith(this.stripQuotes(args[1]));\r\n            case 'len'://(string)` returns the length of string\r\n                return this.stripQuotes(this.parseInline(res[2])).length;\r\n            case 'stripansi':\r\n                const ansiRegex = new RegExp('[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))', 'g')\r\n                return this.stripQuotes(this.parseInline(res[2])).replace(ansiRegex, '');\r\n            case 'pos'://(pattern,string)` returns the position pattern in string on 1 index scale, 0 if not found\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for pos');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for pos');\r\n                return this.stripQuotes(args[1]).indexOf(this.stripQuotes(args[0])) + 1;\r\n            case 'ipos'://(pattern,string)` returns the position pattern in string on 1 index scale, 0 if not found\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for ipos');\r\n                else if (args.length > 2)\r\n                    throw new Error('Too many arguments for ipos');\r\n                return this.stripQuotes(args[1]).toLowerCase().indexOf(this.stripQuotes(args[0]).toLowerCase()) + 1;\r\n            case 'regex'://(string,regex,var1,...,varN)\r\n                args = this.splitByQuotes(res[2], ',');\r\n                if (args.length < 2)\r\n                    throw new Error('Missing arguments for regex');\r\n                c = new RegExp(this.stripQuotes(args[1]), 'gd');\r\n                c = c.exec(this.stripQuotes(this.parseInline(args[0])));\r\n                args.shift();\r\n                args.shift();\r\n                if (c == null || c.length === 0)\r\n                    return 0;\r\n                if (args.length) {\r\n                    for (sides = 1; sides < c.length; sides++) {\r\n                        if (!args.length)\r\n                            break;\r\n                        this.client.variables[this.stripQuotes(this.parseInline(args[0]))] = c[sides];\r\n                        args.shift();\r\n                    }\r\n                    if (args.length)\r\n                        this.client.variables[this.stripQuotes(this.parseInline(args[0]))] = c[0].length;\r\n                }\r\n                if (!c.indices[0])\r\n                    return 1;\r\n                return c.indices[0][0] + 1;\r\n            case 'trim':\r\n                return this.stripQuotes(this.parseInline(res[2])).trim();\r\n            case 'trimleft':\r\n                return this.stripQuotes(this.parseInline(res[2])).trimLeft();\r\n            case 'trimright':\r\n                return this.stripQuotes(this.parseInline(res[2])).trimRight();\r\n            case 'bitand'://bitand(v1,v2)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitand');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitand');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for bitand');\r\n                sides = parseInt(args[1], 10);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1] + '\\' must be a number for bitand');\r\n                return c & sides;\r\n            case 'bitnot'://bitnot(v1)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitnot');\r\n                else if (args.length !== 1)\r\n                    throw new Error('Too many arguments for bitnot');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for bitnot');\r\n                return ~c;\r\n            case 'bitor': //bitor(v1,v2)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitor');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitor');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for bitor');\r\n                sides = parseInt(args[1], 10);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1] + '\\' must be a number for bitor');\r\n                return c | sides;\r\n            case 'bitset':\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitset');\r\n                else if (args.length > 3)\r\n                    throw new Error('Too many arguments for bitset');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for bitset');\r\n                sides = parseInt(args[1], 10);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1] + '\\' must be a number for bitset');\r\n                sides--;\r\n                mod = 1;\r\n                if (args.length === 3) {\r\n                    mod = parseInt(args[2], 10);\r\n                    if (isNaN(mod))\r\n                        throw new Error('Invalid argument \\'' + args[2] + '\\' must be a number for bitset');\r\n                }\r\n                return (c & (~(1 << sides))) | ((mod ? 1 : 0) << sides);\r\n            case 'bitshift'://bitshift(value,num)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitshift');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitshift');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for bitshift');\r\n                sides = parseInt(args[1], 10);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1] + '\\' must be a number for bitshift');\r\n                if (sides < 0)\r\n                    return c >> -sides;\r\n                return c << sides\r\n            case 'bittest'://bittest(i,bitnum)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bittest');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bittest');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for bittest');\r\n                sides = parseInt(args[1], 10);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1] + '\\' must be a number for bittest');\r\n                sides--;\r\n                return ((c >> sides) % 2 != 0) ? 1 : 0;\r\n            case 'bitxor'://bitxor(v1,v2)\r\n                args = this.parseInline(res[2]).split(',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for bitxor');\r\n                else if (args.length !== 2)\r\n                    throw new Error('Too many arguments for bitxor');\r\n                c = parseInt(args[0], 10);\r\n                if (isNaN(c))\r\n                    throw new Error('Invalid argument \\'' + args[0] + '\\' must be a number for bitxor');\r\n                sides = parseInt(args[1], 10);\r\n                if (isNaN(sides))\r\n                    throw new Error('Invalid argument \\'' + args[1] + '\\' must be a number for bitxor');\r\n                return c ^ sides;\r\n            case 'number': //number(s)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for number');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for number');\r\n                args[0] = this.stripQuotes(args[0], true);\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/))\r\n                    return parseInt(args[0], 10);\r\n                else if (args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return parseFloat(args[0]);\r\n                else if (args[0] === \"true\")\r\n                    return 1;\r\n                else if (args[0] === \"false\")\r\n                    return 0;\r\n                return 0;\r\n            case 'isfloat'://isfloat(value)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for isfloat');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for isfloat');\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return 1;\r\n                return 0;\r\n            case 'isnumber': //isnumber(s)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for isnumber');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for isnumber');\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/) || args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return 1;\r\n                return 0;\r\n            case 'string'://string(value)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for string');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for string');\r\n                return `\"${this.stripQuotes(args[0]), true}\"`;\r\n            case 'float'://float(value)\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for float');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for float');\r\n                args[0] = this.stripQuotes(args[0], true);\r\n                if (args[0].match(/^\\s*?[-|+]?\\d+\\s*?$/) || args[0].match(/^\\s*?[-|+]?\\d+\\.\\d+\\s*?$/))\r\n                    return parseFloat(args[0]);\r\n                else if (args[0] === \"true\")\r\n                    return 1.0;\r\n                else if (args[0] === \"false\")\r\n                    return 0.0;\r\n                return 0;\r\n            case 'isdefined':\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for isdefined');\r\n                else if (args.length > 1)\r\n                    throw new Error('Too many arguments for isdefined');\r\n                args[0] = this.stripQuotes(args[0], true);\r\n                if (this.client.variables.hasOwnProperty(args[0]))\r\n                    return 1;\r\n                return 0;\r\n            case 'defined':\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for defined');\r\n                else if (args.length === 1) {\r\n                    args[0] = this.stripQuotes(args[0], true);\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0) return 0;\r\n                    //have to check each profile as the client only caches enabled items for speed\r\n                    for (; k < kl; k++) {\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                        sides = sides.find(i => {\r\n                            return i.pattern === args[0];\r\n                        });\r\n                        if (sides) return 1;\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                        sides = sides.find(i => {\r\n                            return i.pattern === args[0] || i.name === args[0];\r\n                        });\r\n                        if (sides) return 1;\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].macros);\r\n                        sides = sides.find(i => {\r\n                            return MacroDisplay(i).toLowerCase() === args[0].toLowerCase() || i.name === args[0];\r\n                        });\r\n                        if (sides) return 1;\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                        sides = sides.find(i => {\r\n                            return i.caption === args[0] || i.name === args[0]\r\n                        });\r\n                        if (sides) return 1;\r\n                    }\r\n                    return this.client.variables.hasOwnProperty(args[0]);\r\n                }\r\n                else if (args.length === 2) {\r\n                    args[0] = this.stripQuotes(args[0], true);\r\n                    args[1] = this.stripQuotes(args[1], true).toLowerCase();\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0) return 0;\r\n                    //have to check each profile as the client only caches enabled items for speed\r\n                    for (; k < kl; k++) {\r\n                        switch (args[1]) {\r\n                            case 'alias':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                                sides = sides.find(i => {\r\n                                    return i.pattern === args[0];\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'event':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                sides = sides.find(i => {\r\n                                    return i.type === TriggerType.Event && (i.pattern === args[0] || i.name === args[0]);\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'trigger':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                                sides = sides.find(i => {\r\n                                    return i.pattern === args[0] || i.name === args[0];\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'macro':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].macros);\r\n                                sides = sides.find(i => {\r\n                                    return MacroDisplay(i).toLowerCase() === args[0].toLowerCase() || i.name === args[0];\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            case 'button':\r\n                                sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].aliases);\r\n                                sides = sides.find(i => {\r\n                                    return i.caption === args[0] || i.name === args[0]\r\n                                });\r\n                                if (sides) return 1;\r\n                                return 0;\r\n                            //case 'variable':\r\n                            //case 'path':\r\n                            //case 'status':\r\n                            //case 'class':\r\n                            //case 'menu':                        \r\n                            //case 'module':\r\n                        }\r\n                    }\r\n                    if (args[1] === 'variable')\r\n                        return this.client.variables.hasOwnProperty(args[0]);\r\n                }\r\n                else\r\n                    throw new Error('Too many arguments for defined');\r\n                return 0;\r\n            case 'escape':\r\n                args = this.stripQuotes(this.parseInline(res[2]));\r\n                if (this.client.getOption('allowEscape')) {\r\n                    c = escape;\r\n                    if (escape === '\\\\')\r\n                        c += escape;\r\n                    if (this.client.getOption('parseDoubleQuotes'))\r\n                        c += '\"';\r\n                    if (this.client.getOption('parseSingleQuotes'))\r\n                        c += '\\'';\r\n                    if (this.client.getOption('commandStacking'))\r\n                        c += this.client.getOption('commandStackingChar');\r\n                    if (this.client.getOption('enableSpeedpaths'))\r\n                        c += this.client.getOption('speedpathsChar');\r\n                    if (this.client.getOption('enableCommands'))\r\n                        c += this.client.getOption('commandChar');\r\n                    if (this.client.getOption('enableVerbatim'))\r\n                        c += this.client.getOption('verbatimChar');\r\n                    if (this.client.getOption('enableDoubleParameterEscaping'))\r\n                        c += this.client.getOption('parametersChar');\r\n                    if (this.client.getOption('enableNParameters'))\r\n                        c += this.client.getOption('nParametersChar');\r\n                    return args.replace(new RegExp(`[${c}]`, 'g'), escape + '$&');\r\n                }\r\n                return args.replace(/[\\\\\"']/g, '\\$&');\r\n            case 'unescape':\r\n                args = this.stripQuotes(this.parseInline(res[2]));\r\n                if (this.client.getOption('allowEscape')) {\r\n                    c = escape;\r\n                    if (escape === '\\\\')\r\n                        c += escape;\r\n                    if (this.client.getOption('parseDoubleQuotes'))\r\n                        c += '\"';\r\n                    if (this.client.getOption('parseSingleQuotes'))\r\n                        c += '\\'';\r\n                    if (this.client.getOption('commandStacking'))\r\n                        c += this.client.getOption('commandStackingChar');\r\n                    if (this.client.getOption('enableSpeedpaths'))\r\n                        c += this.client.getOption('speedpathsChar');\r\n                    if (this.client.getOption('enableCommands'))\r\n                        c += this.client.getOption('commandChar');\r\n                    if (this.client.getOption('enableVerbatim'))\r\n                        c += this.client.getOption('verbatimChar');\r\n                    if (this.client.getOption('enableDoubleParameterEscaping'))\r\n                        c += this.client.getOption('parametersChar');\r\n                    if (this.client.getOption('enableNParameters'))\r\n                        c += this.client.getOption('nParametersChar');\r\n                    if (escape === '\\\\')\r\n                        return args.replace(new RegExp(`\\\\\\\\[${c}]`, 'g'), (m) => m.substr(1));\r\n                    return args.replace(new RegExp(`${escape}[${c}]`, 'g'), (m) => m.substr(1));\r\n                }\r\n                return args.replace(/\\\\[\\\\\"']/g, (m) => m.substr(1));\r\n            case 'alarm':\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for alarm');\r\n                if (args.length > 3)\r\n                    throw new Error('Too many arguments for alarm');\r\n                args[0] = this.stripQuotes(args[0]);\r\n                sides = this.client.alarms;\r\n                max = sides.length;\r\n                if (max === 0)\r\n                    throw new Error('No alarms set.');\r\n                c = 0;\r\n                if (args.length === 1) {\r\n                    for (; c < max; c++) {\r\n                        //only main state counts here\r\n                        if (sides[c].type !== TriggerType.Alarm) continue;\r\n                        if (sides[c].name === args[0] || sides[c].pattern === args[0]) {\r\n                            if (sides[c].suspended)\r\n                                return 0;\r\n                            return this.client.getRemainingAlarmTime(c);\r\n                        }\r\n                    }\r\n                }\r\n                else if (args.length === 2) {\r\n                    mod = parseInt(args[1], 10);\r\n                    if (isNaN(mod)) {\r\n                        args[1] = this.stripQuotes(args[1].trim());\r\n                        for (; c < max; c++) {\r\n                            //only main state counts here\r\n                            if (sides[c].type !== TriggerType.Alarm) continue;\r\n                            if (sides[c].name === args[0] || sides[c].pattern === args[0]) {\r\n                                if (sides[c].profile.name.toUpperCase() !== args[1].toUpperCase())\r\n                                    continue;\r\n                                if (sides[c].suspended)\r\n                                    return 0;\r\n                                return this.client.getRemainingAlarmTime(c);\r\n                            }\r\n                        }\r\n                        throw Error('Alarm not found in profile: ' + args[1] + '.');\r\n                    }\r\n                    else {\r\n                        for (; c < max; c++) {\r\n                            //only main state counts here\r\n                            if (sides[c].type !== TriggerType.Alarm) continue;\r\n                            if (sides[c].name === args[0] || sides[c].pattern === args[0]) {\r\n                                if (!sides[c].suspended)\r\n                                    this.client.setAlarmTempTime(c, mod);\r\n                                return mod;\r\n                            }\r\n                        }\r\n                        throw Error('Alarm not found.');\r\n                    }\r\n                }\r\n                else if (args.length === 3) {\r\n                    mod = parseInt(args[1], 10);\r\n                    if (isNaN(mod))\r\n                        throw new Error(\"Invalid time for alarm\");\r\n                    args[2] = this.stripQuotes(args[2].trim());\r\n                    for (; c < max; c++) {\r\n                        //only main state counts here\r\n                        if (sides[c].type !== TriggerType.Alarm) continue;\r\n                        if (sides[c].name === args[0] || sides[c].pattern === args[0]) {\r\n                            if (sides[c].profile.name.toUpperCase() !== args[2].toUpperCase())\r\n                                continue;\r\n                            if (!sides[c].suspended)\r\n                                this.client.setAlarmTempTime(c, mod);\r\n                            return mod;\r\n                        }\r\n                    }\r\n                    throw Error('Could not set time, alarm not found in profile: ' + args[2] + '.');\r\n                }\r\n                return 0;\r\n            case 'state':\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    throw new Error('Missing arguments for state');\r\n                if (args.length > 2)\r\n                    throw new Error('Too many arguments for state');\r\n                args[0] = this.stripQuotes(args[0]);\r\n                mod = null;\r\n                if (args.length === 1) {\r\n                    const keys = this.client.profiles.keys;\r\n                    let k = 0;\r\n                    const kl = keys.length;\r\n                    if (kl === 0)\r\n                        return null;\r\n                    if (kl === 1) {\r\n\r\n                        if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                            throw Error('No enabled profiles found!');\r\n                        sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                        sides = sides.find(t => {\r\n                            return t.name === args[0] || t.pattern === args[0];\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; k < kl; k++) {\r\n                            if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                                continue;\r\n                            sides = SortItemArrayByPriority(this.client.profiles.items[keys[k]].triggers);\r\n                            sides = sides.find(t => {\r\n                                return t.name === args[0] || t.pattern === args[0];\r\n                            });\r\n                            if (sides)\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                else if (args.length === 2) {\r\n                    args[1] = this.stripQuotes(args[1].trim());\r\n                    if (this.client.profiles.contains(args[1]))\r\n                        mod = this.client.profiles.items[args[1].toLowerCase()];\r\n                    else\r\n                        throw new Error('Profile not found: ' + args[1]);\r\n                    sides = SortItemArrayByPriority(mod.triggers);\r\n                    sides = sides.find(t => {\r\n                        return t.name === args[0] || t.pattern === args[0];\r\n                    });\r\n                }\r\n                if (sides)\r\n                    return sides.triggers && sides.triggers.length ? sides.state : 0;\r\n                throw new Error('Trigger not found');\r\n            case 'isnull':\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    return null;\r\n                if (args.length !== 1)\r\n                    throw new Error('Too many arguments for null');\r\n                return this.evaluate(args[0]) === null ? 1 : 0;\r\n            case 'prompt':\r\n                args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n                if (args.length === 0)\r\n                    return window.prompt() || '';\r\n                if (args.length > 3)\r\n                    throw new Error('Too many arguments');\r\n                args = args.map(a => this.stripQuotes(a));\r\n                return window.prompt(...args) || '';\r\n            /*\r\n        case 'fileprompt':\r\n            args = this.splitByQuotes(this.parseInline(res[2]), ',');\r\n            if (args.length > 2)\r\n                throw new Error('Too many arguments');\r\n            args = args.map(a => this.stripQuotes(a));\r\n            let f = [\r\n                { name: 'All files (*.*)', extensions: ['*'] },\r\n            ];\r\n            if (args.length > 0 && args[0].trim().length > 0) {\r\n                f.unshift({\r\n                    name: args[0],\r\n                    extensions: args[0].split(',').map(a => a.trim())\r\n                })\r\n            }\r\n            var files = dialog.showOpenDialogSync({\r\n                filters: f,\r\n                properties: ['openFile', 'promptToCreate'],\r\n                defaultPath: args.length >= 2 ? parseTemplate(args[1]) : ''\r\n            });\r\n            if (files && files.length) return files[0];\r\n            return '';\r\n            */\r\n        }\r\n        const data: FunctionEvent = { raw: text, name: res[1], args: res[2] && res[2].length ? this.parseOutgoing(res[2]).split(',') : [], handled: false, return: null };\r\n        this.client.emit('variable', data);\r\n        if (data.handled)\r\n            return data.return;\r\n        return null;\r\n    }\r\n\r\n    public GetNamedArguments(str: string, args, append?: boolean) {\r\n        if (str === '*')\r\n            return args;\r\n        if (append == null) append = false;\r\n        if (str == null || str.length === 0)\r\n            return append ? args : [];\r\n        const n = str.split(',');\r\n        const nl = n.length;\r\n        const al = args.length;\r\n        //no values to process\r\n        if (nl === 0)\r\n            return append ? args : [];\r\n        let named;\r\n\r\n        if (append)\r\n            named = args.slice();\r\n        else\r\n            named = [];\r\n        for (let s = 0; s < nl; s++) {\r\n            n[s] = $.trim(n[s]);\r\n            if (n[s].length < 1) continue;\r\n            if (n[s].startsWith('$')) n[s] = n[s].substring(1);\r\n            if (!n[s].match(/^[a-zA-Z0-9_][a-zA-Z0-9_]+$/g)) continue;\r\n            if (!isValidIdentifier(n[s])) continue;\r\n            if (named[n[s]]) continue;\r\n            named[n[s]] = (s + 1 < al) ? args[s + 1] : '';\r\n        }\r\n        return named;\r\n    }\r\n\r\n    public ExecuteAlias(alias, args) {\r\n        if (!alias.enabled) return;\r\n        let ret; // = '';\r\n        if (alias.value.length)\r\n            switch (alias.style) {\r\n                case 1:\r\n                    this._stack.push({ loops: [], args: args, named: this.GetNamedArguments(alias.params, args), append: alias.append, used: 0 });\r\n                    ret = this.parseOutgoing(alias.value, null, null, true);\r\n                    this._stack.pop();\r\n                    break;\r\n                case 2:\r\n                    if ((this.client.getOption('echo') & 2) === 2)\r\n                        this.client.echo(alias.value, -7, -8, true, true);\r\n                    /*jslint evil: true */\r\n                    const named = this.GetNamedArguments(alias.params, args);\r\n                    if (named)\r\n                        ret = Object.keys(named).map(v => `let ${v} = this.input.stack.named[\"${v}\"];`).join('') + '\\n';\r\n                    else\r\n                        ret = '';\r\n                    const f = new Function('try { ' + ret + alias.value + '\\n} catch (e) { if(this.getOption(\\'showScriptErrors\\')) this.error(e);}');\r\n                    this._stack.push({ loops: [], args: args, named: named, append: alias.append, used: 0 });\r\n                    try {\r\n                        ret = f.apply(this.client, args);\r\n                    }\r\n                    catch (e) {\r\n                        throw e;\r\n                    }\r\n                    finally {\r\n                        this._stack.pop();\r\n                    }\r\n                    if (typeof ret === 'string')\r\n                        ret = this.parseOutgoing(ret, null, null, true);\r\n                    break;\r\n                default:\r\n                    ret = alias.value;\r\n                    break;\r\n            }\r\n        if (ret == null || ret === undefined)\r\n            return null;\r\n        ret = this.ExecuteTriggers(TriggerTypes.CommandInputRegular | TriggerTypes.CommandInputPattern, ret, ret, false, true);\r\n        if (ret == null || ret === undefined)\r\n            return null;\r\n        //Convert to string\r\n        if (typeof ret !== 'string')\r\n            ret = ret.toString();\r\n        if (ret.length === 0 && !this.client.getOption('returnNewlineOnEmptyValue'))\r\n            return null;\r\n        if (ret.endsWith('\\n'))\r\n            return ret;\r\n        return ret + '\\n';\r\n    }\r\n\r\n    public ProcessMacros(keycode, alt, ctrl, shift, meta) {\r\n        if (!keycode || (keycode > 9 && keycode < 19)) return false;\r\n        //if(!this.client.getOption('enableMacros')) return false;\r\n        //Possible cache by modifier but  not sure if it it matters as there is a limit of 1 macro per key combo so at most there probably wont be more then 5 to maybe 20 macros per key\r\n        //const macros = this._MacroCache[`${keycode}_${mod}`] || (this._MacroCache[`${keycode}_${mod}`] = FilterArrayByKeyValue(FilterArrayByKeyValue(this.client.macros, 'key', keycode), 'modifiers', mod));\r\n        const macros = this._MacroCache[keycode] || (this._MacroCache[keycode] = FilterArrayByKeyValue(this.client.macros, 'key', keycode));\r\n        let m = 0;\r\n        const ml = macros.length;\r\n        let mod = MacroModifiers.None;\r\n        if (alt)\r\n            mod |= MacroModifiers.Alt;\r\n        if (ctrl)\r\n            mod |= MacroModifiers.Ctrl;\r\n        if (shift)\r\n            mod |= MacroModifiers.Shift;\r\n        if (meta)\r\n            mod |= MacroModifiers.Meta;\r\n        for (; m < ml; m++) {\r\n            if (!macros[m].enabled || mod !== macros[m].modifiers) continue;\r\n            if (this.ExecuteMacro(macros[m]))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public ExecuteMacro(macro) {\r\n        if (!macro.enabled) return false;\r\n        let ret; // = '';\r\n        if (macro.value.length)\r\n            switch (macro.style) {\r\n                case 1:\r\n                    this._stack.push({ loops: [], args: 0, named: 0, used: 0 });\r\n                    try {\r\n                        ret = this.parseOutgoing(macro.value);\r\n                    }\r\n                    catch (e) {\r\n                        throw e;\r\n                    }\r\n                    finally {\r\n                        this._stack.pop();\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if ((this.client.getOption('echo') & 2) === 2)\r\n                        this.client.echo(macro.value, -7, -8, true, true);\r\n                    /*jslint evil: true */\r\n                    const f = new Function('try { ' + macro.value + '\\n} catch (e) { if(this.getOption(\\'showScriptErrors\\')) this.error(e);}');\r\n                    this._stack.push({ loops: [], args: 0, named: 0, used: 0 });\r\n                    try {\r\n                        ret = f.apply(this.client);\r\n                    }\r\n                    catch (e) {\r\n                        throw e;\r\n                    }\r\n                    finally {\r\n                        this._stack.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    ret = macro.value;\r\n                    break;\r\n            }\r\n        if (ret == null || ret === undefined)\r\n            return true;\r\n        //Convert to string\r\n        if (typeof ret !== 'string')\r\n            ret = ret.toString();\r\n        if (ret.length === 0 && !this.client.getOption('returnNewlineOnEmptyValue'))\r\n            return null;\r\n        if (macro.send) {\r\n            if (!ret.endsWith('\\n'))\r\n                ret += '\\n';\r\n            if (macro.chain && this.client.commandInput.value.endsWith(' ')) {\r\n                this.client.commandInput.value = this.client.commandInput.value + ret;\r\n                this.client.sendCommand(null, null, this.client.getOption('allowCommentsFromCommand'));\r\n            }\r\n            else\r\n                this.client.send(ret, true);\r\n        }\r\n        else if (macro.append)\r\n            this.client.commandInput.value = this.client.commandInput.value + ret;\r\n        return true;\r\n    }\r\n\r\n    public ProcessPath(str, replace?: boolean) {\r\n        if (str.length === 0)\r\n            return '';\r\n        let out: string[] = [];\r\n\r\n        let state = 0;\r\n        let cmd: string = '';\r\n        let num: string = '';\r\n        let idx = 0;\r\n        let c: string;\r\n        let i: number;\r\n        let t;\r\n        let p;\r\n        let n = 0;\r\n        const tl: number = str.length;\r\n\r\n        for (; idx < tl; idx++) {\r\n            c = str.charAt(idx);\r\n            i = str.charCodeAt(idx);\r\n            switch (state) {\r\n                case 1:\r\n                    if (i > 47 && i < 58)\r\n                        num += c;\r\n                    else if (c === '\\\\')\r\n                        state = 2;\r\n                    else {\r\n                        state = 0;\r\n                        cmd = c;\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if (i > 47 && i < 58)\r\n                        cmd += c;\r\n                    else {\r\n                        cmd += '\\\\';\r\n                        idx--;\r\n                    }\r\n                    state = 0;\r\n                    break;\r\n                case 3:\r\n                    if (n === 0 && c === ')')\r\n                        state = 0;\r\n                    else {\r\n                        if (c === '(')\r\n                            n++;\r\n                        else if (c === ')')\r\n                            n--;\r\n                        cmd += c;\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    if (n === 0 && c === '}')\r\n                        state = 0;\r\n                    else {\r\n                        if (c === '{')\r\n                            n++;\r\n                        else if (c === '}')\r\n                            n--;\r\n                        cmd += c;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (i > 47 && i < 58) {\r\n                        if (cmd.length > 0) {\r\n                            if (num.length === 0)\r\n                                t = 1;\r\n                            else\r\n                                t = parseInt(num, 10);\r\n                            for (p = 0; p < t; p++)\r\n                                out.push(cmd);\r\n                            cmd = '';\r\n                        }\r\n                        state = 1;\r\n                        num = c;\r\n                    }\r\n                    else if (c === '(') {\r\n                        state = 3;\r\n                        n = 0;\r\n                    }\r\n                    else if (c === '{') {\r\n                        state = 4;\r\n                        n = 0;\r\n                    }\r\n                    else if (c === '\\\\')\r\n                        state = 2;\r\n                    else\r\n                        cmd += c;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (cmd.length > 0) {\r\n            if (num.length === 0)\r\n                t = 1;\r\n            else\r\n                t = parseInt(num, 10);\r\n            for (p = 0; p < t; p++)\r\n                out.push(cmd);\r\n        }\r\n        if (replace && this._pathQueue.length) {\r\n            this._pathQueue[0] = {\r\n                id: str,\r\n                current: out,\r\n                previous: []\r\n            };\r\n        }\r\n        else\r\n            this._pathQueue.push({\r\n                id: str,\r\n                current: out,\r\n                previous: []\r\n            });\r\n        this.ExecutePath();\r\n        return null;\r\n    }\r\n\r\n    public ExecutePath() {\r\n        //if already running or no queue bail\r\n        if (this._pathTimeout || !this._pathQueue.length || this._pathPaused) return;\r\n        let delay = this.client.getOption('pathDelay');\r\n        if (delay < 0) delay = 0;\r\n        //being processing query\r\n        this._pathTimeout = setTimeout(() => {\r\n            const pPath = this.client.getOption('parseSpeedpaths');\r\n            const ePath = this.client.getOption('echoSpeedpaths');\r\n            let cnt = this.client.getOption('pathDelayCount');\r\n            if (cnt < 1) cnt = 1;\r\n            const current = this._pathQueue[0];\r\n            /*\r\n            if (!current.previous.length) {\r\n                if (this.client.telnet.echo && this.client.getOption('commandEcho'))\r\n                    this.client.echo(this.client.getOption('speedpathsChar') + current.id);\r\n                else\r\n                    this.client.echo('\\n');\r\n            }\r\n            */\r\n            while (cnt--) {\r\n                let cmd = current.current.shift();\r\n                current.previous.push(cmd);\r\n                if (pPath)\r\n                    this.client.sendBackground(cmd + '\\n', !ePath);\r\n                else\r\n                    this.client.send(cmd + '\\n', !ePath);\r\n                if (!current.current.length) break;\r\n            }\r\n            //if at the end remove\r\n            if (!current.current.length)\r\n                this._pathQueue.shift();\r\n            this._pathTimeout = null;\r\n            //step manually so do not call next block, allows commands to handle steeping instead of auto moving to next one\r\n            if (this._pathQueue.length && this._pathQueue[0].manual)\r\n                return;\r\n            //process next paths\r\n            this.ExecutePath();\r\n        }, delay);\r\n    }\r\n\r\n    public toggleScrollLock() {\r\n        this.scrollLock = !this.scrollLock;\r\n    }\r\n\r\n    private hasTriggerType(types: TriggerTypes | SubTriggerTypes, type: TriggerType | SubTriggerTypes): boolean {\r\n        if (type === TriggerType.Alarm && (types & TriggerTypes.Alarm) == TriggerTypes.Alarm)\r\n            return true;\r\n        if (type === TriggerType.CommandInputPattern && (types & TriggerTypes.CommandInputPattern) == TriggerTypes.CommandInputPattern)\r\n            return true;\r\n        if (type === TriggerType.CommandInputRegular && (types & TriggerTypes.CommandInputRegular) == TriggerTypes.CommandInputRegular)\r\n            return true;\r\n        if (type === TriggerType.Event && (types & TriggerTypes.Event) == TriggerTypes.Event)\r\n            return true;\r\n        if (type === TriggerType.Pattern && (types & TriggerTypes.Pattern) == TriggerTypes.Pattern)\r\n            return true;\r\n        if (type === TriggerType.Regular && (types & TriggerTypes.Regular) == TriggerTypes.Regular)\r\n            return true;\r\n        if (type === TriggerType.LoopExpression && (types & TriggerTypes.LoopExpression) == TriggerTypes.LoopExpression)\r\n            return true;\r\n        //if (type === TriggerType.Expression && (types & TriggerTypes.Expression) == TriggerTypes.Expression)\r\n        //return true;            \r\n        return false;\r\n    }\r\n\r\n    private isSubTriggerType(type) {\r\n        if ((type & SubTriggerTypes.Skip) == SubTriggerTypes.Skip)\r\n            return true;\r\n        if ((type & SubTriggerTypes.Wait) == SubTriggerTypes.Wait)\r\n            return true;\r\n        if ((type & SubTriggerTypes.LoopPattern) == SubTriggerTypes.LoopPattern)\r\n            return true;\r\n        if ((type & SubTriggerTypes.LoopLines) == SubTriggerTypes.LoopLines)\r\n            return true;\r\n        if ((type & SubTriggerTypes.Duration) == SubTriggerTypes.Duration)\r\n            return true;\r\n        if ((type & SubTriggerTypes.WithinLines) == SubTriggerTypes.WithinLines)\r\n            return true;\r\n        if ((type & SubTriggerTypes.Manual) == SubTriggerTypes.Manual)\r\n            return true;\r\n        if ((type & SubTriggerTypes.ReParse) == SubTriggerTypes.ReParse)\r\n            return true;\r\n        if ((type & SubTriggerTypes.ReParsePattern) == SubTriggerTypes.ReParsePattern)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    private getTriggerType(type: TriggerType | SubTriggerTypes) {\r\n        if (type === TriggerType.Regular)\r\n            return TriggerTypes.Regular;\r\n        if (type === TriggerType.Alarm)\r\n            return TriggerTypes.Alarm;\r\n        return type;\r\n    }\r\n\r\n    public ExecuteTriggers(type: TriggerTypes, line?, raw?, frag?: boolean, ret?: boolean, subtypes?: boolean) {\r\n        if (!this.enableTriggers || line == null) return line;\r\n        if (ret == null) ret = false;\r\n        if (frag == null) frag = false;\r\n        //make sure raw is set\r\n        raw = raw || line;\r\n        this.buildTriggerCache();\r\n        let t = 0;\r\n        let pattern;\r\n        let changed = false;\r\n        let val;\r\n        //scope to get performance\r\n        const triggers = this._TriggerCache;\r\n        const tl = triggers.length;\r\n        const states = this._TriggerStates;\r\n        const rCache = this._TriggerRegExCache;\r\n        let tType;\r\n        for (; t < tl; t++) {\r\n            let trigger = triggers[t];\r\n            const parent = trigger;\r\n            //extra check in case error disabled it and do not want to keep triggering the error\r\n            if (!trigger.enabled) continue;\r\n            //safety check in case a state was deleted\r\n            if (!parent.triggers || !parent.triggers.length || trigger.state > parent.triggers.length)\r\n                parent.state = 0;\r\n            if (trigger.state !== 0 && parent.triggers && parent.triggers.length) {\r\n                //trigger states are 1 based as 0 is parent trigger\r\n                trigger = parent.triggers[trigger.state - 1];\r\n                //skip disabled states\r\n                while (!trigger.enabled && parent.state !== 0) {\r\n                    //advance state\r\n                    parent.state++;\r\n                    //if no more states start over and stop\r\n                    if (parent.state > parent.triggers.length) {\r\n                        parent.state = 0;\r\n                        //reset to first state\r\n                        trigger = parent;\r\n                        //stop checking\r\n                        break;\r\n                    }\r\n                    if (parent.state)\r\n                        trigger = parent.triggers[parent.state - 1];\r\n                    else\r\n                        trigger = parent;\r\n                    changed = true;\r\n                }\r\n                //changed state save\r\n                if (changed) {\r\n                    if (this.client.getOption('saveTriggerStateChanges'))\r\n                        this.client.saveProfiles();\r\n                    this.client.emit('item-updated', 'trigger', parent.profile.name, parent.profile.triggers.indexOf(parent), parent);\r\n                }\r\n                //last check to be 100% sure enabled\r\n                if (!trigger.enabled) continue;\r\n            }\r\n            tType = this.getTriggerType(trigger.type);\r\n            if (trigger.type !== undefined && (type & tType) !== tType) {\r\n                if (!subtypes || (subtypes && !this.isSubTriggerType(trigger.type)))\r\n                    continue;\r\n            }\r\n            //manual can only be fired with #set\r\n            if (trigger.type === SubTriggerTypes.Manual) continue;\r\n            if (frag && !trigger.triggerPrompt) continue;\r\n            if (!frag && !trigger.triggerNewline && (trigger.triggerNewline !== undefined))\r\n                continue;\r\n            if (states[t]) {\r\n                if (states[t].type === SubTriggerTypes.Wait) {\r\n                    //time still has not passed\r\n                    if (states[t].time > Date.now())\r\n                        continue;\r\n                    delete states[t];\r\n                }\r\n                else if (states[t].type === SubTriggerTypes.Duration) {\r\n                    //trigger time has paused, delete it and advance\r\n                    if (states[t].time < Date.now()) {\r\n                        delete states[t];\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        //need to reparse as the state is no longer valid and the next state might be\r\n                        if (!states[t])\r\n                            states[t] = { reParse: true };\r\n                        else\r\n                            states[t].reParse = true;\r\n                        t = this.cleanUpTriggerState(t);\r\n                        continue;\r\n                    }\r\n                }\r\n                else if (states[t].type === SubTriggerTypes.Skip) {\r\n                    //skip until that many lines have passed\r\n                    if (states[t].lineCount > 0)\r\n                        continue;\r\n                    delete states[t];\r\n                }\r\n                else if (states[t].type === SubTriggerTypes.LoopLines) {\r\n                    //move on after line count\r\n                    if (states[t].lineCount < 1) {\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        //reparse as new state may be valid\r\n                        if (!states[t])\r\n                            states[t] = { reParse: true }\r\n                        else\r\n                            states[t].reParse = true;\r\n                        t = this.cleanUpTriggerState(t);\r\n                        continue;\r\n                    }\r\n                }\r\n                else if (states[t].type === SubTriggerTypes.WithinLines) {\r\n                    if (states[t].lineCount < 1) {\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        //reparse as new state may be valid\r\n                        if (!states[t])\r\n                            states[t] = { reParse: true }\r\n                        else\r\n                            states[t].reParse = true;\r\n                        t = this.cleanUpTriggerState(t);\r\n                        continue;\r\n                    }\r\n                }\r\n                /*\r\n                else if (states[t].type === TriggerType.LoopExpression) {\r\n                    //move on after line count\r\n                    if (states[t].loop != -1 && states[t].lineCount < 1) {\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        //reparse as new state may be valid\r\n                        if (!states[t])\r\n                            states[t] = { reParse: true }\r\n                        else\r\n                            states[t].reParse = true;\r\n                        t = this.cleanUpTriggerState(t);\r\n                        continue;\r\n                    }\r\n                }\r\n                */\r\n            }\r\n            try {\r\n                if (trigger.type === TriggerType.LoopExpression) {\r\n                    if (this.evaluate(this.parseInline(trigger.pattern))) {\r\n                        if (!states[t]) {\r\n                            const state = this.createTriggerState(trigger, false, parent);\r\n                            if (state)\r\n                                states[t] = state;\r\n                        }\r\n                        else if (states[t].loop !== -1 && states[t].lineCount < 1)\r\n                            continue;\r\n                        this._LastTriggered = (trigger.raw ? raw : line);\r\n                        val = this.ExecuteTrigger(trigger, [this._LastTriggered], ret, t, [this._LastTriggered], 0, parent);\r\n                    }\r\n                    else {\r\n                        //this.updateTriggerState(trigger, t);\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        continue;\r\n                    }\r\n                }\r\n                else if (trigger.verbatim) {\r\n                    if (!trigger.caseSensitive && (trigger.raw ? raw : line).toLowerCase() !== trigger.pattern.toLowerCase()) {\r\n                        //if reparse and if failed advance anyways\r\n                        if (!states[t] && (trigger.type === SubTriggerTypes.ReParse || trigger.type === SubTriggerTypes.ReParsePattern)) {\r\n                            this.advanceTrigger(trigger, parent, t);\r\n                            t = this.cleanUpTriggerState(t);\r\n                        }\r\n                        continue;\r\n                    }\r\n                    else if (trigger.caseSensitive && (trigger.raw ? raw : line) !== trigger.pattern) {\r\n                        //if reparse and if failed advance anyways\r\n                        if (!states[t] && (trigger.type === SubTriggerTypes.ReParse || trigger.type === SubTriggerTypes.ReParsePattern)) {\r\n                            this.advanceTrigger(trigger, parent, t);\r\n                            t = this.cleanUpTriggerState(t);\r\n                        }\r\n                        continue;\r\n                    }\r\n                    this._LastTriggered = (trigger.raw ? raw : line);\r\n                    val = this.ExecuteTrigger(trigger, [this._LastTriggered], ret, t, [this._LastTriggered], 0, parent);\r\n                }\r\n                else {\r\n                    let re;\r\n                    if (trigger.type === TriggerType.Pattern || trigger.type === TriggerType.CommandInputPattern || trigger.type === SubTriggerTypes.ReParsePattern)\r\n                        pattern = convertPattern(trigger.pattern, this.client);\r\n                    else\r\n                        pattern = trigger.pattern;\r\n                    if (trigger.caseSensitive)\r\n                        re = rCache['g' + pattern] || (rCache['g' + pattern] = new RegExp(pattern, 'gd'));\r\n                    else\r\n                        re = rCache['gi' + pattern] || (rCache['gi' + pattern] = new RegExp(pattern, 'gid'));\r\n                    //reset from last use always\r\n                    re.lastIndex = 0;\r\n                    const res = re.exec(trigger.raw ? raw : line);\r\n                    if (!res || !res.length) {\r\n                        //if reparse and if failed advance anyways\r\n                        if (!states[t] && (trigger.type === SubTriggerTypes.ReParse || trigger.type === SubTriggerTypes.ReParsePattern)) {\r\n                            this.advanceTrigger(trigger, parent, t);\r\n                            t = this.cleanUpTriggerState(t);\r\n                        }\r\n                        continue;\r\n                    }\r\n                    let args;\r\n                    this._LastTriggered = trigger.raw ? raw : line;\r\n                    if ((trigger.raw ? raw : line) === res[0] || !this.client.getOption('prependTriggeredLine'))\r\n                        args = res;\r\n                    else {\r\n                        args = [this._LastTriggered, ...res];\r\n                        args.indices = [[0, args[0].length], ...res.indices];\r\n                    }\r\n                    if (res.groups)\r\n                        Object.keys(res.groups).map(v => this.client.variables[v] = res.groups[v]);\r\n                    val = this.ExecuteTrigger(trigger, args, ret, t, [this._LastTriggered, re], res.groups, parent);\r\n                }\r\n                if (states[t] && states[t].reParse) {\r\n                    if (!states[t].type || states[t].type === SubTriggerTypes.ReParse || states[t].type === SubTriggerTypes.ReParsePattern)\r\n                        delete states[t];\r\n                    else\r\n                        delete states[t].reParse;\r\n                    t--;\r\n                }\r\n                else if (ret) return val;\r\n            }\r\n            catch (e) {\r\n                if (this.client.getOption('disableTriggerOnError')) {\r\n                    trigger.enabled = false;\r\n                    setTimeout(() => {\r\n                        this.client.saveProfiles();\r\n                        this.emit('item-updated', 'trigger', parent.profile, parent.profile.triggers.indexOf(parent), parent);\r\n                    });\r\n                }\r\n                if (this.client.getOption('showScriptErrors'))\r\n                    this.client.error(e);\r\n                else\r\n                    this.client.debug(e);\r\n            }\r\n        }\r\n        return line;\r\n    }\r\n\r\n    public TestTrigger(trigger, parent, t, line?, raw?, frag?: boolean) {\r\n        let val;\r\n        let pattern;\r\n        try {\r\n            if (trigger.verbatim) {\r\n                if (!trigger.caseSensitive && (trigger.raw ? raw : line).toLowerCase() !== trigger.pattern.toLowerCase()) {\r\n                    //if reparse and if failed advance anyways\r\n                    if (!this._TriggerStates[t]) {\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        t = this.cleanUpTriggerState(t);\r\n                    }\r\n                    return t;\r\n                }\r\n                else if (trigger.caseSensitive && (trigger.raw ? raw : line) !== trigger.pattern) {\r\n                    //if reparse and if failed advance anyways\r\n                    if (!this._TriggerStates[t]) {\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        t = this.cleanUpTriggerState(t);\r\n                    }\r\n                    return t;\r\n                }\r\n                this._LastTriggered = (trigger.raw ? raw : line);\r\n                val = this.ExecuteTrigger(trigger, [this._LastTriggered], false, t, [this._LastTriggered], 0, parent);\r\n            }\r\n            else {\r\n                let re;\r\n                if (trigger.type === TriggerType.Pattern || trigger.type === TriggerType.CommandInputPattern || trigger.type === SubTriggerTypes.ReParsePattern)\r\n                    pattern = convertPattern(trigger.pattern, this.client);\r\n                else\r\n                    pattern = trigger.pattern;\r\n                if (trigger.caseSensitive)\r\n                    re = this._TriggerRegExCache['g' + pattern] || (this._TriggerRegExCache['g' + pattern] = new RegExp(pattern, 'gd'));\r\n                else\r\n                    re = this._TriggerRegExCache['gi' + pattern] || (this._TriggerRegExCache['gi' + pattern] = new RegExp(pattern, 'gid'));\r\n                //reset from last use always\r\n                re.lastIndex = 0;\r\n                const res = re.exec(trigger.raw ? raw : line);\r\n                if (!res || !res.length) {\r\n                    //if reparse and if failed advance anyways\r\n                    if (!this._TriggerStates[t] && (trigger.type === SubTriggerTypes.ReParse || trigger.type === SubTriggerTypes.ReParsePattern)) {\r\n                        this.advanceTrigger(trigger, parent, t);\r\n                        t = this.cleanUpTriggerState(t);\r\n                    }\r\n                    return t;\r\n                }\r\n                let args;\r\n                this._LastTriggered = (trigger.raw ? raw : line);\r\n                if ((trigger.raw ? raw : line) === res[0] || !this.client.getOption('prependTriggeredLine'))\r\n                    args = res;\r\n                else {\r\n                    args = [this._LastTriggered, ...res];\r\n                    args.indices = [[0, args[0].length], ...res.indices];\r\n                }\r\n                if (res.groups)\r\n                    Object.keys(res.groups).map(v => this.client.variables[v] = res.groups[v]);\r\n                val = this.ExecuteTrigger(trigger, args, false, t, [this._LastTriggered, re], res.groups, parent);\r\n            }\r\n            t = this.cleanUpTriggerState(t);\r\n        }\r\n        catch (e) {\r\n            if (this.client.getOption('disableTriggerOnError')) {\r\n                trigger.enabled = false;\r\n                setTimeout(() => {\r\n                    this.client.saveProfiles();\r\n                    this.emit('item-updated', 'trigger', parent.profile, parent.profile.triggers.indexOf(parent), parent);\r\n                });\r\n            }\r\n            if (this.client.getOption('showScriptErrors'))\r\n                this.client.error(e);\r\n            else\r\n                this.client.debug(e);\r\n        }\r\n        return t;\r\n    }\r\n\r\n    public ExecuteTrigger(trigger, args, r: boolean, idx, regex?, named?, parent?: Trigger) {\r\n        if (r == null) r = false;\r\n        if (!trigger.enabled) return '';\r\n        if (this._TriggerStates[idx] && this._TriggerStates[idx].type === SubTriggerTypes.Duration)\r\n            delete this._TriggerStates[idx];\r\n        if (trigger.fired) {\r\n            trigger.fired = false;\r\n            this.advanceTrigger(trigger, parent, idx);\r\n            if (this._TriggerStates[idx])\r\n                this._TriggerStates[idx].reParse = true;\r\n            else\r\n                this._TriggerStates[idx] = { reParse: true };\r\n            return '';\r\n        }\r\n        this._LastTrigger = trigger;\r\n        let ret; // = '';\r\n        //remove temp and advance state before executing value in case it does a trigger on trigger to avoid double triggering\r\n        if (trigger.temp) {\r\n            if (parent.triggers.length) {\r\n                if (parent.state === 0) {\r\n                    //main trigger temp, replace with first state\r\n                    const item = parent.triggers.shift();\r\n                    item.triggers = parent.triggers;\r\n                    item.state = parent.state;\r\n                    item.name = parent.name;\r\n                    item.profile = parent.profile;\r\n                    //if removed temp shift state adjust\r\n                    if (item.state > item.triggers.length)\r\n                        item.state = 0;\r\n                    if (idx >= 0)\r\n                        this._TriggerCache[idx] = item;\r\n                    this.client.saveProfiles();\r\n                    const pIdx = parent.profile.triggers.indexOf(parent);\r\n                    parent.profile.triggers[pIdx] = item;\r\n                    this.client.emit('item-updated', 'trigger', parent.profile.name, pIdx, item);\r\n                }\r\n                else {\r\n                    //remove only temp sub state\r\n                    parent.triggers.splice(parent.state - 1, 1);\r\n                    //if removed temp shift state adjust\r\n                    if (parent.state > parent.triggers.length)\r\n                        parent.state = 0;\r\n                    this.client.saveProfiles();\r\n                    this.client.emit('item-updated', 'trigger', parent.profile.name, parent.profile.triggers.indexOf(parent), parent);\r\n                }\r\n            }\r\n            else {\r\n                if (idx >= 0)\r\n                    this._TriggerCache.splice(idx, 1);\r\n                if (this._TriggerStates[idx])\r\n                    this.clearTriggerState(idx);\r\n                this.client.removeTrigger(parent);\r\n            }\r\n        }\r\n        else if (parent.triggers.length)\r\n            this.advanceTrigger(trigger, parent, idx);\r\n        if ((this.client.getOption('echo') & 8) === 8)\r\n            this.client.echo('Trigger fired: ' + trigger.pattern, -7, -8, true, true);\r\n        if (trigger.value.length)\r\n            switch (trigger.style) {\r\n                case 1:\r\n                    this._stack.push({ loops: [], args: args, named: 0, used: 0, regex: regex });\r\n                    try {\r\n                        ret = this.parseOutgoing(trigger.value);\r\n                    }\r\n                    catch (e) {\r\n                        throw e;\r\n                    }\r\n                    finally {\r\n                        this._stack.pop();\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if ((this.client.getOption('echo') & 2) === 2)\r\n                        this.client.echo(trigger.value, -7, -8, true, true);\r\n                    //do not cache temp triggers\r\n                    if (trigger.temp) {\r\n                        ret = new Function('try { ' + trigger.value + '\\n} catch (e) { if(this.getOption(\\'showScriptErrors\\')) this.error(e);}');\r\n                        ret = ret.apply(this.client, args);\r\n                    }\r\n                    else {\r\n                        if (!this._TriggerFunctionCache[idx]) {\r\n                            if (named)\r\n                                ret = Object.keys(named).map(v => `let ${v} = this.variables[\"${v}\"];`).join('') + '\\n';\r\n                            else\r\n                                ret = '';\r\n                            /*jslint evil: true */\r\n                            this._TriggerFunctionCache[idx] = new Function('try { ' + ret + trigger.value + '\\n} catch (e) { if(this.getOption(\\'showScriptErrors\\')) this.error(e);}');\r\n                        }\r\n                        this._stack.push({ loops: [], args: args, named: 0, used: 0, regex: regex, indices: args.indices });\r\n                        try {\r\n                            ret = this._TriggerFunctionCache[idx].apply(this.client, args);\r\n                        }\r\n                        catch (e) {\r\n                            throw e;\r\n                        }\r\n                        finally {\r\n                            this._stack.pop();\r\n                        }\r\n                    }\r\n                    if (typeof ret === 'string')\r\n                        ret = this.parseOutgoing(ret);\r\n                    break;\r\n                default:\r\n                    ret = trigger.value;\r\n                    break;\r\n            }\r\n        if (ret == null || ret === undefined)\r\n            return null;\r\n        if (r)\r\n            return ret;\r\n        //Convert to string\r\n        if (typeof ret !== 'string')\r\n            ret = ret.toString();\r\n        if (ret.length === 0 && !this.client.getOption('returnNewlineOnEmptyValue'))\r\n            return null;\r\n        if (!ret.endsWith('\\n'))\r\n            ret += '\\n';\r\n        if (this.client.connected)\r\n            this.client.telnet.sendData(ret);\r\n        if (this.client.telnet.echo && this.client.getOption('commandEcho')) {\r\n            setTimeout(() => {\r\n                this.client.echo(ret);\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    private advanceTrigger(trigger, parent, idx) {\r\n        if (this._TriggerStates[idx]) {\r\n            if (this._TriggerStates[idx].type === SubTriggerTypes.LoopPattern) {\r\n                this._TriggerStates[idx].loop--;\r\n                //stay on this state until loop is done\r\n                if (this._TriggerStates[idx].loop > 0)\r\n                    return;\r\n                this.clearTriggerState(idx);\r\n            }\r\n            //match within the # of lines so clear state and move on\r\n            else if (this._TriggerStates[idx].type === SubTriggerTypes.LoopLines) {\r\n                //keep matching until loop is over\r\n                if (this._TriggerStates[idx].lineCount > 0)\r\n                    return;\r\n                this.clearTriggerState(idx);\r\n            }\r\n            else if (this._TriggerStates[idx].type === SubTriggerTypes.WithinLines)\r\n                this.clearTriggerState(idx);\r\n            else if (this._TriggerStates[idx].type === TriggerType.LoopExpression) {\r\n                //infinite until expression is false\r\n                if (this._TriggerStates[idx].loop === -1)\r\n                    return;\r\n                //else if uses a line count\r\n                if (this._TriggerStates[idx].lineCount > 0)\r\n                    return;\r\n            }\r\n        }\r\n        parent.state++;\r\n        //1 based\r\n        if (parent.state > parent.triggers.length)\r\n            parent.state = 0;\r\n        //changed state save\r\n        if (this.client.getOption('saveTriggerStateChanges'))\r\n            this.client.saveProfiles();\r\n        this.client.emit('item-updated', 'trigger', parent.profile.name, parent.profile.triggers.indexOf(parent), parent);\r\n        //is new subtype a reparse? if so reparse using current trigger instant\r\n        if (parent.state !== 0) {\r\n            const state = this.createTriggerState(parent.triggers[parent.state - 1]);\r\n            if (state)\r\n                this._TriggerStates[idx] = state;\r\n        }\r\n    }\r\n\r\n    public createTriggerState(trigger, reparse?, parent?) {\r\n        let params;\r\n        let state;\r\n        switch (trigger.type) {\r\n            case SubTriggerTypes.ReParse:\r\n            case SubTriggerTypes.ReParsePattern:\r\n                state = { reParse: true };\r\n                break;\r\n            case SubTriggerTypes.Duration:\r\n            case SubTriggerTypes.Wait:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 0;\r\n                }\r\n                else\r\n                    params = 0;\r\n                state = { time: Date.now() + params };\r\n                break;\r\n            case SubTriggerTypes.WithinLines:\r\n            case SubTriggerTypes.LoopLines:\r\n            case SubTriggerTypes.Skip:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 1;\r\n                }\r\n                else\r\n                    params = 1;\r\n                state = { lineCount: params + 1 };\r\n                break;\r\n            /*          \r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 1;\r\n                }\r\n                else\r\n                    params = 1;\r\n                state = { remoteCount: params + 1 };\r\n                break;\r\n            */\r\n            case SubTriggerTypes.LoopPattern:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 0;\r\n                }\r\n                else\r\n                    params = 0;\r\n                state = { loop: params };\r\n                break;\r\n            case TriggerType.LoopExpression:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 1;\r\n                    if (parent === trigger)\r\n                        state = { lineCount: params - 1 };\r\n                    else\r\n                        state = { lineCount: params };\r\n                }\r\n                else\r\n                    state = { loop: -1 };\r\n                break;\r\n        }\r\n        if (state)\r\n            state.type = trigger.type;\r\n        if (!state && reparse)\r\n            return { reParse: true };\r\n        else if (reparse)\r\n            state.reparse = true;\r\n        return state;\r\n    }\r\n\r\n    public updateTriggerState(trigger, idx) {\r\n        if (!this._TriggerStates[idx]) return;\r\n        let params;\r\n        switch (this._TriggerStates[idx].type) {\r\n            case SubTriggerTypes.Wait:\r\n            case SubTriggerTypes.Duration:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 0;\r\n                }\r\n                else\r\n                    params = 0;\r\n                this._TriggerStates[idx].time = Date.now() + params;\r\n                break;\r\n            case SubTriggerTypes.WithinLines:\r\n            case SubTriggerTypes.Skip:\r\n            case SubTriggerTypes.LoopLines:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 0;\r\n                }\r\n                else\r\n                    params = 0;\r\n                this._TriggerStates[idx].lineCount = params;\r\n                break;\r\n            /*\r\n                            params = trigger.params;\r\n                            if (params && params.length) {\r\n                                params = parseInt(params, 10);\r\n                                if (isNaN(params))\r\n                                    params = 0;\r\n                            }\r\n                            else\r\n                                params = 0;\r\n                            this._TriggerStates[idx].remoteCount = params;\r\n                            break;\r\n            */\r\n            case SubTriggerTypes.LoopPattern:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 0;\r\n                }\r\n                else\r\n                    params = 0;\r\n                this._TriggerStates[idx].loop = params;\r\n                break;\r\n            case TriggerType.LoopExpression:\r\n                params = trigger.params;\r\n                if (params && params.length) {\r\n                    params = parseInt(params, 10);\r\n                    if (isNaN(params))\r\n                        params = 1;\r\n                    this._TriggerStates[idx].lineCount = params + 1;\r\n                }\r\n                else\r\n                    this._TriggerStates[idx].loop = -1;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public getTriggerState(idx) {\r\n        return this._TriggerStates[idx];\r\n    }\r\n\r\n    public cleanUpTriggerState(idx) {\r\n        if (this._TriggerStates[idx] && this._TriggerStates[idx].reParse) {\r\n            //remove only if reparse type of no type defined, else remove just the rePrase flag\r\n            if (!this._TriggerStates[idx].type || this._TriggerStates[idx].type === SubTriggerTypes.ReParse || this._TriggerStates[idx].type === SubTriggerTypes.ReParsePattern)\r\n                delete this._TriggerStates[idx];\r\n            else\r\n                delete this._TriggerStates[idx].reParse;\r\n            if (idx < 0)\r\n                idx++;\r\n            else\r\n                idx--;\r\n        }\r\n        return idx;\r\n    }\r\n\r\n    public clearTriggerState(idx) {\r\n        delete this._TriggerStates[idx];\r\n    }\r\n\r\n    public setTriggerState(idx, data) {\r\n        this._TriggerStates[idx] = data;\r\n    }\r\n\r\n    public clearTriggerCache() { this._TriggerCache = null; this._TriggerStates = {}; this._TriggerFunctionCache = {}; this._TriggerRegExCache = {}; }\r\n\r\n    public resetTriggerState(idx, oldState, oldFire?) {\r\n        if (idx === -1) return;\r\n        if (idx < 0 || idx >= this._TriggerCache.length) return;\r\n        let trigger = this._TriggerCache[idx];\r\n        let oTrigger;\r\n        const parent = trigger;\r\n        let params;\r\n        let reParse = false;\r\n        if (parent.state !== 0)\r\n            trigger = parent.triggers[parent.state - 1];\r\n        if (oldState === 0)\r\n            oTrigger = parent;\r\n        else\r\n            oTrigger = parent.triggers[oldState - 1];\r\n        if (oldState === parent.state) {\r\n            if (this._TriggerStates[idx]) {\r\n                if (!trigger.fired)\r\n                    this.updateTriggerState(trigger, idx);\r\n                else\r\n                    this.clearTriggerState(idx);\r\n            }\r\n            else {\r\n                if (!trigger.fired)\r\n                    this.updateTriggerState(trigger, idx);\r\n            }\r\n        }\r\n        else {\r\n            if (this._TriggerStates[idx]) {\r\n                if (!this._TriggerStates[idx].type || (this._TriggerStates[idx].type !== SubTriggerTypes.ReParsePattern && this._TriggerStates[idx].type !== SubTriggerTypes.ReParse))\r\n                    reParse = this._TriggerStates[idx].reParse;\r\n            }\r\n            this.clearTriggerState(idx);\r\n            if (!trigger.fired) {\r\n                const state = this.createTriggerState(trigger, reParse);\r\n                if (state)\r\n                    this._TriggerStates[idx] = state;\r\n            }\r\n            else\r\n                this._TriggerStates[idx] = { reParse: true };\r\n        }\r\n    }\r\n\r\n    public buildTriggerCache() {\r\n        if (this._TriggerCache == null) {\r\n            this._TriggerCache = $.grep(this.client.triggers, (a) => {\r\n                if (a && a.enabled && a.triggers.length) {\r\n                    if (a.type !== TriggerType.Alarm) return true;\r\n                    //loop sub states if one is not alarm cache it for future\r\n                    for (let s = 0, sl = a.triggers.length; s < sl; s++)\r\n                        if (a.triggers[s].enabled && a.triggers[s].type !== TriggerType.Alarm)\r\n                            return true;\r\n                    return false;\r\n                }\r\n                return a.enabled && a.type !== TriggerType.Alarm;\r\n            });\r\n        }\r\n    }\r\n\r\n    public clearCaches() {\r\n        this._TriggerCache = null;\r\n        this._TriggerStates = {};\r\n        this._TriggerFunctionCache = {};\r\n        this._TriggerRegExCache = {};\r\n        this._gamepadCaches = null;\r\n        this._lastSuspend = -1;\r\n        this._MacroCache = {};\r\n    }\r\n\r\n    public triggerEvent(event: string, args?) {\r\n        if (!this.enableTriggers) return;\r\n        this.buildTriggerCache();\r\n        let t = 0;\r\n        if (!args)\r\n            args = [event];\r\n        else if (!Array.isArray(args))\r\n            args = [event, args];\r\n        else\r\n            args.unshift(event);\r\n        const tl = this._TriggerCache.length;\r\n        for (; t < tl; t++) {\r\n            let trigger = this._TriggerCache[t];\r\n            const parent = trigger;\r\n            let changed = false;\r\n            //in case it got disabled by something\r\n            if (!trigger.enabled) continue;\r\n            //safety check in case a state was deleted\r\n            if (trigger.state > parent.triggers.length)\r\n                trigger.state = 0;\r\n            if (trigger.state !== 0 && parent.triggers && parent.triggers.length) {\r\n                //trigger states are 1 based as 0 is parent trigger\r\n                trigger = parent.triggers[trigger.state - 1];\r\n                //skip disabled states\r\n                while (!trigger.enabled && parent.state !== 0) {\r\n                    //advance state\r\n                    parent.state++;\r\n                    //if no more states start over and stop\r\n                    if (parent.state > parent.triggers.length) {\r\n                        parent.state = 0;\r\n                        //reset to first state\r\n                        trigger = parent;\r\n                        //stop checking\r\n                        break;\r\n                    }\r\n                    if (parent.state)\r\n                        trigger = parent.triggers[parent.state - 1];\r\n                    else\r\n                        trigger = parent;\r\n                    changed = true;\r\n                }\r\n                //changed state save\r\n                if (changed) {\r\n                    if (this.client.getOption('saveTriggerStateChanges'))\r\n                        this.client.saveProfiles();\r\n                    this.client.emit('item-updated', 'trigger', parent.profile.name, parent.profile.triggers.indexOf(parent), parent);\r\n                }\r\n                //last check to be 100% sure enabled\r\n                if (!trigger.enabled) continue;\r\n            }\r\n            if (trigger.type === SubTriggerTypes.ReParse || trigger.type === SubTriggerTypes.ReParsePattern) {\r\n                const val = this.adjustLastLine(this.client.display.lines.length, true);\r\n                const line = this.client.display.lines[val];\r\n                t = this.TestTrigger(trigger, parent, t, line, this.client.display.lines[val].raw || line, val === this.client.display.lines.length - 1);\r\n                continue;\r\n            }\r\n            if (trigger.type !== TriggerType.Event) continue;\r\n            if (trigger.caseSensitive && event !== trigger.pattern) continue;\r\n            if (!trigger.caseSensitive && event.toLowerCase() !== trigger.pattern.toLowerCase()) continue;\r\n            this._LastTriggered = event;\r\n            this.ExecuteTrigger(trigger, args, false, t, 0, 0, parent);\r\n            t = this.cleanUpTriggerState(t);\r\n        }\r\n    }\r\n\r\n    public executeWait(text, delay: number, eAlias?: boolean, stacking?: boolean, append?: boolean, noFunctions?: boolean, noComments?: boolean) {\r\n        if (!text || text.length === 0) return;\r\n        const s = { loops: this.loops.splice(0), args: 0, named: 0, used: this.stack.used, append: this.stack.append };\r\n        if (this.stack.args)\r\n            s.args = this.stack.args.slice();\r\n        if (this.stack.named)\r\n            s.named = this.stack.named.slice();\r\n\r\n        if (delay < 0)\r\n            delay = 0;\r\n        setTimeout(() => {\r\n            this._stack.push(s);\r\n            let ret = this.parseOutgoing(text, eAlias, stacking, append, noFunctions, noComments);\r\n            this._stack.pop();\r\n            if (ret == null || typeof ret === 'undefined' || ret.length === 0) return;\r\n            if (!ret.endsWith('\\n'))\r\n                ret = ret + '\\n';\r\n            this.client.send(ret, true);\r\n        }, delay);\r\n    }\r\n\r\n    public buildScript(str: string) {\r\n        if (!str) return '';\r\n        let lines;\r\n        /*\r\n        if (this.client.getOption('commandStacking') && this.client.getOption('commandStackingChar') && this.client.getOption('commandStackingChar').length > 0)\r\n            lines = str.split(new RegExp('\\n|' + this.client.getOption('commandStackingChar')));\r\n        else\r\n            lines = str.split('\\n');\r\n        */\r\n        if (this.client.getOption('commandStacking') && this.client.getOption('commandStackingChar') && this.client.getOption('commandStackingChar').length > 0)\r\n            lines = str.splitQuote('\\n' + this.client.getOption('commandStackingChar'));\r\n        else\r\n            lines = str.splitQuote('\\n');\r\n        let l = 0;\r\n        const ll = lines.length;\r\n        const code = [];\r\n        const b = [];\r\n        const cmdChar = this.client.getOption('commandChar');\r\n        for (; l < ll; l++) {\r\n            if (lines[l].trim().startsWith(cmdChar + 'wait ')) {\r\n                code.push('setTimeout(()=> {');\r\n                b.unshift(parseInt(lines[l].trim().substr(5), 10) || 0);\r\n            }\r\n            else {\r\n                code.push('client.sendCommand(\\'');\r\n                code.push(lines[l]);\r\n                code.push('\\\\n\\');');\r\n            }\r\n        }\r\n        const bl = b.length;\r\n        for (l = 0; l < bl; l++) {\r\n            code.push('}, ');\r\n            code.push(b[l]);\r\n            code.push(');');\r\n        }\r\n        return code.join('');\r\n    }\r\n\r\n    public stripQuotes(str: string, force?: boolean, forceSingle?: boolean) {\r\n        if (!str || str.length === 0)\r\n            return str;\r\n        if (force || this.client.getOption('parseDoubleQuotes'))\r\n            str = str.replace(/^\\\"(.*)\\\"$/g, (v, e, w) => {\r\n                return e.replace(/\\\\\\\"/g, '\"');\r\n            });\r\n        if (forceSingle || this.client.getOption('parseSingleQuotes'))\r\n            str = str.replace(/^\\'(.*)\\'$/g, (v, e, w) => {\r\n                return e.replace(/\\\\\\'/g, '\\'');\r\n            });\r\n        return str;\r\n    }\r\n\r\n    public splitByQuotes(str: string, sep: string, force?: boolean, forceSingle?: boolean) {\r\n        let t = 0;\r\n        let e = 0;\r\n        if (!str || str.length === 0)\r\n            return [];\r\n        if (force || this.client.getOption('parseDoubleQuotes')) {\r\n            t |= 2;\r\n            e |= this.client.getOption('allowEscape') ? 2 : 0;\r\n        }\r\n        if (forceSingle || this.client.getOption('parseSingleQuotes')) {\r\n            t |= 1;\r\n            e |= this.client.getOption('allowEscape') ? 1 : 0;\r\n        }\r\n        return splitQuoted(str, sep, t, e, this.client.getOption('escapeChar'));\r\n    }\r\n\r\n    public createTrigger(pattern: string, commands: string, profile?: string | Profile, options?, name?: string, subTrigger?: boolean) {\r\n        let trigger;\r\n        let sTrigger;\r\n        let reload = true;\r\n        let isNew = false;\r\n        if (!pattern && !name)\r\n            throw new Error(`Trigger '${name || ''}' not found`);\r\n        if (!profile) {\r\n            const keys = this.client.profiles.keys;\r\n            let k = 0;\r\n            const kl = keys.length;\r\n            if (kl === 0)\r\n                return;\r\n            if (kl === 1) {\r\n                if (!this.client.profiles.items[keys[0]].enabled || !this.client.profiles.items[keys[0]].enableTriggers)\r\n                    throw Error('No enabled profiles found!');\r\n                profile = this.client.profiles.items[keys[0]];\r\n                if (subTrigger) {\r\n                    if (!name) {\r\n                        if (!this.client.profiles.items[keys[k]].triggers.length)\r\n                            throw new Error(`No triggers exist`);\r\n                        trigger = this.client.profiles.items[keys[k]].triggers[this.client.profiles.items[keys[k]].triggers.length - 1];\r\n                    }\r\n                    else\r\n                        trigger = this.client.profiles.items[keys[k]].findAny('triggers', { name: name, pattern: name });\r\n                }\r\n                else if (name !== null)\r\n                    trigger = this.client.profiles.items[keys[k]].find('triggers', 'name', name);\r\n                else\r\n                    trigger = this.client.profiles.items[keys[k]].find('triggers', 'pattern', pattern);\r\n            }\r\n            else {\r\n                for (; k < kl; k++) {\r\n                    if (!this.client.profiles.items[keys[k]].enabled || !this.client.profiles.items[keys[k]].enableTriggers || this.client.profiles.items[keys[k]].triggers.length === 0)\r\n                        continue;\r\n                    if (subTrigger) {\r\n                        if (!name) {\r\n                            if (!this.client.profiles.items[keys[k]].triggers.length)\r\n                                throw new Error(`No triggers exist`);\r\n                            trigger = this.client.profiles.items[keys[k]].triggers[this.client.profiles.items[keys[k]].triggers.length - 1];\r\n                        }\r\n                        else\r\n                            trigger = this.client.profiles.items[keys[k]].findAny('triggers', { name: name, pattern: name });\r\n                    }\r\n                    else if (name !== null)\r\n                        trigger = this.client.profiles.items[keys[k]].find('triggers', 'name', name);\r\n                    else\r\n                        trigger = this.client.profiles.items[keys[k]].find('triggers', 'pattern', pattern);\r\n                    if (trigger) {\r\n                        profile = this.client.profiles.items[keys[k]];\r\n                        break;\r\n                    }\r\n                }\r\n                if (!profile)\r\n                    profile = this.client.activeProfile;\r\n            }\r\n        }\r\n        else if (typeof profile === 'string') {\r\n            if (this.client.profiles.contains(profile.toLowerCase()))\r\n                profile = this.client.profiles.items[profile.toLowerCase()];\r\n            else\r\n                throw new Error('Profile not found: ' + profile);\r\n            if (subTrigger) {\r\n                if (!name) {\r\n                    if (!(<Profile>profile).triggers.length)\r\n                        throw new Error(`No triggers exist`);\r\n                    trigger = (<Profile>profile).triggers[(<Profile>profile).triggers.length - 1];\r\n                }\r\n                else\r\n                    trigger = (<Profile>profile).findAny('triggers', { name: name, pattern: name });\r\n            }\r\n            else if (name !== null)\r\n                trigger = (<Profile>profile).find('triggers', 'name', name);\r\n            else\r\n                trigger = (<Profile>profile).find('triggers', 'pattern', pattern);\r\n        }\r\n        if (subTrigger) {\r\n            if (!trigger)\r\n                throw new Error(`Trigger '${name || ''}' not found`);\r\n            sTrigger\r\n            sTrigger = new Trigger();\r\n            sTrigger.pattern = pattern;\r\n            reload = false;\r\n            if (pattern !== null)\r\n                sTrigger.pattern = pattern;\r\n            if (commands !== null)\r\n                sTrigger.value = commands;\r\n            if (options) {\r\n                if (options.cmd)\r\n                    sTrigger.type = TriggerType.CommandInputRegular;\r\n\r\n                if (options.pattern)\r\n                    sTrigger.type = TriggerType.Pattern;\r\n                if (options.regular)\r\n                    sTrigger.type = TriggerType.Regular;\r\n                if (options.alarm)\r\n                    sTrigger.type = TriggerType.Alarm;\r\n                if (options.event)\r\n                    sTrigger.type = TriggerType.Event;\r\n                if (options.cmdpattern)\r\n                    sTrigger.type = TriggerType.CommandInputPattern;\r\n                if (options.loopexpression)\r\n                    sTrigger.type = TriggerType.LoopExpression;\r\n                //if(options.expression)\r\n                //sTrigger.type = TriggerType.Expression;                    \r\n                if (options.reparse)\r\n                    sTrigger.type = SubTriggerTypes.ReParse;\r\n                if (options.reparsepattern)\r\n                    sTrigger.type = SubTriggerTypes.ReParsePattern;\r\n                if (options.manual)\r\n                    sTrigger.type = SubTriggerTypes.Manual;\r\n                if (options.skip)\r\n                    sTrigger.type = SubTriggerTypes.Skip;\r\n                if (options.looplines)\r\n                    sTrigger.type = SubTriggerTypes.LoopLines;\r\n                if (options.looppattern)\r\n                    sTrigger.type = SubTriggerTypes.LoopPattern;\r\n                if (options.wait)\r\n                    sTrigger.type = SubTriggerTypes.Wait;\r\n                if (options.duration)\r\n                    sTrigger.type = SubTriggerTypes.Duration;\r\n                if (options.withinlines)\r\n                    sTrigger.type = SubTriggerTypes.WithinLines;\r\n\r\n                if (options.prompt)\r\n                    sTrigger.triggerPrompt = true;\r\n                if (options.nocr)\r\n                    sTrigger.triggerNewline = false;\r\n                if (options.case)\r\n                    sTrigger.caseSensitive = true;\r\n                if (options.raw)\r\n                    sTrigger.raw = true;\r\n                if (options.verbatim)\r\n                    sTrigger.verbatim = true;\r\n                if (options.disable)\r\n                    sTrigger.enabled = false;\r\n                else if (options.enable)\r\n                    sTrigger.enabled = true;\r\n                if (options.temporary || options.temp)\r\n                    sTrigger.temp = true;\r\n                if (options.params)\r\n                    sTrigger.params = options.params;\r\n                if (options.type) {\r\n                    if (this.isTriggerType(options.type))\r\n                        sTrigger.type = this.convertTriggerType(options.type);\r\n                    else\r\n                        throw new Error('Invalid trigger type');\r\n                }\r\n            }\r\n            trigger.triggers.push(sTrigger);\r\n            this.client.echo('Trigger sub state added.', -7, -8, true, true);\r\n        }\r\n        else {\r\n            if (!trigger) {\r\n                if (!pattern)\r\n                    throw new Error(`Trigger '${name || ''}' not found`);\r\n                trigger = new Trigger();\r\n                trigger.name = name || '';\r\n                trigger.pattern = pattern;\r\n                (<Profile>profile).triggers.push(trigger);\r\n                this.client.echo('Trigger added.', -7, -8, true, true);\r\n                isNew = true;\r\n            }\r\n            else\r\n                this.client.echo('Trigger updated.', -7, -8, true, true);\r\n            if (pattern !== null)\r\n                trigger.pattern = pattern;\r\n            if (commands !== null)\r\n                trigger.value = commands;\r\n            if (options) {\r\n                if (options.cmd)\r\n                    trigger.type = TriggerType.CommandInputRegular;\r\n                if (options.pattern)\r\n                    trigger.type = TriggerType.Pattern;\r\n                if (options.regular)\r\n                    trigger.type = TriggerType.Regular;\r\n                if (options.alarm)\r\n                    trigger.type = TriggerType.Alarm;\r\n                if (options.event)\r\n                    trigger.type = TriggerType.Event;\r\n                if (options.cmdpattern)\r\n                    trigger.type = TriggerType.CommandInputPattern;\r\n                if (options.loopexpression)\r\n                    trigger.type = TriggerType.LoopExpression;\r\n                //if(options.expression)\r\n                //trigger.type = TriggerType.Expression;\r\n\r\n                if (options.prompt)\r\n                    trigger.triggerPrompt = true;\r\n                if (options.nocr)\r\n                    trigger.triggerNewline = false;\r\n                if (options.case)\r\n                    trigger.caseSensitive = true;\r\n                if (options.raw)\r\n                    trigger.raw = true;\r\n                if (options.verbatim)\r\n                    trigger.verbatim = true;\r\n                if (options.disable)\r\n                    trigger.enabled = false;\r\n                else if (options.enable)\r\n                    trigger.enabled = true;\r\n                if (options.temporary || options.temp)\r\n                    trigger.temp = true;\r\n                if (options.params)\r\n                    trigger.params = options.params;\r\n                if (options.type) {\r\n                    if (this.isTriggerType(options.type, TriggerTypeFilter.Main))\r\n                        trigger.type = this.convertTriggerType(options.type);\r\n                    else\r\n                        throw new Error('Invalid trigger type');\r\n                }\r\n                trigger.priority = options.priority;\r\n            }\r\n            else\r\n                trigger.priority = 0;\r\n        }\r\n        this.client.saveProfiles();\r\n        if (reload)\r\n            this.client.clearCache();\r\n        if (isNew)\r\n            this.emit('item-added', 'trigger', (<Profile>profile).name, trigger);\r\n        else\r\n            this.emit('item-updated', 'trigger', (<Profile>profile).name, (<Profile>profile).triggers.indexOf(trigger), trigger);\r\n        profile = null;\r\n    }\r\n\r\n    private isTriggerType(type, filter?: TriggerTypeFilter) {\r\n        if (!filter) filter = TriggerTypeFilter.All;\r\n        switch (type.replace(/ /g, '').toUpperCase()) {\r\n            case 'REGULAREXPRESSION':\r\n            case 'COMMANDINPUTREGULAREXPRESSION':\r\n                return (filter & TriggerTypeFilter.Main) === TriggerTypeFilter.Main ? true : false;\r\n            case '0':\r\n            case '1':\r\n            case '2':\r\n            case '3':\r\n            case '8':\r\n            case '16':\r\n            //case '64':\r\n            case '128':\r\n            case 'REGULAR':\r\n            case 'COMMANDINPUTREGULAR':\r\n            case 'EVENT':\r\n            case 'ALARM':\r\n            case 'COMMAND':\r\n            case 'COMMANDINPUTPATTERN':\r\n            case 'LOOPEXPRSSION':\r\n                //case 'EXPRESSION':\r\n                return (filter & TriggerTypeFilter.Main) === TriggerTypeFilter.Main ? true : false;\r\n            case 'SKIP':\r\n            case '512':\r\n            case 'WAIT':\r\n            case '1024':\r\n            case 'LOOPPATTERN':\r\n            case '4096':\r\n            case 'LOOPLINES':\r\n            case '8192':\r\n            case 'DURATION':\r\n            case '16384':\r\n            case 'WITHINLINES':\r\n            case '32768':\r\n            case 'MANUAL':\r\n            case '65536':\r\n            case 'REPARSE':\r\n            case '131072':\r\n            case 'REPARSEPATTERN':\r\n            case '262144':\r\n                return (filter & TriggerTypeFilter.Sub) === TriggerTypeFilter.Sub ? true : false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private convertTriggerType(type) {\r\n        switch (type.replace(/ /g, '').toUpperCase()) {\r\n            case 'REGULAREXPRESSION':\r\n                return TriggerType.Regular;\r\n            case 'COMMANDINPUTREGULAREXPRESSION':\r\n                return TriggerType.CommandInputRegular;\r\n            case '0':\r\n            case '1':\r\n            case '2':\r\n            case '3':\r\n            case '8':\r\n            case '16':\r\n            case '128':\r\n                //case '64':\r\n                return TriggerType[parseInt(type, 10)];\r\n            case 'REGULAR':\r\n            case 'COMMANDINPUTREGULAR':\r\n            case 'EVENT':\r\n            case 'ALARM':\r\n            case 'COMMAND':\r\n            case 'COMMANDINPUTPATTERN':\r\n            case 'LOOPEXPRSSION':\r\n                //case 'EXPRESSION':\r\n                return TriggerType[type];\r\n            case '512':\r\n            case '1024':\r\n            case '4096':\r\n            case '8192':\r\n            case '16384':\r\n            case '32768':\r\n            case '65536':\r\n            case '131072':\r\n            case '262144':\r\n                return SubTriggerTypes[parseInt(type, 10)];\r\n            case 'SKIP':\r\n            case 'WAIT':\r\n            case 'LOOPPATTERN':\r\n            case 'LOOPLINES':\r\n            case 'DURATION':\r\n            case 'WITHINLINES':\r\n            case 'MANUAL':\r\n            case 'REPARSE':\r\n            case 'REPARSEPATTERN':\r\n                return SubTriggerTypes[type];\r\n        }\r\n        throw new Error('Invalid trigger type');\r\n    }\r\n\r\n    private colorPosition(n: number, fore, back, item) {\r\n        n = this.adjustLastLine(n);\r\n        if (!item.hasOwnProperty('yStart'))\r\n            this.client.display.colorSubStringByLine(n, fore, back, item.xStart, item.hasOwnProperty('xEnd') && item.xEnd >= 0 ? item.xEnd : null);\r\n        else {\r\n            const xEnd = item.hasOwnProperty('xEnd') && item.xEnd >= 0 ? item.xEnd : null;\r\n            const xStart = item.xStart;\r\n            let line = n - item.yStart;\r\n            let end = n;\r\n            if (item.hasOwnProperty('yEnd'))\r\n                end = n - item.yEnd;\r\n            while (line <= end) {\r\n                this.client.display.colorSubStringByLine(line, fore, back, xStart, xEnd);\r\n                line++;\r\n            }\r\n        }\r\n    }\r\n}", "/**\r\n * A class to parse color values\r\n * @author Stoyan Stefanov <sstoo@gmail.com>\r\n * @link   http://www.phpied.com/rgb-color-parser-in-javascript/\r\n * @license Use it if you like it\r\n */\r\nexport function RGBColor(color_string)\r\n{\r\n    this.ok = false;\r\n\r\n    // strip any leading #\r\n    if (color_string.charAt(0) == '#') { // remove # if any\r\n        color_string = color_string.substr(1,6);\r\n    }\r\n\r\n    color_string = color_string.replace(/ /g,'');\r\n    color_string = color_string.toLowerCase();\r\n\r\n    // before getting into regexps, try simple matches\r\n    // and overwrite the input\r\n    var simple_colors = {\r\n        aliceblue: 'f0f8ff',\r\n        antiquewhite: 'faebd7',\r\n        aqua: '00ffff',\r\n        aquamarine: '7fffd4',\r\n        azure: 'f0ffff',\r\n        beige: 'f5f5dc',\r\n        bisque: 'ffe4c4',\r\n        black: '000000',\r\n        blanchedalmond: 'ffebcd',\r\n        blue: '0000ff',\r\n        blueviolet: '8a2be2',\r\n        brown: 'a52a2a',\r\n        burlywood: 'deb887',\r\n        cadetblue: '5f9ea0',\r\n        chartreuse: '7fff00',\r\n        chocolate: 'd2691e',\r\n        coral: 'ff7f50',\r\n        cornflowerblue: '6495ed',\r\n        cornsilk: 'fff8dc',\r\n        crimson: 'dc143c',\r\n        cyan: '00ffff',\r\n        darkblue: '00008b',\r\n        darkcyan: '008b8b',\r\n        darkgoldenrod: 'b8860b',\r\n        darkgray: 'a9a9a9',\r\n        darkgreen: '006400',\r\n        darkkhaki: 'bdb76b',\r\n        darkmagenta: '8b008b',\r\n        darkolivegreen: '556b2f',\r\n        darkorange: 'ff8c00',\r\n        darkorchid: '9932cc',\r\n        darkred: '8b0000',\r\n        darksalmon: 'e9967a',\r\n        darkseagreen: '8fbc8f',\r\n        darkslateblue: '483d8b',\r\n        darkslategray: '2f4f4f',\r\n        darkturquoise: '00ced1',\r\n        darkviolet: '9400d3',\r\n        deeppink: 'ff1493',\r\n        deepskyblue: '00bfff',\r\n        dimgray: '696969',\r\n        dodgerblue: '1e90ff',\r\n        feldspar: 'd19275',\r\n        firebrick: 'b22222',\r\n        floralwhite: 'fffaf0',\r\n        forestgreen: '228b22',\r\n        fuchsia: 'ff00ff',\r\n        gainsboro: 'dcdcdc',\r\n        ghostwhite: 'f8f8ff',\r\n        gold: 'ffd700',\r\n        goldenrod: 'daa520',\r\n        gray: '808080',\r\n        green: '008000',\r\n        greenyellow: 'adff2f',\r\n        honeydew: 'f0fff0',\r\n        hotpink: 'ff69b4',\r\n        indianred : 'cd5c5c',\r\n        indigo : '4b0082',\r\n        ivory: 'fffff0',\r\n        khaki: 'f0e68c',\r\n        lavender: 'e6e6fa',\r\n        lavenderblush: 'fff0f5',\r\n        lawngreen: '7cfc00',\r\n        lemonchiffon: 'fffacd',\r\n        lightblue: 'add8e6',\r\n        lightcoral: 'f08080',\r\n        lightcyan: 'e0ffff',\r\n        lightgoldenrodyellow: 'fafad2',\r\n        lightgrey: 'd3d3d3',\r\n        lightgreen: '90ee90',\r\n        lightpink: 'ffb6c1',\r\n        lightsalmon: 'ffa07a',\r\n        lightseagreen: '20b2aa',\r\n        lightskyblue: '87cefa',\r\n        lightslateblue: '8470ff',\r\n        lightslategray: '778899',\r\n        lightsteelblue: 'b0c4de',\r\n        lightyellow: 'ffffe0',\r\n        lime: '00ff00',\r\n        limegreen: '32cd32',\r\n        linen: 'faf0e6',\r\n        magenta: 'ff00ff',\r\n        maroon: '800000',\r\n        mediumaquamarine: '66cdaa',\r\n        mediumblue: '0000cd',\r\n        mediumorchid: 'ba55d3',\r\n        mediumpurple: '9370d8',\r\n        mediumseagreen: '3cb371',\r\n        mediumslateblue: '7b68ee',\r\n        mediumspringgreen: '00fa9a',\r\n        mediumturquoise: '48d1cc',\r\n        mediumvioletred: 'c71585',\r\n        midnightblue: '191970',\r\n        mintcream: 'f5fffa',\r\n        mistyrose: 'ffe4e1',\r\n        moccasin: 'ffe4b5',\r\n        navajowhite: 'ffdead',\r\n        navy: '000080',\r\n        oldlace: 'fdf5e6',\r\n        olive: '808000',\r\n        olivedrab: '6b8e23',\r\n        orange: 'ffa500',\r\n        orangered: 'ff4500',\r\n        orchid: 'da70d6',\r\n        palegoldenrod: 'eee8aa',\r\n        palegreen: '98fb98',\r\n        paleturquoise: 'afeeee',\r\n        palevioletred: 'd87093',\r\n        papayawhip: 'ffefd5',\r\n        peachpuff: 'ffdab9',\r\n        peru: 'cd853f',\r\n        pink: 'ffc0cb',\r\n        plum: 'dda0dd',\r\n        powderblue: 'b0e0e6',\r\n        purple: '800080',\r\n        red: 'ff0000',\r\n        rosybrown: 'bc8f8f',\r\n        royalblue: '4169e1',\r\n        saddlebrown: '8b4513',\r\n        salmon: 'fa8072',\r\n        sandybrown: 'f4a460',\r\n        seagreen: '2e8b57',\r\n        seashell: 'fff5ee',\r\n        sienna: 'a0522d',\r\n        silver: 'c0c0c0',\r\n        skyblue: '87ceeb',\r\n        slateblue: '6a5acd',\r\n        slategray: '708090',\r\n        snow: 'fffafa',\r\n        springgreen: '00ff7f',\r\n        steelblue: '4682b4',\r\n        tan: 'd2b48c',\r\n        teal: '008080',\r\n        thistle: 'd8bfd8',\r\n        tomato: 'ff6347',\r\n        turquoise: '40e0d0',\r\n        violet: 'ee82ee',\r\n        violetred: 'd02090',\r\n        wheat: 'f5deb3',\r\n        white: 'ffffff',\r\n        whitesmoke: 'f5f5f5',\r\n        yellow: 'ffff00',\r\n        yellowgreen: '9acd32'\r\n    };\r\n    for (var key in simple_colors) {\r\n        if (color_string == key) {\r\n            color_string = simple_colors[key];\r\n        }\r\n    }\r\n    // end of simple type-in colors\r\n\r\n    // array of color definition objects\r\n    var color_defs = [\r\n        {\r\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\r\n            process: function (bits){\r\n                return [\r\n                    parseInt(bits[1], 10),\r\n                    parseInt(bits[2], 10),\r\n                    parseInt(bits[3], 10)\r\n                ];\r\n            }\r\n        },\r\n        {\r\n            re: /^(\\w{2})(\\w{2})(\\w{2})$/,\r\n            example: ['#00ff00', '336699'],\r\n            process: function (bits){\r\n                return [\r\n                    parseInt(bits[1], 16),\r\n                    parseInt(bits[2], 16),\r\n                    parseInt(bits[3], 16)\r\n                ];\r\n            }\r\n        },\r\n        {\r\n            re: /^(\\w{1})(\\w{1})(\\w{1})$/,\r\n            example: ['#fb0', 'f0f'],\r\n            process: function (bits){\r\n                return [\r\n                    parseInt(bits[1] + bits[1], 16),\r\n                    parseInt(bits[2] + bits[2], 16),\r\n                    parseInt(bits[3] + bits[3], 16)\r\n                ];\r\n            }\r\n        }\r\n    ];\r\n\r\n    // search through the definitions to find a match\r\n    for (var i = 0, cl = color_defs.length; i < cl; i++) {\r\n        var re = color_defs[i].re;\r\n        var processor = color_defs[i].process;\r\n        var bits = re.exec(color_string);\r\n        if (bits) {\r\n            var channels = processor(bits);\r\n            this.r = channels[0];\r\n            this.g = channels[1];\r\n            this.b = channels[2];\r\n            this.ok = true;\r\n        }\r\n\r\n    }\r\n\r\n    // validate/cleanup values\r\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\r\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\r\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\r\n\r\n    // some getters\r\n    this.toRGB = function () {\r\n        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\r\n    };\r\n    this.toHex = function () {\r\n        var r = this.r.toString(16);\r\n        var g = this.g.toString(16);\r\n        var b = this.b.toString(16);\r\n        if (r.length == 1) r = '0' + r;\r\n        if (g.length == 1) g = '0' + g;\r\n        if (b.length == 1) b = '0' + b;\r\n        return '#' + r + g + b;\r\n    };\r\n\r\n    // help\r\n    /*\r\n    this.getHelpXML = function () {\r\n\r\n        var examples = [], i, l;\r\n        // add regexps\r\n        for (i = 0, l = color_defs.length; i < l; i++) {\r\n            var example = color_defs[i].example;\r\n            for (var j = 0, el = example.length; j < el; j++) {\r\n                examples[examples.length] = example[j];\r\n            }\r\n        }\r\n        // add type-in colors\r\n        for (var sc in simple_colors) {\r\n            examples[examples.length] = sc;\r\n        }\r\n\r\n        var xml = document.createElement('ul');\r\n        xml.setAttribute('id', 'rgbcolor-examples');\r\n        for (i = 0, el = examples.length; i < el; i++) {\r\n            try {\r\n                var list_item = document.createElement('li');\r\n                var list_color = new RGBColor(examples[i]);\r\n                var example_div = document.createElement('div');\r\n                example_div.style.cssText = 'margin: 3px;border: 1px solid black;background:' + list_color.toHex() + ';color:' + list_color.toHex();\r\n                example_div.appendChild(document.createTextNode('test'));\r\n                var list_item_value = document.createTextNode(' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex());\r\n                list_item.appendChild(example_div);\r\n                list_item.appendChild(list_item_value);\r\n                xml.appendChild(list_item);\r\n\r\n            } catch(e){}\r\n        }\r\n        return xml;\r\n\r\n    };\r\n    */\r\n\r\n}\r\n\r\n", "import { EventEmitter } from './events';\nimport { RGBColor } from './lib/rgbcolor';\nimport { ParserLine, FormatType, ParserOptions, FontStyle, LineFormat, LinkFormat, ImageFormat, Size } from './types';\nimport { stripQuotes, CharAllowedInURL, htmlDecode } from './library';\nimport { Display } from './display';\n\ninterface MXPBlock {\n    format: LineFormat | LinkFormat | ImageFormat;\n    text: string;\n}\n\n/**\n   * Enum for MXP tags.\n   * @readonly\n   * @enum {number}\n   * @typedef {number} MXPTag\n   */\nenum MXPTag {\n    None = 0,\n    B, BOLD, STRONG,\n    I, ITALIC, EM,\n    U, UNDERLINE,\n    S, STRIKEOUT, STRIKE,\n    C, COLOR, H, HIGH,\n    FONT, HR,\n    NOBR, P, BR, SBR,\n    A, SEND, EXPIRE,\n    VERSION, SUPPORT,\n    RESET, H1, H2, H3, H4, H5, H6,\n    V, VAR, USER, PASSWORD, Custom,\n    GAUGE, STAT\n}\n\n/**\n * MXP line tag types\n */\nenum lineType {\n    None = -1,\n    Open = 0,\n    Secure = 1,\n    Locked = 2,\n    Reset = 3,\n    TempSecure = 4,\n    LockOpen = 5,\n    LockSecure = 6,\n    LockLocked = 7,\n    RoomName = 10,\n    RoomDescription = 11,\n    RoomExits = 12,\n    WelcomeText = 19\n}\n\n/**\n * Enum for parser state.\n * @readonly\n * @enum {number}\n * @typedef {number} ParserState\n */\nenum ParserState {\n    None = 0,\n    Ansi = 1,\n    AnsiParams = 2,\n    XTermTitle = 3,\n    MXPTag = 4,\n    MXPTagQuoted = 5,\n    MXPTagDblQuoted = 6,\n    MXPEntity = 7,\n    MXPComment = 8,\n    MXPTagArg = 9,\n    URL = 10,\n    URLFound = 11,\n    MSPSound = 12,\n    MSPMusic = 13\n}\n\n/**\n   * Object to track current state of MXP\n   *\n   * @property {Boolean}  [on='']\t\t\t\t\t- MXP on for current block of process, determined based on line mode sent\n   * @property {Number}   [lineType=0]\t\t\t\t- Current line type, 0 to 99 based on MXP spec\n   * @property {Boolean}  [locked=false]\t\t\t- is the current line mode locked based on lineType\n   * @property {Boolean}  [paragraph=false]\t\t\t- is current block in a paragraph to ignore \\n\n   * @property {Boolean}  [noBreak=false]\t\t\t- Ignore the next \\n\n   * @property {Boolean}  [expanded=false]\t\t\t- element expanded so it knows to insert the new text before continuing to parse\n   * @property {Number}   [capture=0]\t\t\t\t- Capture any text processed while capture is one, supports nesting\n   * @property {Strung[]} [captured=[]]\t\t\t\t- Captured text buffers, an array of nested captures, as captures end the last one added is popped off, and capture is decreased by 1\n   * @property {Boolean}  [expanded=false]\t\t\t- line tag expanded\n   * @property {Boolean}  [gagged=false]\t\t\t- current block of text gagged from being displayed\n   */\nclass MXPState {\n    public on: boolean = false;\n    public lineType: (lineType | number) = 0;\n    public locked: boolean = false;\n    public paragraph: boolean = false;\n    public noBreak: boolean = false;\n    public expanded: boolean = false;\n    public lineExpanded: boolean = false;\n    public capture: number = 0;\n    public captured = [];\n    public gagged: boolean = false;\n}\n\n/**\n   * MXP Entity object\n   *\n   * @property {String}  [name='']\t\t\t\t\t- The name of the entity\n   * @property {String}  [value='']\t\t\t\t\t- The value of the entity\n   * @property {String}  [description='']\t\t- the description of the entity\n   * @property {Boolean} [publish=false]\t\t- Is the entity published to the public for users to access value\n   * @property {Boolean} [remote=false]\t\t\t- None standard, tells the parser where the entity is from for security reasons as local users should not be able to change server set entities\n   */\nclass Entity {\n    public name: string = '';\n    public value: string = '';\n    public description: string = '';\n    public publish: boolean = false;\n    public remote: boolean = false;\n    constructor(remote?: boolean) {\n        this.remote = remote == null ? false : remote;\n    }\n}\n\n/**\n * MXP Element object\n *\n * @property {String}  [name='']\t\t\t\t- The name of the element\n * @property {String}  [definition='']\t\t\t- The element definition to expand to\n * @property {String}  [closeDefinition='']\t\t- The close definition built from definition\n * @property {Object}  [attributes='']\t\t\t- Object to track attributes list\n * @property {Array}   [attributeIndexes=[]]\t- Array to link attributes to argument index\n * @property {Number}  [tag=-1]\t\t\t\t\t- Tag line, if set will present tagline codes to definition in format of <esc>[<tag>zDefinition\n * @property {String}  [flag='']\t\t\t\t- Element tag property, mostly client dependant, see MXP spec for full list of basic ones\n * @property {Boolean} [open=false]\t\t\t\t- Is this an open element that can be used on an open line type\n * @property {Boolean} [empty=false]\t\t\t- Is this an empty tag that doesn't have a CloseDefinition\n * @property {Boolean} [remote=false]\t\t\t- None standard, tells the parser where the entity is from for security reasons as local users should not be able to change server set elements\n * @property {Boolean} [gagged=false]\t\t\t- Is element gagged from display as a tag could cause a custom element to be processed but hidden\n */\nclass Element {\n    public name: string = '';\n    public definition: string = '';\n    public closeDefinition: string = '';\n    public attributes = {};\n    public attributeIndexes = [];\n    public tag: (lineType | number) = lineType.None;\n    public flag: string = '';\n    public open: boolean = false;\n    public empty: boolean = false;\n    public remote: boolean = false;\n    public gagged: boolean = false;\n    constructor(remote?: boolean) {\n        this.remote = remote == null ? false : remote;\n    }\n}\n\n/**\n * MXP Line Tag object\n *\n * @property {Number}  [index=-1]\t\t\t\t\t\t- The tag number (20-99) to change\n * @property {String}  [window='']\t\t\t\t\t- Specifies the name of a window to redirect the text to, unsupported\n * @property {Boolean} [gag=false]\t\t\t\t\t- Indicates that the text should be gagged from the main MUD window.\n * @property {String}  [fore='']\t\t\t\t\t\t- The text foreground color.\n * @property {String}  [back='']\t\t\t\t\t\t- The background color of the text.\n * @property {Boolean} [enabled=true]\t\t\t\t- Turn this tag on or off.\n * @property {Boolean} [remote=false]\t\t\t\t- None standard, tells the parser where the tag is from for security reasons as local users should not be able to change server set tag\n * @property {String}  [element='']\t\t\t\t\t- Was the tag created by an element, as it should use that elements def/closeDef\n * @property {String}  [definition='']\t\t\t- Was the tag supplied with its own colors, still link to element but these colors override any set by element\n * @property {String}  [closeDefinition='']\t- The close definition built from definition\n */\nclass Tag {\n    public index: (lineType | number) = lineType.None;\n    public window: string = '';\n    public gag: boolean = false;\n    public fore: string = '';\n    public back: string = '';\n    public enabled: boolean = true;\n    public remote: boolean = false;\n    public element: string = '';\n    public definition: string = '';\n    public closeDefinition: string = '';\n    constructor(index?: number, fore?: string, back?: string, remote?: boolean) {\n        if (index != null) this.index = index;\n        if (fore != null) this.fore = fore;\n        if (back != null) this.back = back;\n        if (remote != null) this.remote = remote;\n    }\n}\n\n/**\n * MXPStyle object, stores the current style for display block in a stack, new styles are build on prev and pushed on stack, as style are closed they are popped off\n  *\n * @property {MXPTag}    [tag=0]\t\t\t- The tag that applied this style\n * @property {String}    [custom='']\t\t- If tag is custom store its name to know the exact tag\n * @property {String}    [font='']\t\t\t- The font to apply to current display block\n * @property {String}    [fontSize='']\t    - The font size in any valid css format\n * @property {FontStyle} [style=_style]\t    - The fontStyle enum state, see fontStyle\n * @property {String}    [fore=_fore]\t\t- The foreground color, this overrides any ansi foreground set\n * @property {String}    [back=_back]\t\t- The background color, this overrides aay ansi background set\n * @property {Boolean}   [high=_high]\t\t- This will brighten what ever the current foreground color is by 50% even if it is an ansi set color\n * @property {Object}    [obj=null]\t\t\t- Store misc data that a tag may need for later processing\n */\nclass MXPStyle {\n    public tag: MXPTag = MXPTag.None;\n    public custom: string = '';\n    public font: string = null;\n    public fontSize: (string) = null;\n    public style: FontStyle = FontStyle.None;\n    public fore: string = '';\n    public back: string = '';\n    public high: boolean = false;\n    public obj: any = null;\n    public gagged: boolean = false;\n    public open: boolean = false;\n    public properties = null;\n    constructor(style?: FontStyle, fore?: string, back?: string, high?: boolean, open?: boolean) {\n        if (style != null) this.style = style;\n        if (fore != null) this.fore = fore;\n        if (back != null) this.back = back;\n        this.high = high || false;\n        this.open = open || false;\n    }\n\n}\n\n/**\n * An Ansi/MXP parser, requires requires the modules src/lib/rgbcolor for color processing and validation\n *\n * @author William\n * @copyright William 2013\n * @version 1.1\n * @requires module:src/lib/rgbcolor\n * @namespace Parser\n *\n * @todo WELCOME element - just tags text as welcome for redirection purposes, don't support redirection to other windows so don't worry about this\n * @todo <FRAME NAME ACTION(OPEN|CLOSE|REDIRECT) TITLE INTERNAL ALIGN(LEFT|RIGHT|BOTTOM|TOP) LEFT TOP WIDTH HEIGHT SCROLLING(yes|no) FLOATING>\n * @constructor\n *\n * @param {Object}\toptions\t\t\t\t\t\t\t\t\t\t\t\t\t- The options to start off with\n * @param {Boolean} [options.MXP=true]\t\t\t\t\t\t\t- Enable/disable MXP parsing\n * @param {Object}\toptions.window\t\t\t\t\t\t\t\t\t- The window view size, used for clearing screen and other ansi related systems\n * @param {Number}\t[options.window.height=0]\t\t\t\t- The window height in lines\n * @param {Number}\t[options.window.width=0]\t\t\t\t- The window width in characters\n * @param {Boolean} [options.flashing=false]\t\t\t\t- Enable/disable ansi blink\n *\n * @property {String}  [StyleVersion='']\t\t\t\t\t\t- The MXP cached version style set from the VERSION tag, used by a client to reply to a VERSION request\n * @property {Boolean} [displayControlCodes=false]\t- Display unreadable characters, code < 32 || 127\n * @property {Boolean} [emulateControlCodes=true]\t\t- Emulate control codes like escape, tabs, etc...\n * @property {Boolean} [EndOfLine=false]\t\t\t\t\t\t- Is the current parser state at end of line or on a fragment\n * @property {Number}  [textLength=0]\t\t\t\t\t\t\t\t- The current amount of text that has been parsed\n * @property {Boolean} [enableMXP=true]\t\t\t\t\t\t\t- Enable/disable MXP parsing\n * @property {Boolean} [enableMSP=true]\t\t\t\t\t\t\t- Enable/disable MSP parsing\n * @property {Boolean} window\t\t\t\t\t\t\t\t\t\t\t\t- The window size, used for clearing screen and other ansi related systems\n * @property {Number}  [options.window.height=0]\t\t- The window height in lines\n * @property {Number}  [options.window.width=0]\t\t\t- The window width in characters\n * @property {Boolean} [enableFlashing=false]\t\t\t\t- Enable/disable ansi blink\n * @property {Boolean} [emulateTerminal=false]\t\t\t- Enable/disable Terminal IBM/OEM (code page 437) extended characters, will convert them to the correct unicode character in an attempt to display like classic terminal\n */\nexport class Parser extends EventEmitter {\n\n    /** @private */\n    private parsing = [];\n    /** @private */\n    /* Web detection protocols that are just followed by a :*/\n    private protocols = [['m', 'a', 'i', 'l', 't', 'o'], ['s', 'k', 'y', 'p', 'e'], ['a', 'i', 'm'], ['c', 'a', 'l', 'l', 't', 'o'], ['g', 't', 'a', 'l', 'k'], ['i', 'm'], ['i', 't', 'm', 's'], ['m', 's', 'n', 'i', 'm'], ['t', 'e', 'l'], ['y', 'm', 's', 'g', 'r']];\n\n    /** @private */\n    private _ColorTable: string[] = null;\n    /** @private */\n    private _CurrentForeColor: (string | number) = 37;\n    /** @private */\n    private _CurrentBackColor: (string | number) = 40;\n    /** @private */\n    private _CurrentAttributes: FontStyle = FontStyle.None;\n    /** @private */\n    private _SplitBuffer: string = '';\n    /** @private */\n    private mxpState: MXPState = new MXPState();\n    /** @private */\n    private mxpStyles: MXPStyle[] = [];\n    /** @private */\n    private mxpEntities: any = {};\n    /** @private */\n    private mxpElements: any = {};\n    /** @private */\n    private mxpLines: Tag[] = [];\n    /** @private */\n    private iMXPDefaultMode: (lineType | number) = lineType.Open;\n\n    public displayControlCodes: boolean = false;\n    public emulateControlCodes: boolean = true;\n    public StyleVersion: string = '';\n    public EndOfLine: boolean = false;\n    public textLength: number = 0;\n    public rawLength: number = 0;\n    public enableMXP: boolean = true;\n    public DefaultImgUrl: string = '';\n    public enableDebug: boolean = false;\n    public showInvalidMXPTags: boolean = false;\n    public enableLinks: boolean = true;\n    public enableMSP: boolean = true;\n    public enableURLDetection: boolean = true;\n    public window: Size = new Size(0, 0);\n    public enableFlashing: boolean = false;\n    public emulateTerminal: boolean = false;\n    public enableBell: boolean = true;\n    public display: Display = null;\n    public tabWidth: number = 8;\n\n    public busy = false;\n\n    constructor(options?: ParserOptions) {\n        super();\n        if (options != null) {\n            if (options.DefaultImageURL)\n                this.DefaultImgUrl = options.DefaultImageURL;\n            if (options.enableMXP != null)\n                this.enableMXP = options.enableMXP;\n            if (options.enableDebug != null)\n                this.enableDebug = options.enableDebug;\n            if (options.showInvalidMXPTags != null)\n                this.showInvalidMXPTags = options.showInvalidMXPTags;\n\n            if (options.enableMSP != null)\n                this.enableMSP = options.enableMSP;\n            if (options.enableURLDetection != null)\n                this.enableURLDetection = options.enableURLDetection;\n            if (options.window != null)\n                this.window = options.window;\n            if (options.enableFlashing != null)\n                this.enableFlashing = options.enableFlashing;\n            if (options.emulateTerminal != null)\n                this.emulateTerminal = options.emulateTerminal;\n            if (options.enableBell != null)\n                this.enableBell = options.enableBell;\n            if (options.display != null)\n                this.display = options.display;\n            if (options.enableLinks)\n                this.enableLinks = options.enableLinks;\n        }\n    }\n\n    private getColors(mxp?: MXPStyle) {\n        if (typeof mxp === 'undefined')\n            mxp = this.GetCurrentStyle();\n        let f: (string | number);\n        let b: (string | number);\n        let fc: number = -1;\n        let bc: number = -1;\n\n        if (mxp.fore.length > 0) {\n            if ((this._CurrentAttributes & FontStyle.Bold) === FontStyle.Bold)\n                f = this.IncreaseColor(mxp.fore, 0.5);\n            else if ((this._CurrentAttributes & FontStyle.Faint) === FontStyle.Faint)\n                f = this.DecreaseColor(mxp.fore, 0.5);\n            else\n                f = mxp.fore;\n        }\n        else if (typeof this._CurrentForeColor === 'string')\n            f = 'rgb(' + this._CurrentForeColor.replace(/;/g, ',') + ')';\n        else {\n            f = this._CurrentForeColor;\n            if ((this._CurrentAttributes & FontStyle.Bold) === FontStyle.Bold) {\n                if (f > 999)\n                    f /= 1000;\n                if (f >= 0 && f < 99)\n                    f *= 10;\n                fc = f;\n                if (f <= -16)\n                    f = this.IncreaseColor(this.GetColor(f), 0.5);\n            }\n            else if ((this._CurrentAttributes & FontStyle.Faint) === FontStyle.Faint) {\n                if (f > 99 && f < 999)\n                    f /= 10;\n                if (f >= 0 && f < 999)\n                    f *= 100;\n                fc = f;\n                if (f <= -16)\n                    f = this.DecreaseColor(this.GetColor(f), 0.15);\n            }\n            else {\n                fc = f;\n            }\n        }\n\n        if (mxp.high) {\n            if (typeof f === 'number')\n                f = this.IncreaseColor(this.GetColor(f), 0.25);\n            else\n                f = this.IncreaseColor(f, 0.25);\n        }\n\n        if (mxp.back.length > 0)\n            b = mxp.back;\n        else if (typeof this._CurrentBackColor === 'string')\n            b = 'rgb(' + this._CurrentBackColor.replace(/;/g, ',') + ')';\n        else\n            b = bc = this._CurrentBackColor;\n\n        if ((this._CurrentAttributes & FontStyle.Inverse) === FontStyle.Inverse || (mxp.style & FontStyle.Inverse) === FontStyle.Inverse)\n            return { fore: b, back: f, foreCode: bc, backCode: fc };\n        return { fore: f, back: b, foreCode: fc, backCode: bc };\n    }\n\n    private getFormatBlock(offset) {\n        const mxp: MXPStyle = this.GetCurrentStyle();\n        const colors = this.getColors(mxp);\n        return {\n            formatType: FormatType.Normal,\n            offset: offset,\n            color: colors.fore || 0,\n            background: colors.back || 0,\n            size: mxp.fontSize || 0,\n            font: mxp.font || 0,\n            style: mxp.style | (this._CurrentAttributes & ~FontStyle.Bold),\n            unicode: false\n        };\n    }\n\n    private ResetColors() {\n        this._CurrentForeColor = 37;\n        this._CurrentBackColor = 40;\n        this._CurrentAttributes = FontStyle.None;\n    }\n\n    private ProcessAnsiColorParams(params: string[]) {\n        let p: number = 0;\n        const pl: number = params.length;\n        let i: number;\n        let rgb: string;\n        for (; p < pl; p++) {\n            i = +params[p] || 0;\n            switch (i) {\n                case 0: //Reset/None\n                    this.ResetColors();\n                    break;\n                case 1: //Bold\n                    this._CurrentAttributes |= FontStyle.Bold;\n                    //can only be bold or faint not both, so when you turn on bold turn off faint\n                    this._CurrentAttributes &= ~FontStyle.Faint;\n                    break;\n                case 2: //Faint\n                    this._CurrentAttributes |= FontStyle.Faint;\n                    //can only be bold or faint not both, so when you turn on faint turn off bold\n                    this._CurrentAttributes &= ~FontStyle.Bold;\n                    break;\n                case 3: //Italics\n                    this._CurrentAttributes |= FontStyle.Italic;\n                    break;\n                case 4: //Underscore\n                    this._CurrentAttributes |= FontStyle.Underline;\n                    //this._CurrentAttributes &= ~FontStyle.DoubleUnderline;\n                    break;\n                case 5: //Blink < 150 per min\n                    this._CurrentAttributes |= FontStyle.Slow;\n                    break;\n                case 6: //Blink Rapid >= 150 per min\n                    this._CurrentAttributes |= FontStyle.Rapid;\n                    break;\n                case 7: //Reverse\n                    this._CurrentAttributes |= FontStyle.Inverse;\n                    break;\n                case 8: //hidden / Concealed\n                    this._CurrentAttributes |= FontStyle.Hidden;\n                    break;\n                case 9: //strike through on\n                    this._CurrentAttributes |= FontStyle.Strikeout;\n                    break;\n                /*\n                10 primary(default) font\n                11 first alternative font\n                12 second alternative font\n                13 third alternative font\n                14 fourth alternative font\n                15 fifth alternative font\n                16 sixth alternative font\n                17 seventh alternative font\n                18 eighth alternative font\n                19 ninth alternative font\n                20 Fraktur(Gothic)\n                */\n                case 21:\n                    this._CurrentAttributes |= FontStyle.DoubleUnderline;\n                    //this._CurrentAttributes &= ~FontStyle.Underline;\n                    break;\n                case 22: //bold off\n                    this._CurrentAttributes &= ~FontStyle.Bold;\n                    this._CurrentAttributes &= ~FontStyle.Faint;\n                    break;\n                case 23: //italics off\n                    this._CurrentAttributes &= ~FontStyle.Italic;\n                    break;\n                case 24: //underline off\n                    this._CurrentAttributes &= ~FontStyle.Underline;\n                    this._CurrentAttributes &= ~FontStyle.DoubleUnderline;\n                    break;\n                case 25:\n                    this._CurrentAttributes &= ~FontStyle.Slow;\n                    break;\n                case 26:\n                    this._CurrentAttributes &= ~FontStyle.Rapid;\n                    break;\n                case 27: //inverse off\n                    this._CurrentAttributes &= ~FontStyle.Inverse;\n                    break;\n                case 28: //visible / concealed off\n                    this._CurrentAttributes &= ~FontStyle.Hidden;\n                    break;\n                case 29: //strike through off\n                    this._CurrentAttributes &= ~FontStyle.Strikeout;\n                    break;\n                case -11: //error color\n                case -7: //info color\n                case -3: //local echo\n                case 30: //set foreground color to black\n                case 31: //set foreground color to red\n                case 32: //set foreground color to green\n                case 33:  //set foreground color to yellow\n                case 34: //set foreground color to blue\n                case 35:  //set foreground color to magenta (purple)\n                case 36:  //set foreground color to cyan\n                case 37:  //set foreground color to white\n                    this._CurrentForeColor = i;\n                    break;\n                case 38:\n                    if (p + 2 < pl && params[p + 1] === '5') {\n                        this._CurrentForeColor = +params[p + 2];\n                        if (isNaN(this._CurrentForeColor))\n                            this._CurrentForeColor = 37;\n                        else {\n                            this._CurrentForeColor += 16;\n                            this._CurrentForeColor *= -1;\n                        }\n                        p += 2;\n                    }\n                    else if (p + 4 < pl && params[p + 1] === '2') {\n                        i = +params[p + 2] || 0;\n                        if (i < 0 || i > 255)\n                            continue;\n                        rgb = i + ';';\n                        i = +params[p + 3] || 0;\n                        if (i < 0 || i > 255)\n                            continue;\n                        rgb += i + ';';\n                        i = +params[p + 4] || 0;\n                        if (i < 0 || i > 255)\n                            continue;\n                        rgb += i;\n                        this._CurrentForeColor = rgb;\n                        p += 4;\n                    }\n                    break;\n                case 39: //set foreground color to default)\n                    this._CurrentForeColor = -1;\n                    break;\n                case -12: //error color\n                case -8:\n                case -4:\n                case 40:\n                case 41:\n                case 42:\n                case 43:\n                case 44:\n                case 45:\n                case 46:\n                case 47:\n                    this._CurrentBackColor = i;\n                    break;\n                case 48:\n                    if (p + 2 < pl && params[p + 1] === '5') {\n                        this._CurrentBackColor = +params[p + 2];\n                        if (isNaN(this._CurrentBackColor))\n                            this._CurrentBackColor = 40;\n                        else {\n                            this._CurrentBackColor += 16;\n                            this._CurrentBackColor *= -1; //prevent overlap of protocols in color grabbing code\n                        }\n                        p += 2;\n                    }\n                    else if (p + 4 < pl && params[p + 1] === '2') {\n                        i = +params[p + 2] || 0;\n                        if (i < 0 || i > 255)\n                            continue;\n                        rgb = i + ';';\n                        i = +params[p + 3] || 0;\n                        if (i < 0 || i > 255)\n                            continue;\n                        rgb += i + ';';\n                        i = +params[p + 4] || 0;\n                        if (i < 0 || i > 255)\n                            continue;\n                        rgb += i;\n                        this._CurrentBackColor = rgb;\n                        p += 4;\n                    }\n                    break;\n                case 49:\n                    this._CurrentBackColor = -2;\n                    break;\n                //zMUD log colors, seems zMUD uses the 50s for display info for bold colors, standards use it to control borders and other effects\n                //don't need zMUD colors here as we never need to open fonts, replace with the frames/overlined/etc... if it can be done in css\n                case 53: //Overlined believe this draws a line above text, opposite of underline\n                    this._CurrentAttributes |= FontStyle.Overline;\n                    break;\n                case 55: //Not overlined, turns off overlined\n                    this._CurrentAttributes &= ~FontStyle.Overline;\n                    break;\n                case 50: //Reserved\n                case 51: //Framed believe this adds a border all the way around block of text\n                case 52: //Encircled, not sure maybe draws a circle around text?\n                case 54: //Not framed or encircled, turns off framed/encircled\n                case 56: //Reserved\n                case 57: //Reserved\n                case 58: //Reserved\n                case 59: //Reserved\n                    this._CurrentForeColor = i - 20;\n                    this._CurrentAttributes |= FontStyle.Bold; //make bold\n                    break;\n                //xterm 16 but color\n                //Assume that xterm?s resources are set so that the ISO color codes are the first 8 of a set of 16.\n                //Then the aixterm colors are the bright versions of the ISO colors:\n                case 90:\n                case 91:\n                case 92:\n                case 93:\n                case 94:\n                case 95:\n                case 96:\n                case 97:\n                    this._CurrentForeColor = i;\n                    break;\n                case 100:\n                case 101:\n                case 102:\n                case 103:\n                case 104:\n                case 105:\n                case 106:\n                case 107:\n                    this._CurrentBackColor = i;\n                    break;\n            }\n        }\n    }\n\n    private buildColorTable() {\n        const _ColorTable: string[] = [];\n        let r;\n        let g;\n        let b;\n        let idx;\n        for (r = 0; r < 6; r++) {\n            for (g = 0; g < 6; g++) {\n                for (b = 0; b < 6; b++) {\n                    idx = 16 + (r * 36) + (g * 6) + b;\n                    _ColorTable[idx] = 'rgb(';\n                    if (r > 0)\n                        _ColorTable[idx] += r * 40 + 55;\n                    else\n                        _ColorTable[idx] += '0';\n                    _ColorTable[idx] += ',';\n                    if (g > 0)\n                        _ColorTable[idx] += g * 40 + 55;\n                    else\n                        _ColorTable[idx] += '0';\n                    _ColorTable[idx] += ',';\n                    if (b > 0)\n                        _ColorTable[idx] += b * 40 + 55;\n                    else\n                        _ColorTable[idx] += '0';\n                    _ColorTable[idx] += ')';\n                }\n            }\n        }\n        for (r = 232; r <= 255; r++)//grayscale\n        {\n            g = (r - 232) * 10 + 8;\n            _ColorTable[r] = ['rgb(', g, ',', g, ',', g, ')'].join('');\n        }\n        _ColorTable[0] = 'rgb(0,0,0)'; //black fore\n        _ColorTable[1] = 'rgb(128, 0, 0)'; //red fore\n        _ColorTable[2] = 'rgb(0, 128, 0)'; //green fore\n        _ColorTable[3] = 'rgb(128, 128, 0)'; //yellow fore\n        _ColorTable[4] = 'rgb(0, 0, 238)'; //blue fore\n        _ColorTable[5] = 'rgb(128, 0, 128)'; //magenta fore\n        _ColorTable[6] = 'rgb(0, 128, 128)'; //cyan fore\n        _ColorTable[7] = 'rgb(187, 187, 187)'; //white fore\n        _ColorTable[8] = 'rgb(128, 128, 128)'; //black  bold\n        _ColorTable[9] = 'rgb(255, 0, 0)'; //Red bold\n        _ColorTable[10] = 'rgb(0, 255, 0)'; //green bold\n        _ColorTable[11] = 'rgb(255, 255, 0)'; //yellow bold\n        _ColorTable[12] = 'rgb(92, 92, 255)'; //blue bold\n        _ColorTable[13] = 'rgb(255, 0, 255)'; //magenta bold\n        _ColorTable[14] = 'rgb(0, 255, 255)'; //cyan bold\n        _ColorTable[15] = 'rgb(255, 255, 255)'; //white bold\n        _ColorTable[256] = 'rgb(0, 0, 0)'; //black faint\n        _ColorTable[257] = 'rgb(118, 0, 0)'; //red  faint\n        _ColorTable[258] = 'rgb(0, 108, 0)'; //green faint\n        _ColorTable[259] = 'rgb(145, 136, 0)'; //yellow faint\n        _ColorTable[260] = 'rgb(0, 0, 167)'; //blue faint\n        _ColorTable[261] = 'rgb(108, 0, 108)'; //magenta faint\n        _ColorTable[262] = 'rgb(0, 108, 108)'; //cyan faint\n        _ColorTable[263] = 'rgb(161, 161, 161)'; //white faint\n        _ColorTable[264] = 'rgb(0, 0, 0)'; //BackgroundBlack\n        _ColorTable[265] = 'rgb(128, 0, 0)'; //red back\n        _ColorTable[266] = 'rgb(0, 128, 0)'; //greenback\n        _ColorTable[267] = 'rgb(128, 128, 0)'; //yellow back\n        _ColorTable[268] = 'rgb(0, 0, 238)'; //blue back\n        _ColorTable[269] = 'rgb(128, 0, 128)'; //magenta back\n        _ColorTable[270] = 'rgb(0, 128, 128)';  //cyan back\n        _ColorTable[271] = 'rgb(187, 187, 187)';  //white back\n\n        _ColorTable[272] = 'rgb(0,0,0)'; //InfoBackground\n        _ColorTable[273] = 'rgb(0, 255, 255)';  //InfoText\n        _ColorTable[274] = 'rgb(0,0,0)'; //LocalEchoBackground\n        _ColorTable[275] = 'rgb(255, 255, 0)';  //LocalEchoText\n        _ColorTable[276] = 'rgb(0, 0, 0)';  //DefaultBack\n        _ColorTable[277] = 'rgb(229, 229, 229)';  //DefaultFore\n\n        _ColorTable[278] = 'rgb(205, 0, 0)';  //ErrorFore\n        _ColorTable[279] = 'rgb(229, 229, 229)';  //ErrorBack\n\n        _ColorTable[280] = 'rgb(255,255,255)';  //DefaultBrightFore\n        this._ColorTable = _ColorTable;\n    }\n\n    public GetColor(code: number) {\n        if (this._ColorTable == null)\n            this.buildColorTable();\n        switch (code) {\n            case -12:\n                return this._ColorTable[279];  //ErrorBack\n            case -11:\n                return this._ColorTable[278];  //ErrorFore\n            case -10:\n                return this._ColorTable[280];  //DefaultBrightFore\n            case -8:\n                return this._ColorTable[272]; //InfoBackground\n            case -7:\n                return this._ColorTable[273];  //InfoText\n            case -4:\n                return this._ColorTable[274]; //LocalEchoBackground\n            case -3:\n                return this._ColorTable[275];  //LocalEchoText\n            case 49:\n            case -2:\n                return this._ColorTable[276];  //DefaultBack\n            case 39:\n            case -1:\n                return this._ColorTable[277];  //DefaultBack\n            case 0:\n            case 30: //set foreground color to black\n                return this._ColorTable[0];\n            case 1:\n            case 31: //set foreground color to red\n                return this._ColorTable[1];\n            case 2:\n            case 32: //set foreground color to green\n                return this._ColorTable[2];\n            case 3:\n            case 33:  //set foreground color to yellow\n                return this._ColorTable[3];\n            case 4:\n            case 34: //set foreground color to blue\n                return this._ColorTable[4];\n            case 5:\n            case 35:  //set foreground color to magenta (purple)\n                return this._ColorTable[5];\n            case 6:\n            case 36:  //set foreground color to cyan\n                return this._ColorTable[6];\n            case 7:\n            case 37:  //set foreground color to white\n                return this._ColorTable[7];\n            case 40:  //background black\n                return this._ColorTable[264];\n            case 41:  //background red\n                return this._ColorTable[265];\n            case 42:  //background green\n                return this._ColorTable[266];\n            case 43:  //background yellow\n                return this._ColorTable[267];\n            case 44:  //background blue\n                return this._ColorTable[268];\n            case 45:  //background magenta\n                return this._ColorTable[269];\n            case 46:  //cyan\n                return this._ColorTable[270];\n            case 47:  //white\n                return this._ColorTable[271];\n            case 8:\n            case 90:\n            case 100:\n            case 300: //set foreground color to black\n            case 400:\n                return this._ColorTable[8];\n            case 9:\n            case 91:\n            case 101:\n            case 310: //set foreground color to red\n            case 410:\n                return this._ColorTable[9];\n            case 10:\n            case 92:\n            case 102:\n            case 320: //set foreground color to green\n            case 420:\n                return this._ColorTable[10];\n            case 11:\n            case 93:\n            case 103:\n            case 330:  //set foreground color to yellow\n            case 430:\n                return this._ColorTable[11];\n            case 12:\n            case 94:\n            case 104:\n            case 340: //set foreground color to blue\n            case 440:\n                return this._ColorTable[12];\n            case 13:\n            case 95:\n            case 105:\n            case 350:  //set foreground color to magenta (purple)\n            case 450:\n                return this._ColorTable[13];\n            case 14:\n            case 96:\n            case 106:\n            case 360:  //set foreground color to cyan\n            case 460:\n                return this._ColorTable[14];\n            case 15:\n            case 97:\n            case 107:\n            case 370:  //set foreground color to white\n            case 470:\n                return this._ColorTable[15];\n            case 4000:\n            case 3000: //set foreground color to black\n                return this._ColorTable[256];\n            case 4100:\n            case 3100: //set foreground color to red\n                return this._ColorTable[257];\n            case 4200:\n            case 3200: //set foreground color to green\n                return this._ColorTable[258];\n            case 4300:\n            case 3300:  //set foreground color to yellow\n                return this._ColorTable[259];\n            case 4400:\n            case 3400: //set foreground color to blue\n                return this._ColorTable[260];\n            case 4500:\n            case 3500:  //set foreground color to magenta (purple)\n                return this._ColorTable[261];\n            case 4600:\n            case 3600:  //set foreground color to cyan\n                return this._ColorTable[262];\n            case 4700:\n            case 3700:  //set foreground color to white\n                return this._ColorTable[263];\n            default:\n                if (code <= -16) {\n                    code += 16;\n                    code *= -1;\n                }\n                if (code >= 0 && code < 281)\n                    return this._ColorTable[code];\n                return this._ColorTable[277];\n        }\n    }\n\n    public SetColor(code: number, color) {\n        if (this._ColorTable == null)\n            this.buildColorTable();\n        if (code < 0 || code >= this._ColorTable.length)\n            return;\n        color = new RGBColor(color);\n        if (!color.ok) return;\n        this._ColorTable[code] = color.toRGB();\n    }\n\n    private AddLine(line: string, raw: string, fragment: boolean, skip: boolean, formats: LineFormat[], remote: boolean) {\n        const data: ParserLine = { raw: raw, line: line, fragment: fragment, gagged: skip, formats: this.pruneFormats(formats, line.length, fragment), remote: remote };\n        this.emit('add-line', data);\n        this.EndOfLine = !fragment;\n    }\n\n    private pruneFormats(formats, textLen, fragment) {\n        //no formats or only 1 format\n        if (!formats || formats.length < 2) return formats;\n        const l = formats.length;\n        const nF = [];\n        for (let f = 0; f < l; f++) {\n            const format = formats[f];\n            let end;\n            if (f < l - 1) {\n                const nFormat = formats[f + 1];\n                //skip format until find one that has different offset\n                if (format.offset === nFormat.offset && nFormat.formatType === format.formatType)\n                    continue;\n                end = nFormat.offset;\n                //empty link\n                if (format.formatType === FormatType.Link && end - format.offset === 0 && nFormat.formatType === FormatType.LinkEnd)\n                    continue;\n                //empty send\n                if (format.formatType === FormatType.MXPSend && end - format.offset === 0 && nFormat.formatType === FormatType.MXPSendEnd)\n                    continue;\n                //empty link\n                if (format.formatType === FormatType.MXPLink && end - format.offset === 0 && nFormat.formatType === FormatType.MXPLinkEnd)\n                    continue;\n            }\n            //trailing link with no text or empty format block and not fragment\n            else if (!fragment && format.offset === textLen && textLen !== 0 && ((format.formatType === FormatType.Normal && !format.hr) || format.formatType === FormatType.Link || format.formatType === FormatType.MXPSend || format.formatType === FormatType.MXPLink))\n                continue;\n            nF.push(format);\n        }\n        return nF;\n    }\n\n    private GetEntity(entity: string) {\n        if (entity === 'text')\n            return entity;\n        //custom entity\n        if (this.mxpEntities[entity]) {\n            //expanded it for processing\n            this.mxpState.expanded = true;\n            //return value to be processed as value could contain mxp tags and other entities\n            return this.mxpEntities[entity].value;\n        }\n        return entity;\n    }\n\n    private ClearMXPToTag(tag: MXPTag, custom?: string, secure?: boolean) {\n        if (custom == null) custom = '';\n        let tmp = new MXPStyle();\n        tmp.tag = MXPTag.None;\n        let ml = this.mxpStyles.length - 1;\n        for (; ml >= 0; ml--) {\n            if (this.mxpStyles[ml].tag !== tag && this.mxpStyles[ml].custom !== custom) {\n                if (!this.mxpStyles[ml].open && !secure) continue;\n                tmp = this.mxpStyles.splice(ml, 1)[0];\n            }\n            else\n                break;\n        }\n        //return the matching tag\n        if (ml >= 0 && this.mxpStyles.length > 0)\n            tmp = this.mxpStyles.splice(ml, 1)[0];\n        else if (this.mxpStyles.length === 0)\n            this.ResetMXP();\n        return tmp;\n    }\n\n    private ClearMXPOpen() {\n        let ml = this.mxpStyles.length;\n        while (ml--) {\n            if (!this.mxpStyles[ml].open) continue;\n            this.mxpStyles.splice(ml, 1);\n        }\n        if (this.mxpStyles.length === 0)\n            this.ResetMXP();\n    }\n\n    private getMXPOpenFormatBlocks() {\n        if (!this.mxpState.on) return [];\n        let m = 0;\n        const ml = this.mxpStyles.length;\n        const formats = [];\n        for (; m < ml; m++) {\n            if (this.mxpStyles[m].tag === MXPTag.A || this.mxpStyles[m].tag === MXPTag.SEND)\n                formats.push(Object.assign({}, this.mxpStyles[m].properties));\n        }\n        return formats;\n    }\n\n    private getMXPCloseFormatBlocks() {\n        if (!this.mxpState.on) return [];\n        let ml = this.mxpStyles.length;\n        const formats = [];\n        while (ml--) {\n            if (this.mxpStyles[ml].tag === MXPTag.A)\n                formats.push({ formatType: FormatType.MXPLinkEnd });\n            else if (this.mxpStyles[ml].tag === MXPTag.SEND)\n                formats.push({ formatType: FormatType.MXPSendEnd });\n        }\n        return formats;\n    }\n\n    private getMXPBlock(tag: string, args, remote, oTag?, blocks?): MXPBlock {\n        let tmp;\n        let arg;\n        let sArg;\n        let sArgs;\n        let color;\n        let x;\n        let xl = args.length;\n        let e;\n        let sl;\n        let s;\n        let href = '';\n        let hint = '';\n        let expire = '';\n        let prompt = false;\n        tag = tag.toUpperCase();\n        if (this.enableDebug) {\n            this.emit('debug', 'MXP Tag: ' + tag);\n            this.emit('debug', 'MXP Tag Args: ' + args);\n        }\n        switch (tag) {\n            case 'C':\n            case 'COLOR':\n                tmp = this.CloneCurrentStyle();\n                tmp.tag = MXPTag[tag];\n                tmp.open = true;\n                if (xl > 0) {\n                    arg = args[0].split('=');\n                    if (arg.length > 1) {\n                        color = new RGBColor(stripQuotes(arg[1]));\n                        if (!color.ok) return null;\n                        if (arg[0].toUpperCase() === 'BACK')\n                            tmp.back = color.toRGB();\n                        else\n                            tmp.fore = color.toRGB();\n                    }\n                    else {\n                        color = new RGBColor(stripQuotes(arg[0]));\n                        if (color.ok)\n                            tmp.fore = color.toRGB();\n                    }\n                }\n                if (xl > 1) {\n                    arg = args[1].split('=');\n                    if (arg.length > 1) {\n                        color = new RGBColor(stripQuotes(arg[1]));\n                        if (!color.ok) return null;\n                        if (arg[0].toUpperCase() === 'FORE')\n                            tmp.fore = color.toRGB();\n                        else\n                            tmp.back = color.toRGB();\n\n                    }\n                    else {\n                        color = new RGBColor(stripQuotes(arg[0]));\n                        if (color.ok)\n                            tmp.back = color.toRGB();\n                    }\n                }\n                tmp.custom = '';\n                this.mxpStyles.push(tmp);\n                return null;\n            case 'B':\n            case 'BOLD':\n            case 'STRONG':\n                tmp = this.CloneCurrentStyle();\n                tmp.open = true;\n                tmp.tag = MXPTag[tag];\n                tmp.style |= FontStyle.Bold;\n                tmp.custom = '';\n                this.mxpStyles.push(tmp);\n                return null;\n            case 'FONT':\n                tmp = this.CloneCurrentStyle();\n                tmp.open = true;\n                tmp.tag = MXPTag[tag];\n                for (x = 0; x < xl; x++) {\n                    arg = args[x].split('=');\n                    if (arg.length > 1) {\n                        switch (arg[0].toUpperCase()) {\n                            case 'SIZE':\n                                if (this.isNumber(arg[1]))\n                                    tmp.fontSize = arg[1] + 'pt';\n                                else\n                                    tmp.fontSize = arg[1] || 0;\n                                break;\n                            case 'COLOR':\n                                sArgs = arg[1].split(',');\n                                color = new RGBColor(stripQuotes(sArgs[0]));\n                                if (color.ok) tmp.fore = color.toRGB();\n                                for (s = 1, sl = sArgs.length; s < sl; s++) {\n                                    switch (sArgs[s].toLowerCase()) {\n                                        case 'bold':\n                                            tmp.style |= FontStyle.Bold;\n                                            break;\n                                        case 'italic':\n                                            tmp.style |= FontStyle.Italic;\n                                            break;\n                                        case 'underline':\n                                            tmp.style |= FontStyle.Underline;\n                                            break;\n                                        case 'blink':\n                                            tmp.style |= FontStyle.Slow;\n                                            break;\n                                        case 'inverse':\n                                            tmp.style |= FontStyle.Inverse;\n                                            break;\n                                        case 'hidden':\n                                            tmp.style |= FontStyle.Hidden;\n                                            break;\n                                        case 'strikeout':\n                                            tmp.style |= FontStyle.Strikeout;\n                                            break;\n                                        case 'overline':\n                                            tmp.style |= FontStyle.Overline;\n                                            break;\n                                        case 'doubleunderline':\n                                            tmp.style |= FontStyle.DoubleUnderline;\n                                            break;\n                                    }\n                                }\n                                break;\n                            case 'BACK':\n                                color = new RGBColor(stripQuotes(arg[1]));\n                                if (color.ok) tmp.back = color.toRGB();\n                                break;\n                            case 'FACE':\n                                tmp.font = stripQuotes(arg[1]) || 0;\n                                break;\n                            default:\n                                if (this.enableDebug) this.emit('debug', 'Invalid Argument for ' + tag + ': ' + arg[0]);\n                                break;\n                        }\n                    }\n                    else if (x === 0) {\n                        tmp.font = stripQuotes(args[x]) || 0;\n                    }\n                    else if (x === 1) {\n                        if (this.isNumber(args[x]))\n                            tmp.fontSize = args[x] + 'pt';\n                        else\n                            tmp.fontSize = args[x] || 0;\n                    }\n                    else if (x === 2) {\n                        color = new RGBColor(stripQuotes(args[x]));\n                        if (color.ok) tmp.fore = color.toRGB();\n                    }\n                    else if (x === 3) {\n                        color = new RGBColor(stripQuotes(args[x]));\n                        if (color.ok) tmp.back = color.toRGB();\n                    }\n                }\n                tmp.custom = '';\n                this.mxpStyles.push(tmp);\n                return null;\n            case 'H':\n            case 'HIGH':\n                tmp = this.CloneCurrentStyle();\n                tmp.open = true;\n                tmp.tag = MXPTag[tag];\n                tmp.high = true;\n                tmp.custom = '';\n                this.mxpStyles.push(tmp);\n                return null;\n            case 'I':\n            case 'ITALIC':\n            case 'EM':\n                tmp = this.CloneCurrentStyle();\n                tmp.open = true;\n                tmp.tag = MXPTag[tag];\n                tmp.style |= FontStyle.Italic;\n                tmp.custom = '';\n                this.mxpStyles.push(tmp);\n                return null;\n            case 'U':\n            case 'UNDERLINE':\n                tmp = this.CloneCurrentStyle();\n                tmp.open = true;\n                tmp.tag = MXPTag[tag];\n                tmp.style |= FontStyle.Underline;\n                tmp.custom = '';\n                this.mxpStyles.push(tmp);\n                return null;\n            case 'S':\n            case 'STRIKEOUT':\n                tmp = this.CloneCurrentStyle();\n                tmp.open = true;\n                tmp.tag = MXPTag[tag];\n                tmp.style |= FontStyle.Strikeout;\n                tmp.custom = '';\n                this.mxpStyles.push(tmp);\n                return null;\n            case '/B':\n            case '/BOLD':\n            case '/STRONG':\n            case '/H':\n            case '/HIGH':\n            case '/I':\n            case '/ITALIC':\n            case '/EM':\n            case '/U':\n            case '/UNDERLINE':\n            case '/S':\n            case '/STRIKEOUT':\n            case '/C':\n            case '/COLOR':\n            case '/FONT':\n                this.ClearMXPToTag(MXPTag[tag.substring(1)]);\n                return null;\n        }\n        if (this.mxpState.lineType === lineType.Secure || this.mxpState.lineType === lineType.LockSecure || this.mxpState.lineType === lineType.TempSecure) {\n            switch (tag) {\n                case 'IMAGE':\n                    e = {\n                        formatType: FormatType.Image,\n                        name: '',\n                        url: this.DefaultImgUrl,\n                        t: '',\n                        h: '',\n                        w: '',\n                        hspace: '',\n                        vspace: '',\n                        align: 'bottom',\n                        ismap: false\n                    };\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        switch (arg[0].toUpperCase()) {\n                            case 'FNAME':\n                                e.name = stripQuotes(arg[1]);\n                                break;\n                            case 'URL':\n                                e.url = stripQuotes(arg[1]);\n                                break;\n                            case 'TYPE':\n                            case 'T':\n                                if (arg[1].length > 0)\n                                    e.type = arg[1];\n                                break;\n                            case 'HEIGHT':\n                            case 'H':\n                                e.h = stripQuotes(arg[1]);\n                                break;\n                            case 'WIDTH':\n                            case 'W':\n                                e.w = stripQuotes(arg[1]);\n                                break;\n                            case 'HSPACE':\n                                e.hspace = arg[1];\n                                break;\n                            case 'VSPACE':\n                                e.vspace = arg[1];\n                                break;\n                            case 'ALIGN':\n                                e.align = arg[1].toLowerCase();\n                                break;\n                            case 'ISMAP':\n                                e.ismap = true;\n                                break;\n                            default:\n                                if (x === 0)\n                                    e.name = stripQuotes(args[x]);\n                                else if (x === 1)\n                                    e.url = stripQuotes(args[x]);\n                                else if (x === 2 && args[x].length > 0)\n                                    e.type = args[x];\n                                else if (x === 3)\n                                    e.h = stripQuotes(args[x]);\n                                else if (x === 4)\n                                    e.w = stripQuotes(args[x]);\n                                else if (x === 5)\n                                    e.hspace = args[x];\n                                else if (x === 6)\n                                    e.vspace = args[x];\n                                else if (x === 7)\n                                    e.align = args[x].toLowerCase();\n                                break;\n                        }\n                    }\n                    return { format: e, text: null };\n                case '!AT':\n                case '!ATTLIST':\n                    if (args.length === 0) return null;\n                    e = args[0];\n                    //not defined or if not from the same origin and not open cant change it\n                    if (!this.mxpElements[e] || (this.mxpEntities[e].remote !== e.remote && !this.mxpEntities[e].open))\n                        return null;\n                    //clear out any old ones\n                    this.mxpElements[e].attributes = {};\n                    this.mxpElements[e].attributeIndexes = [];\n                    for (x = 1; x < xl; x++) {\n                        sArgs = args[x].split('=');\n                        if (sArgs.length > 1)\n                            this.mxpElements[e].attributes[sArgs[0].toLowerCase()] = sArgs[1];\n                        else\n                            this.mxpElements[e].attributes[sArgs[0].toLowerCase()] = '';\n                        this.mxpElements[e].attributeIndexes.push(sArgs[0].toLowerCase());\n                    }\n                    break;\n                case '!TAG':\n                    e = new Tag();\n                    e.remote = remote;\n                    for (x = 0; x < xl; x++) {\n                        //special case, as attribute list has = in it so test for it\n                        arg = args[x].split('=');\n                        switch (arg[0].toUpperCase()) {\n                            case 'WINDOWNAME':\n                                e.window = stripQuotes(arg[1]);\n                                break;\n                            case 'FORE':\n                                color = new RGBColor(stripQuotes(arg[1]));\n                                if (color.ok) e.fore = color.toRGB();\n                                break;\n                            case 'BACK':\n                                color = new RGBColor(stripQuotes(arg[1]));\n                                if (color.ok) e.back = color.toRGB();\n                                break;\n                            case 'GAG':\n                                e.gag = true;\n                                break;\n                            case 'ENABLE':\n                                e.enabled = true;\n                                break;\n                            case 'DISABLE':\n                                e.enabled = false;\n                                break;\n                            default:\n                                if (x === 0) {\n                                    tmp = +args[x];\n                                    if (!isNaN(tmp)) e.index = tmp;\n                                }\n                                else if (x === 1)\n                                    e.window = stripQuotes(args[x]);\n                                else if (x === 2) {\n                                    color = new RGBColor(stripQuotes(args[x]));\n                                    if (color.ok) e.fore = color.toRGB();\n                                }\n                                else if (x === 3) {\n                                    color = new RGBColor(stripQuotes(args[x]));\n                                    if (color.ok) e.back = color.toRGB();\n                                }\n                                break;\n                        }\n                    }\n                    if (e.fore.length > 0 && e.back.length > 0)\n                        e.definition = `<C \"${e.fore}\" \"${e.back}\">`;\n                    else if (e.fore.length > 0)\n                        e.definition = `<C \"${e.fore}\">`;\n                    else if (e.back.length > 0)\n                        e.definition = `<C BACK=\"${e.fore}\">`;\n                    if (e.definition.length > 0)\n                        e.closeDefinition = '</C>';\n                    if (this.mxpLines[e.index]) {\n                        //mud can over ride local, but local can not override remote\n                        if (e.remote || this.mxpLines[e.index].remote === e.remote)\n                            this.mxpLines[e.index] = e;\n                    }\n                    else\n                        this.mxpLines[e.index] = e;\n                    break;\n                case '!EL':\n                case '!ELEMENT':\n                    e = new Element(remote);\n                    for (x = 0; x < xl; x++) {\n                        //special case, as attribute list has = in it so test for it\n                        if (args[x].toUpperCase().startsWith('ATT=')) {\n                            arg = stripQuotes(args[x]).substring(4).split(' ');\n                            for (s = 0, sl = arg.length; s < sl; s++) {\n                                sArgs = stripQuotes(arg[s]).split('=');\n                                if (sArgs.length > 1)\n                                    e.attributes[sArgs[0].toLowerCase()] = stripQuotes(sArgs[1]);\n                                else\n                                    e.attributes[sArgs[0].toLowerCase()] = '';\n                                e.attributeIndexes.push(sArgs[0].toLowerCase());\n                            }\n                            continue;\n                        }\n                        arg = args[x].split('=');\n                        switch (arg[0].toUpperCase()) {\n                            case 'TAG':\n                                tmp = +arg[1];\n                                if (!isNaN(tmp)) e.tag = tmp;\n                                break;\n                            case 'FLAG':\n                                e.flag = stripQuotes(arg[1]);\n                                break;\n                            case 'OPEN':\n                                e.open = true;\n                                break;\n                            case 'DELETE':\n                                if (this.mxpElements[e.name] && (this.mxpEntities[e.name].remote === e.remote || this.mxpEntities[e.name].open))\n                                    delete this.mxpEntities[e.name];\n                                return null;\n                            case 'EMPTY':\n                                e.empty = true;\n                                break;\n                            /*\n                          case \"HIDDEN\":\n                            e.hidden = true;\n                            break;\n                            */\n                            case 'SECURE':\n                                e.open = false;\n                                break;\n                            default:\n                                if (x === 0)\n                                    e.name = stripQuotes(args[x]).toUpperCase();\n                                else if (x === 1) {\n                                    e.definition = stripQuotes(args[x]);\n                                    e.closeDefinition = this.GetCloseTags(e.definition);\n                                    if (this.enableDebug) this.emit('debug', 'MXP close definition: ' + e.closeDefinition);\n                                }\n                                else if (x === 2) {\n                                    arg = args[x].substring(4).split(' ');\n                                    for (s = 0, sl = arg.length; s < sl; s++) {\n                                        sArgs = arg[s].split('=');\n                                        if (sArgs.length > 1)\n                                            e.attributes[sArgs[0]] = sArgs[1];\n                                        else\n                                            e.attributes[sArgs[0]] = '';\n                                        e.attributeIndexes.push(sArgs[0]);\n                                    }\n                                }\n                                else if (x === 3) {\n                                    tmp = +args[x];\n                                    if (!isNaN(tmp)) e.tag = tmp;\n                                }\n                                else if (x === 4)\n                                    e.flag = stripQuotes(args[x]);\n                                break;\n                        }\n                    }\n                    if (e.tag > 19 && e.tag < 100) {\n                        tmp = new Tag(e.tag);\n                        tmp.element = e.name;\n                        if (this.mxpLines[tmp.index]) {\n                            //mud can over ride local, but local can not override remote\n                            if (e.remote || this.mxpLines[tmp.index].remote === e.remote)\n                                this.mxpLines[tmp.index] = tmp;\n                        }\n                        else\n                            this.mxpLines[tmp.index] = tmp;\n                    }\n                    if (this.mxpElements[e.name]) {\n                        //can only override if from same origin (eg from mud, or from local) or if an open tag\n                        if (this.mxpElements[e.name].remote === e.remote || this.mxpEntities[e.name].open)\n                            this.mxpElements[e.name] = e;\n                    }\n                    else\n                        this.mxpElements[e.name] = e;\n                    break;\n                case '!EN':\n                case '!ENTITY':\n                    e = new Entity(remote);\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        switch (arg[0].toUpperCase()) {\n                            case 'DESC':\n                                e.description = stripQuotes(arg[1]);\n                                break;\n                            case 'PRIVATE':\n                                e.publish = false;\n                                break;\n                            case 'PUBLISH':\n                                e.publish = true;\n                                break;\n                            case 'DELETE':\n                                //can only modify if from same origin, eg mud can only mod mud, and user can only mod user\n                                if (this.mxpEntities[e.name] && this.mxpEntities[e.name].remote === e.remote)\n                                    delete this.mxpEntities[e.name];\n                                return null;\n                            case 'ADD':\n                                if (this.mxpEntities[e.name] && this.mxpEntities[e.name].remote === e.remote) {\n                                    if (!this.mxpEntities[e.name].value)\n                                        this.mxpEntities[e.name].value = e.value;\n                                    else\n                                        this.mxpEntities[e.name].value += '|' + e.value;\n                                    return null;\n                                }\n                                break;\n                            case 'REMOVE':\n                                if (this.mxpEntities[e.name] && this.mxpEntities[e.name].remote === e.remote) {\n                                    if (this.mxpEntities[e.name].value) {\n                                        sArgs = this.mxpEntities[e.name].value.split('|');\n                                        sArg = [];\n                                        for (s = 0, sl = sArgs.length; s < sl; s++) {\n                                            if (sArgs[s] !== e.value)\n                                                sArg.push(sArgs[s]);\n                                        }\n                                        this.mxpEntities[e.name].value = sArg.join('|');\n                                    }\n                                }\n                                return null;\n                            default:\n                                if (x === 0)\n                                    e.name = stripQuotes(args[x]);\n                                else if (x === 1)\n                                    e.value = stripQuotes(args[x]);\n                                else if (x === 2)\n                                    e.description = stripQuotes(args[x]);\n                                break;\n                        }\n                    }\n                    if (this.mxpEntities[e.name]) {\n                        if (this.mxpEntities[e.name].remote === e.remote)\n                            this.mxpEntities[e.name] = e;\n                    }\n                    else\n                        this.mxpEntities[e.name] = e;\n                    break;\n                case '/V':\n                case '/VAR':\n                    tmp = this.ClearMXPToTag(MXPTag[tag.substring(1)]);\n                    e = new Entity(remote);\n                    if (this.mxpState.captured.length > 0)\n                        e.value = this.mxpState.captured.pop().join('');\n                    else\n                        e.value = '';\n                    this.mxpState.capture--;\n                    if (this.enableDebug) this.emit('debug', 'MXP captured: ' + e.value);\n                    args = tmp.obj;\n                    xl = args.length;\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        switch (arg[0].toUpperCase()) {\n                            case 'DESC':\n                                e.description = stripQuotes(arg[1]);\n                                break;\n                            case 'PRIVATE':\n                                e.publish = false;\n                                break;\n                            case 'PUBLISH':\n                                e.publish = true;\n                                break;\n                            case 'DELETE':\n                                if (this.mxpEntities[e.name] && this.mxpEntities[e.name].remote === e.remote)\n                                    delete this.mxpEntities[e.name];\n                                return null;\n                            case 'ADD':\n                                if (this.mxpEntities[e.name] && this.mxpEntities[e.name].remote === e.remote) {\n                                    if (!this.mxpEntities[e.name].value)\n                                        this.mxpEntities[e.name].value = e.value;\n                                    else\n                                        this.mxpEntities[e.name].value += '|' + e.value;\n                                    return null;\n                                }\n                                break;\n                            case 'REMOVE':\n                                if (this.mxpEntities[e.name] && this.mxpEntities[e.name].remote === e.remote) {\n                                    if (this.mxpEntities[e.name].value) {\n                                        sArgs = this.mxpEntities[e.name].value.split('|');\n                                        sArg = [];\n                                        for (s = 0, sl = sArgs.length; s < sl; s++) {\n                                            if (sArgs[s] !== e.value)\n                                                sArg.push(sArgs[s]);\n                                        }\n                                        this.mxpEntities[e.name].value = sArg.join('|');\n                                    }\n                                }\n                                return null;\n                            default:\n                                if (x === 0)\n                                    e.name = stripQuotes(args[x]);\n                                else if (x === 1)\n                                    e.description = stripQuotes(args[x]);\n                                break;\n                        }\n                    }\n                    if (this.mxpEntities[e.name]) {\n                        if (this.mxpEntities[e.name].remote === e.remote)\n                            this.mxpEntities[e.name] = e;\n                    }\n                    else\n                        this.mxpEntities[e.name] = e;\n                    break;\n                case 'V':\n                case 'VAR':\n                    this.mxpState.captured.push([]);\n                    this.mxpState.capture++;\n                    tmp = this.CloneCurrentStyle();\n                    tmp.open = false;\n                    tmp.tag = MXPTag[tag];\n                    tmp.obj = args;\n                    tmp.custom = '';\n                    this.mxpStyles.push(tmp);\n                    return null;\n                case 'GAUGE':\n                    e = { value: 0, max: 1, caption: '', color: 0 };\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        if (arg.length > 1) {\n                            switch (arg[0].toUpperCase()) {\n                                case 'VALUE':\n                                    tmp = parseFloat(this.GetEntity(arg[1]));\n                                    if (isNaN(tmp))\n                                        tmp = this.GetEntity(arg[1]);\n                                    e.value = tmp;\n                                    break;\n                                case 'MAX':\n                                    tmp = parseFloat(this.GetEntity(arg[1]));\n                                    if (isNaN(tmp))\n                                        tmp = this.GetEntity(arg[1]);\n                                    e.max = tmp;\n                                    break;\n                                case 'CAPTION':  //volume\n                                    if (arg[1].length > 0)\n                                        e.caption = stripQuotes(arg[1]);\n                                    break;\n                                case 'COLOR':  //repeat\n                                    color = new RGBColor(stripQuotes(arg[1]));\n                                    if (color.ok) e.color = color.toRGB();\n                                    break;\n                            }\n                        }\n                        else if (x === 0) {\n                            tmp = parseFloat(this.GetEntity(args[x]));\n                            if (isNaN(tmp))\n                                tmp = this.GetEntity(args[x]);\n                            e.value = tmp;\n                        }\n                        else if (x === 1) {\n                            tmp = parseFloat(this.GetEntity(args[x]));\n                            if (isNaN(tmp))\n                                tmp = this.GetEntity(args[x]);\n                            e.max = tmp;\n                        }\n                        else if (x === 2 && args[x].length > 0)\n                            e.caption = stripQuotes(args[x]);\n                        else if (x === 3 && args[x].length > 0) {\n                            color = new RGBColor(stripQuotes(arg[1]));\n                            if (color.ok) e.color = color.toRGB();\n                        }\n                    }\n                    this.mxpState.expanded = false;\n                    this.emit('gauge', e);\n                    break;\n                case 'STAT':\n                    e = { value: 0, max: 1, caption: '' };\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        if (arg.length > 1) {\n                            switch (arg[0].toUpperCase()) {\n                                case 'VALUE':\n                                    tmp = parseFloat(this.GetEntity(arg[1]));\n                                    if (isNaN(tmp))\n                                        tmp = this.GetEntity(arg[1]);\n                                    e.value = tmp;\n                                    break;\n                                case 'MAX':\n                                    tmp = parseFloat(this.GetEntity(arg[1]));\n                                    if (isNaN(tmp))\n                                        tmp = this.GetEntity(arg[1]);\n                                    e.max = tmp;\n                                    break;\n                                case 'CAPTION':  //volume\n                                    if (arg[1].length > 0)\n                                        e.caption = stripQuotes(arg[1]);\n                                    break;\n                            }\n                        }\n                        else if (x === 0) {\n                            tmp = parseFloat(this.GetEntity(args[x]));\n                            if (isNaN(tmp))\n                                tmp = this.GetEntity(args[x]);\n                            e.value = tmp;\n                        }\n                        else if (x === 1) {\n                            tmp = parseFloat(this.GetEntity(args[x]));\n                            if (isNaN(tmp))\n                                tmp = this.GetEntity(args[x]);\n                            e.max = tmp;\n                        }\n                        else if (x === 2 && args[x].length > 0)\n                            e.caption = stripQuotes(args[x]);\n                    }\n                    this.mxpState.expanded = false;\n                    this.emit('stat', e);\n                    break;\n                case 'MUSIC':\n                    e = { off: false, file: '', url: '', volume: 100, repeat: 1, priority: 50, type: '', continue: true };\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        if (arg.length > 1) {\n                            switch (arg[0].toUpperCase()) {\n                                case 'FNAME':\n                                    e.file = stripQuotes(arg[1]);\n                                    if (e.file.toLowerCase() === 'off') {\n                                        e.off = true;\n                                        e.file = '';\n                                    }\n                                    break;\n                                case 'V':  //volume\n                                    tmp = +arg[1];\n                                    if (isNaN(tmp))\n                                        tmp = 100;\n                                    e.volume = tmp;\n                                    break;\n                                case 'L':  //repeat\n                                    tmp = +arg[1];\n                                    if (isNaN(tmp))\n                                        tmp = 1;\n                                    e.repeat = tmp;\n                                    break;\n                                case 'C':  //continue\n                                    e.continue = arg[1] !== '0';\n                                    break;\n                                case 'T':  //type\n                                    if (arg[1].length > 0)\n                                        e.type = arg[1];\n                                    break;\n                                case 'U':  //url\n                                    e.url = stripQuotes(arg[1]);\n                                    if (!e.url.endsWith('/') && e.url.length > 0)\n                                        e.url += '/';\n                                    break;\n                            }\n                        }\n                        else if (x === 0) {\n                            e.file = stripQuotes(args[x]);\n                            if (e.file.toLowerCase() === 'off') {\n                                e.off = true;\n                                e.file = '';\n                            }\n                        }\n                        else if (x === 1) {\n                            tmp = +args[x];\n                            if (isNaN(tmp))\n                                tmp = 100;\n                            e.volume = tmp;\n                        }\n                        else if (x === 2) {\n                            tmp = +args[x];\n                            if (isNaN(tmp))\n                                tmp = 1;\n                            e.repeat = tmp;\n                        }\n                        else if (x === 3)\n                            e.continue = args[x] !== '0';\n                        else if (x === 4) {\n                            if (args[x].length > 0)\n                                e.type = args[x];\n                        }\n                        else if (x === 5) {\n                            e.url = stripQuotes(args[x]);\n                            if (!e.url.endsWith('/') && e.url.length > 0)\n                                e.url += '/';\n                        }\n                    }\n                    this.emit('music', e);\n                    break;\n                case 'SOUND':\n                    e = { off: false, file: '', url: '', volume: 100, repeat: 1, priority: 50, type: '', continue: true };\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        if (arg.length > 1) {\n                            switch (arg[0].toUpperCase()) {\n                                case 'FNAME':\n                                    e.file = stripQuotes(arg[1]);\n                                    if (e.file.toLowerCase() === 'off') {\n                                        e.off = true;\n                                        e.file = '';\n                                    }\n                                    break;\n                                case 'V':  //volume\n                                    tmp = +arg[1];\n                                    if (isNaN(tmp))\n                                        tmp = 100;\n                                    e.volume = tmp;\n                                    break;\n                                case 'L':  //repeat\n                                    tmp = +arg[1];\n                                    if (isNaN(tmp))\n                                        tmp = 1;\n                                    e.repeat = tmp;\n                                    break;\n                                case 'P':  //priority\n                                    tmp = +arg[1];\n                                    if (isNaN(tmp))\n                                        tmp = 1;\n                                    e.priority = tmp;\n                                    break;\n                                case 'T':  //type\n                                    if (arg[1].length > 0)\n                                        e.type = arg[1];\n                                    break;\n                                case 'U':  //url\n                                    e.url = stripQuotes(arg[1]);\n                                    if (!e.url.endsWith('/') && e.url.length > 0)\n                                        e.url += '/';\n                                    break;\n                            }\n                        }\n                        else if (x === 0) {\n                            e.file = stripQuotes(args[x]);\n                            if (e.file.toLowerCase() === 'off') {\n                                e.off = true;\n                                e.file = '';\n                            }\n                        }\n                        else if (x === 1) {\n                            tmp = +args[x];\n                            if (isNaN(tmp))\n                                tmp = 100;\n                            e.volume = tmp;\n                        }\n                        else if (x === 2) {\n                            tmp = +args[x];\n                            if (isNaN(tmp))\n                                tmp = 1;\n                            e.repeat = tmp;\n                        }\n                        else if (x === 3) {\n                            tmp = +args[x];\n                            if (isNaN(tmp))\n                                tmp = 1;\n                            e.priority = tmp;\n                        }\n                        else if (x === 4) {\n                            if (args[x].length > 0)\n                                e.type = args[x];\n                        }\n                        else if (x === 5) {\n                            e.url = stripQuotes(args[x]);\n                            if (!e.url.endsWith('/') && e.url.length > 0)\n                                e.url += '/';\n                        }\n                    }\n                    this.emit('sound', e);\n                    break;\n                case 'EXPIRE':\n                    //emit expire event to handle old links\n                    this.emit('expire-links', args);\n                    //expire any links in the current line that match\n                    this.cleanMXPExpired(blocks, args?.[0] || '');\n                    break;\n                case 'VERSION':\n                    if (xl > 0)\n                        this.StyleVersion = args[0];\n                    else\n                        this.emit('MXP-tag-reply', tag, []);\n                    break;\n                case 'USER':\n                case 'PASSWORD':\n                    this.emit('MXP-tag-reply', tag, args);\n                    break;\n                case 'SUPPORT':\n                    sArgs = [];\n                    if (xl > 0) {\n                        for (x = 0; x < xl; x++) {\n                            arg = stripQuotes(args[x]);\n                            if (arg.indexOf('.') === -1) {\n                                arg = arg.toUpperCase();\n                                switch (arg) {\n                                    //TODO re-enable once font size/face  are supported\n                                    //case 'FONT':\n                                    case 'IMAGE':\n                                    case 'HR':\n                                    case 'A':\n                                    case 'SEND':\n                                    case 'B':\n                                    case 'I':\n                                    case 'COLOR':\n                                    case 'C':\n                                    case 'EM':\n                                    case 'ITALIC':\n                                    case 'STRONG':\n                                    case 'BOLD':\n                                    case 'UNDERLINE':\n                                    case 'U':\n                                    case 'S':\n                                    case 'STRIKEOUT':\n                                    case 'STRIKE':\n                                    case 'H':\n                                    case 'HIGH':\n                                    case 'EXPIRE':\n                                    case 'VERSION':\n                                    case 'SUPPORT':\n                                    case 'NOBR':\n                                    case 'P':\n                                    case 'BR':\n                                    case 'SBR':\n                                    case 'SOUND':\n                                    case 'MUSIC':\n                                    case 'VAR':\n                                    case 'USER':\n                                    case 'PASSWORD':\n                                    case 'H1':\n                                    case 'H2':\n                                    case 'H3':\n                                    case 'H4':\n                                    case 'H5':\n                                    case 'H6':\n                                    case 'RESET':\n                                    case 'GAUGE':\n                                    case 'STAT':\n                                        sArgs.push('+' + name);\n                                        break;\n                                    default:\n                                        sArgs.push('-' + name);\n                                        break;\n                                }\n                            }\n                            else {\n                                arg = args[x].split('.');\n                                arg[0] = arg[0].toUpperCase();\n                                switch (arg[0]) {\n                                    case 'IMAGE':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+image.fname');\n                                            sArgs.push('+image.url');\n                                            sArgs.push('+image.t');\n                                            sArgs.push('+image.h');\n                                            sArgs.push('+image.w');\n                                            sArgs.push('+image.hspace');\n                                            sArgs.push('+image.vspace');\n                                            sArgs.push('+image.align');\n                                            sArgs.push('+image.ismap');\n                                        }\n                                        break;\n                                    case 'SOUND':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+sound.v');\n                                            sArgs.push('+sound.l');\n                                            sArgs.push('+sound.p');\n                                            sArgs.push('+sound.t');\n                                            sArgs.push('+sound.u');\n                                        }\n                                        break;\n                                    case 'MUSIC':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+music.v');\n                                            sArgs.push('+music.l');\n                                            sArgs.push('+music.c');\n                                            sArgs.push('+music.t');\n                                            sArgs.push('+music.u');\n                                        }\n                                        break;\n                                    case 'A':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+a.href');\n                                            sArgs.push('+a.hint');\n                                            sArgs.push('+a.expire');\n                                        }\n                                        break;\n                                    case 'SEND':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+send.href');\n                                            sArgs.push('+send.hint');\n                                            sArgs.push('+send.prompt');\n                                            sArgs.push('+send.expire');\n                                        }\n                                        break;\n                                    case 'COLOR':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+color.fore');\n                                            sArgs.push('+color.back');\n                                        }\n                                        break;\n                                    case 'C':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+c.fore');\n                                            sArgs.push('+c.back');\n                                        }\n                                        break;\n                                    case 'FONT':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            //TODO switch to + when face and size supported\n                                            sArgs.push('-font.face');\n                                            sArgs.push('-font.size');\n                                            sArgs.push('+font.color');\n                                            sArgs.push('+font.back');\n                                        }\n                                        break;\n                                    case 'EXPIRE':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else\n                                            sArgs.push('+expire.Name');\n                                        break;\n                                    case 'GAUGE':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+gauge.max');\n                                            sArgs.push('+gauge.caption');\n                                            sArgs.push('+gauge.color');\n                                        }\n                                        break;\n                                    case 'STAT':\n                                        if (arg[1] !== '*')\n                                            sArgs.push('+' + arg[0] + '.' + arg[1]);\n                                        else {\n                                            sArgs.push('+stat.max');\n                                            sArgs.push('+stat.caption');\n                                        }\n                                        break;\n                                    default:\n                                        if (arg[1] !== '*')\n                                            sArgs.push('-' + arg[0] + '.' + arg[1]);\n                                        else\n                                            sArgs.push('-' + arg[0]);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else\n                        //TODO enable font once font face/size are supported\n                        sArgs = ['+A', '+SEND', '+B', '+I', '+COLOR', '+C', '+EM', '+ITALIC', '+STRONG', '+BOLD', '+UNDERLINE', '+U', '+S', '+STRIKEOUT', '+H', '+HIGH', '-FONT', '+EXPIRE', '+VERSION', '+SUPPORT', '+NOBR', '+P', '+BR', '+SBR', '+VAR', '+SOUND', '+MUSIC', '+USER', '+PASSWORD', '+RESET', '+STRIKE', '+H1', '+H2', '+H3', '+H4', '+H5', '+H6', '+IMAGE', '+STAT', '+GAUGE'];\n                    this.emit('MXP-tag-reply', tag, sArgs);\n                    break;\n                case 'A':\n                    tmp = this.CloneCurrentStyle();\n                    tmp.open = false;\n                    tmp.tag = MXPTag[tag];\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        if (arg.length > 1) {\n                            switch (arg[0].toUpperCase()) {\n                                case 'HREF':\n                                    href = stripQuotes(arg[1]);\n                                    break;\n                                case 'HINT':\n                                    hint = stripQuotes(arg[1]);\n                                    break;\n                                case 'EXPIRE':\n                                    expire = stripQuotes(arg[1]);\n                                    break;\n                                default:\n                                    if (this.enableDebug) this.emit('debug', 'Invalid Argument for ' + tag + ': ' + arg[0]);\n                                    break;\n                            }\n                        }\n                        else if (x === 0)\n                            href = stripQuotes(args[x]);\n                        else if (x === 1)\n                            hint = stripQuotes(args[x]);\n                        else if (x === 2)\n                            expire = stripQuotes(args[x]);\n                    }\n                    tmp.custom = '';\n                    tmp.properties = {\n                        formatType: FormatType.MXPLink,\n                        href: href,\n                        hint: hint,\n                        expire: expire\n                    };\n                    this.mxpStyles.push(tmp);\n                    if (hint.length === 0)\n                        hint = href;\n                    return {\n                        format: {\n                            formatType: FormatType.MXPLink,\n                            href: href,\n                            hint: hint,\n                            expire: expire\n                        },\n                        text: null\n                    };\n                case 'SEND':\n                    tmp = this.CloneCurrentStyle();\n                    tmp.open = false;\n                    tmp.tag = MXPTag[tag];\n                    for (x = 0; x < xl; x++) {\n                        arg = args[x].split('=');\n                        if (arg[0] === 'PROMPT')\n                            prompt = true;\n                        else if (arg.length > 1) {\n                            switch (arg[0].toUpperCase()) {\n                                case 'HREF':\n                                    href = stripQuotes(arg[1]);\n                                    break;\n                                case 'HINT':\n                                    hint = stripQuotes(arg[1]);\n                                    break;\n                                case 'EXPIRE':\n                                    expire = stripQuotes(arg[1]);\n                                    break;\n                                case 'PROMPT':\n                                    prompt = true;\n                                    break;\n                                default:\n                                    if (this.enableDebug) this.emit('debug', 'Invalid Argument for ' + tag + ': ' + arg[0]);\n                                    break;\n                            }\n                        }\n                        else if (x === 0)\n                            href = stripQuotes(args[x]);\n                        else if (x === 1)\n                            hint = stripQuotes(args[x]);\n                        else if (x === 2)\n                            prompt = true;\n                        else if (x === 3)\n                            expire = stripQuotes(args[x]);\n                    }\n                    tmp.custom = '';\n                    this.mxpStyles.push(tmp);\n                    if (href.length === 0)\n                        href = '&text;';\n                    if (hint.length === 0)\n                        hint = href;\n                    const cmds = href.split('|');\n                    let tt;\n                    if (cmds.length > 1) {\n                        const caps = hint.split('|');\n                        if (caps.length === cmds.length + 1) {\n                            hint = caps[0];\n                            caps.shift();\n                            tt = '[\\'' + caps.join('\\',\\'') + '\\']';\n                        }\n                        href = '[\\'' + cmds.join('\\',\\'') + '\\']';\n                    }\n                    else\n                        href = '\\'' + href + '\\'';\n                    tmp.properties = {\n                        formatType: FormatType.MXPSend,\n                        href: href,\n                        hint: hint,\n                        expire: expire,\n                        prompt: prompt,\n                        tt: tt || ''\n                    };\n                    return {\n                        format: {\n                            formatType: FormatType.MXPSend,\n                            href: href,\n                            hint: hint,\n                            expire: expire,\n                            prompt: prompt,\n                            tt: tt || ''\n                        },\n                        text: null\n                    };\n                case 'H1':\n                case 'H2':\n                case 'H3':\n                case 'H4':\n                case 'H5':\n                case 'H6':\n                    tmp = this.CloneCurrentStyle();\n                    tmp.open = true;\n                    tmp.tag = MXPTag[tag];\n                    tmp.style |= FontStyle.Bold;\n                    tmp.custom = '';\n                    this.mxpStyles.push(tmp);\n                    return null;\n                case '/A':\n                    this.ClearMXPToTag(MXPTag[tag.substring(1)]);\n                    return {\n                        format: {\n                            formatType: FormatType.MXPLinkEnd\n                        }, text: null\n                    };\n                case '/SEND':\n                    this.ClearMXPToTag(MXPTag[tag.substring(1)]);\n                    return {\n                        format: {\n                            formatType: FormatType.MXPSendEnd\n                        }, text: null\n                    };\n                case '/H1':\n                case '/H2':\n                case '/H3':\n                case '/H4':\n                case '/H5':\n                case '/H6':\n                    this.ClearMXPToTag(MXPTag[tag.substring(1)]);\n                    return null;\n                case 'NOBR':\n                    this.mxpState.noBreak = true;\n                    return null;\n                case '/P':\n                    this.ClearMXPToTag(MXPTag[tag.substring(1)]);\n                    this.mxpState.paragraph = false;\n                    return null;\n                case 'P':\n                    tmp = this.CloneCurrentStyle();\n                    tmp.open = false;\n                    tmp.tag = MXPTag[tag];\n                    tmp.custom = '';\n                    this.mxpStyles.push(tmp);\n                    this.mxpState.paragraph = true;\n                    return null;\n                case 'SBR':\n                    return {\n                        format: null, text: ' \\u200B'\n                    };\n                case 'RESET':\n                    this.ResetMXP();\n                    return null;\n                case 'HR':\n                    const mxp: MXPStyle = this.GetCurrentStyle();\n                    const colors = this.getColors(mxp);\n                    return {\n                        format: {\n                            formatType: FormatType.Normal,\n                            offset: 0,\n                            color: colors.fore,\n                            background: colors.back,\n                            size: mxp.fontSize,\n                            font: mxp.font,\n                            style: mxp.style | (this._CurrentAttributes & ~FontStyle.Bold),\n                            hr: true\n                        }, text: null\n                    };\n            }\n        }\n        if (this.mxpElements[tag]) {\n            e = this.mxpElements[tag];\n            //not open and not in correct lineType\n            if (!e.open && this.mxpState.lineType !== lineType.Secure && this.mxpState.lineType !== lineType.LockSecure && this.mxpState.lineType !== lineType.TempSecure)\n                return null;\n            tmp = this.CloneCurrentStyle();\n            tmp.open = e.open;\n            tmp.tag = MXPTag.Custom;\n            tmp.custom = e.name;\n            arg = e.definition;\n            sArgs = {};\n            //setup default values\n            for (s = 0, sl = e.attributeIndexes.length; s < sl; s++)\n                sArgs[e.attributeIndexes[s]] = e.attributes[e.attributeIndexes[s]];\n            //change any based on passed argument\n            for (x = 0; x < xl; x++) {\n                sArg = args[x].split('=');\n                sArg[0] = sArg[0].toLowerCase();\n                if (e.attributes[sArg[0]])\n                    sArgs[sArg[0]] = sArg[1];\n                else if (x < e.attributeIndexes.length)\n                    sArgs[e.attributeIndexes[x]] = sArg[0];\n            }\n            for (sArg in sArgs) {\n                if (!sArgs.hasOwnProperty(sArg)) continue;\n                arg = arg.replace('&' + sArg + ';', sArgs[sArg]);\n            }\n            if (!e.empty) {\n                this.mxpState.captured.push([]);\n                this.mxpState.capture++;\n            }\n            //mxpState.hidden = e.hidden;\n            if (e.tag > 19 && e.tag < 100 && this.mxpLines[e.tag].enabled && this.mxpLines[e.tag].definition.length > 0) {\n                arg = this.mxpLines[e.tag].definition + arg;\n                tmp.gagged = this.mxpLines[e.tag].gag;\n            }\n            this.mxpState.gagged = tmp.gagged;\n            this.mxpState.expanded = true;\n            //this.mxpStyles.push(tmp);\n            return { format: null, text: arg };\n        }\n        else if (tag.startsWith('/') && this.mxpElements[tag.substring(1)] && !this.mxpElements[tag.substring(1)].empty) {\n            tag = tag.substring(1);\n            e = this.mxpElements[tag];\n\n            //not open and not in correct lineType\n            if (!e.open && this.mxpState.lineType !== lineType.Secure && this.mxpState.lineType !== lineType.LockSecure && this.mxpState.lineType !== lineType.TempSecure)\n                return null;\n\n            //get captured text\n            if (!e.empty && this.mxpState.capture > 0) {\n                if (this.mxpState.captured.length > 0)\n                    sArg = this.mxpState.captured.pop().join('');\n                this.mxpState.capture--;\n            }\n\n            //tmp = this.ClearMXPToTag(MXPTag.Custom, tag);\n            arg = e.closeDefinition;\n\n            if (e.flag.length > 0) {\n                if (e.flag.length > 4 && e.flag.toLowerCase().startsWith('set '))\n                    this.emit('set-variable', e.flag.substring(4), sArg);\n                this.emit('MXP-flag', e.flag, sArg);\n            }\n            if (e.tag > 19 && e.tag < 100 && this.mxpLines[e.tag].enabled && this.mxpLines[e.tag].closeDefinition.length > 0)\n                arg += this.mxpLines[e.tag].closeDefinition;\n            this.mxpState.gagged = !e.gagged;\n            if (e.empty)\n                return null;\n            this.mxpState.expanded = true;\n            return { format: null, text: arg };\n        }\n        if (this.showInvalidMXPTags) {\n            switch (tag) {\n                case 'IMAGE':\n                case '!AT':\n                case '!ATTLIST':\n                case '!TAG':\n                case '!EL':\n                case '!ELEMENT':\n                case '!EN':\n                case '!ENTITY':\n                case '/V':\n                case '/VAR':\n                case 'V':\n                case 'VAR':\n                case 'GAUGE':\n                case 'STAT':\n                case 'MUSIC':\n                case 'SOUND':\n                case 'EXPIRE':\n                case 'VERSION':\n                case 'USER':\n                case 'PASSWORD':\n                case 'SUPPORT':\n                case 'A':\n                case 'SEND':\n                case 'H1':\n                case 'H2':\n                case 'H3':\n                case 'H4':\n                case 'H5':\n                case 'H6':\n                case '/A':\n                case '/SEND':\n                case '/H1':\n                case '/H2':\n                case '/H3':\n                case '/H4':\n                case '/H5':\n                case '/H6':\n                case 'NOBR':\n                case '/P':\n                case 'P':\n                case 'SBR':\n                case 'RESET':\n                case 'HR':\n                    return null;\n\n            }\n            return { format: null, text: '<' + oTag + '>' };\n        }\n        return null;\n    }\n\n    private cleanMXPExpired(blocks, args) {\n        if (!blocks || blocks.length === 0 || args === null)\n            return;\n        const bl = blocks.length;\n        for (let b = 0; b < bl; b++) {\n            let format = blocks[b];\n            //not a link move on\n            if (format.formatType !== FormatType.MXPSend && format.formatType !== FormatType.MXPLink)\n                continue;\n            //only clean if no argument or matching expire\n            if (args.length === 0 || format.expire === args) {\n                let eType, n = 0, f = 0;\n                //store current type for nest testing\n                let type = format.formatType;\n                //get end tag format type\n                if (format.formatType === FormatType.MXPLink)\n                    eType = FormatType.MXPLinkEnd;\n                else\n                    eType = FormatType.MXPSendEnd;\n                //set link to expired\n                format.formatType = FormatType.MXPExpired;\n                //loop remaining tags looking for send tag, ignoring any nested tags\n                for (; f < bl; f++) {\n                    if (blocks[f].formatType === eType) {\n                        //not nested so end tag, set to be skipped\n                        if (n === 0) {\n                            blocks[f].formatType = FormatType.MXPSkip;\n                            break;\n                        }\n                        else\n                            n--;\n                    }\n                    else if (blocks[f] === type)\n                        n++;\n                }\n                //if did not find end tag, malformed MXP continue on\n            }\n        }\n    }\n\n    private GetCloseTags(tag) {\n        if (typeof tag === 'undefined' || tag.length === 0)\n            return '';\n        let idx = 0;\n        const tl = tag.length;\n        const ts = [];\n        let str = [];\n        let c;\n        let state = 0;\n        for (; idx < tl; idx++) {\n            c = tag.charAt(idx);\n            switch (state) {\n                case 1:\n                    if (c === ' ') {\n                        ts.push(str.join(''));\n                        str = [];\n                        state = 2;\n                    }\n                    else if (c === '>') {\n                        ts.push(str.join(''));\n                        str = [];\n                        state = 0;\n                    }\n                    else\n                        str.push(c);\n                    break;\n                case 2:\n                    //ignore every thing til a >\n                    if (c === '>')\n                        state = 0;\n                    break;\n                default:\n                    //only care about tags\n                    if (c === '<')\n                        state = 1;\n                    break;\n            }\n        }\n        if (state === 1)\n            ts.push(str.join(''));\n        if (ts.length === 0)\n            return '';\n        return '</' + ts.reverse().join('></') + '>';\n    }\n\n    private CloneCurrentStyle() {\n        let tmp: MXPStyle;\n        if (this.mxpStyles.length === 0)\n            this.mxpStyles.push(new MXPStyle(FontStyle.None, '', '', false));\n        tmp = this.mxpStyles[this.mxpStyles.length - 1];\n        if (this.mxpLines[this.mxpState.lineType] && this.mxpLines[this.mxpState.lineType].enabled)\n            tmp.gagged = this.mxpLines[this.mxpState.lineType].gag;\n        return <MXPStyle>Object.assign({}, tmp);\n    }\n\n    private GetCurrentStyle() {\n        let tmp: MXPStyle;\n        if (this.mxpStyles.length === 0)\n            this.mxpStyles.push(new MXPStyle(FontStyle.None, '', '', false));\n        tmp = this.mxpStyles[this.mxpStyles.length - 1];\n        if (this.mxpLines[this.mxpState.lineType] && this.mxpLines[this.mxpState.lineType].enabled)\n            tmp.gagged = this.mxpLines[this.mxpState.lineType].gag;\n        return tmp;\n    }\n\n    public DecreaseColor(clr, p) {\n        const color = new RGBColor(clr);\n        if (!color.ok) return clr;\n        color.b -= Math.ceil(color.b * p);\n        if (color.b < 0)\n            color.b = 0;\n        color.g -= Math.ceil(color.g * p);\n        if (color.g < 0)\n            color.g = 0;\n        color.r -= Math.ceil(color.r * p);\n        if (color.r < 0)\n            color.r = 0;\n        return color.toRGB();\n    }\n\n    public IncreaseColor(clr, p) {\n        const color = new RGBColor(clr);\n        if (!color.ok) return clr;\n        color.b += Math.ceil(color.b * p);\n        if (color.b > 255)\n            color.b = 255;\n        color.g += Math.ceil(color.g * p);\n        if (color.g > 255)\n            color.g = 255;\n        color.r += Math.ceil(color.r * p);\n        if (color.r > 255)\n            color.r = 255;\n        return color.toRGB();\n    }\n\n    private MXPCapture(str) {\n        if (this.mxpState.capture < 1) return;\n        const il = this.mxpState.captured.length;\n        for (let i = 0; i < il; i++)\n            this.mxpState.captured[i].push(str);\n    }\n\n    private MXPDeCapture(cnt) {\n        if (this.mxpState.capture < 1) return;\n        const il = this.mxpState.captured.length;\n        for (let i = 0; i < il; i++) {\n            for (let p = 0; p < cnt; p++)\n                this.mxpState.captured[i].pop();\n        }\n    }\n\n    private isNumber(str) {\n        return (/^\\d+$/).test(str);\n    }\n\n    /**\n     * CurrentAnsiCode - return an ansi formatted code based on current ansi state\n     *\n     * @returns {String}\n     */\n    public CurrentAnsiCode() {\n        let ansi = '\\x1b[';\n        if (typeof this._CurrentForeColor === 'string')\n            ansi += '38;2;' + this._CurrentForeColor;\n        else if (this._CurrentForeColor <= -16)\n            ansi += '38;5;' + (this._CurrentForeColor * -1 - 16) + ';';\n        else\n            ansi += this._CurrentForeColor + ';';\n        if (typeof this._CurrentBackColor === 'string')\n            ansi += '48;2;' + this._CurrentBackColor;\n        else if (this._CurrentBackColor <= -16)\n            ansi += '38;5;' + (this._CurrentBackColor * -1 - 16) + ';';\n        else\n            ansi += this._CurrentBackColor + ';';\n        if (this._CurrentAttributes > 0) {\n            if ((this._CurrentAttributes & FontStyle.Inverse) === FontStyle.Inverse)\n                ansi += '7;';\n            if ((this._CurrentAttributes & FontStyle.Bold) === FontStyle.Bold)\n                ansi += '1;';\n            if ((this._CurrentAttributes & FontStyle.Italic) === FontStyle.Italic)\n                ansi += '3;';\n            if ((this._CurrentAttributes & FontStyle.Underline) === FontStyle.Underline)\n                ansi += '4;';\n            if ((this._CurrentAttributes & FontStyle.Slow) === FontStyle.Slow)\n                ansi += '5;';\n            if ((this._CurrentAttributes & FontStyle.Rapid) === FontStyle.Rapid)\n                ansi += '6;';\n            if ((this._CurrentAttributes & FontStyle.Strikeout) === FontStyle.Strikeout)\n                ansi += '9;';\n            if ((this._CurrentAttributes & FontStyle.Faint) === FontStyle.Faint)\n                ansi += '2;';\n            if ((this._CurrentAttributes & FontStyle.DoubleUnderline) === FontStyle.DoubleUnderline)\n                ansi += '21;';\n            if ((this._CurrentAttributes & FontStyle.Overline) === FontStyle.Overline)\n                ansi += '53;';\n        }\n        return ansi + 'm';\n    }\n\n    public get parseQueueLength() {\n        return this.parsing.length;\n    }\n\n    public get parseQueueEndOfLine() {\n        if (this.parsing.length)\n            return this.parsing[this.parsing.length - 1][0].endsWith('\\n');\n        return false;\n    }\n\n    public parse(text: string, remote?: boolean, force?: boolean, prependSplit?: boolean) {\n        if (text == null || text.length === 0)\n            return text;\n        if (remote == null) remote = false;\n        //query data in case already parsing\n        if (this.parsing.length > 0 && !force) {\n            this.parsing.push([text, remote, prependSplit]);\n            return;\n        }\n        let _TermTitle = '';\n        let _TermTitleType = null;\n        let _AnsiParams = null;\n        let stringBuilder = [];\n        let formatBuilder = [];\n        let rawBuilder = [];\n        let state: ParserState = ParserState.None;\n        let pState: ParserState = ParserState.None;\n        let lineLength = 0;\n        let iTmp;\n        let mOffset = 0;\n        let _MXPTag;\n        let _MXPOTag;\n        let _MXPEntity;\n        let _MXPComment;\n        let _MXPArgs;\n        let skip = false;\n        this.busy = true;\n        this.parsing.unshift([text, remote, prependSplit]);\n        let format;\n        if (this._SplitBuffer.length > 0) {\n            if (prependSplit)\n                text = text + this._SplitBuffer;\n            else\n                text = this._SplitBuffer + text;\n            this._SplitBuffer = '';\n        }\n        //not end of line but text, so fragment, re-get and re-parse to ensure proper triggering\n        if (!this.EndOfLine && (this.textLength > 0 || this.rawLength > 0)) {\n            let lines = this.display.lines;\n            if (lines.length > 0) {\n                iTmp = this.display.lines[lines.length - 1].text;\n                _MXPComment = this.display.lines[lines.length - 1].raw;\n                formatBuilder.push.apply(formatBuilder, this.display.lines[lines.length - 1].formats);\n                //remove line but do not change selection as line will be re-added back at the end\n                this.display.removeLine(lines.length - 1, true);\n                format = formatBuilder[formatBuilder.length - 1];\n                if (format.formatType === FormatType.Link) {\n                    formatBuilder.pop();\n                    format = formatBuilder[formatBuilder.length - 1];\n                }\n                format.width = 0;\n                format.height = 0;\n                format.marginWidth = 0;\n                format.marginHeight = 0;\n                lineLength = format.offset;\n                if (format.offset !== 0) {\n                    stringBuilder.push(iTmp.substring(0, format.offset));\n                    iTmp = iTmp.substring(format.offset);\n                    if (this.mxpState.locked || this.mxpState.on)\n                        mOffset = iTmp.length;\n                    text = iTmp + text;\n                }\n                else {\n                    if (this.mxpState.locked || this.mxpState.on)\n                        mOffset = iTmp.length;\n                    text = iTmp + text;\n                }\n                if (_MXPComment.endsWith(iTmp))\n                    rawBuilder.push(_MXPComment.substr(0, _MXPComment.length - iTmp.length));\n                else\n                    rawBuilder.push(_MXPComment);\n            }\n            else\n                formatBuilder.push(format = this.getFormatBlock(lineLength));\n            lines = null;\n        }\n        else\n            formatBuilder.push(format = this.getFormatBlock(lineLength));\n        let idx = 0;\n        let tl = text.length;\n        let c: string;\n        let i: number;\n        const e: boolean = this.emulateControlCodes;\n        const d: boolean = this.displayControlCodes;\n        const f: boolean = this.emulateTerminal;\n        const u: boolean = this.enableURLDetection;\n        const s: boolean = this.enableMSP;\n        const tabWidth: number = this.tabWidth;\n        let lnk = 0;\n        let fLnk = 0;\n        let lnkOffset = 0;\n        let lLnk = 0;\n        let lNest = null;\n        let p;\n        const pl = this.protocols.length;\n        try {\n            for (idx = 0; idx < tl; idx++) {\n                c = text.charAt(idx);\n                i = text.charCodeAt(idx);\n                if (idx >= mOffset)\n                    rawBuilder.push(c);\n                this.rawLength++;\n                switch (state) {\n                    case ParserState.AnsiParams:\n                        if (\n                            c === 'C' ||  //Move cursor # spaces\n                            c === 'K' || //Clear screen Left/Right\n                            c === 's' || //save cursor position: non-standard\n                            c === 'u' ||  //save cursor position: non-standard\n                            c === 'l' ||  //XTerm ?#l Private Mode Reset/Reset Mode #l\n                            c === 'h' ||  //XTerm ?#h Private Mode/Set Mode #h\n                            c === 'A' ||  //Move cursor up N lines\n                            c === 'B' ||  //Move cursor down N lines\n                            c === 'D' ||  //Move cursor left N spaces\n                            c === 'E' ||  //Moves cursor to beginning of the line n (default 1) lines down (next line).\n                            c === 'F' ||  //Moves cursor to beginning of the line n (default 1) lines up (previous line).\n                            c === 'f' ||  //Moves the cursor to row n, column m. Both default to 1 if omitted. Same as CUP\n                            c === 'G' ||  //Moves the cursor to column n.\n                            c === 'H' ||  //Moves the cursor to row n, column m. The values are 1-based, and default to 1 (top left corner) if omitted. A sequence such as CSI ;5H is a synonym for CSI 1;5H as well as CSI 17;H is the same as CSI 17H and CSI 17;1H\n                            c === 'n' ||  //Reports the cursor position to the application as (as though typed at the keyboard) ESC[n;mR, where n is the row and m is the column. (May not work on MS-DOS.)\n                            c === 'S' ||  //Scroll whole page up by n (default 1) lines. New lines are added at the bottom. (not ANSI.SYS)\n                            c === 'T' ||  //Scroll whole page down by n (default 1) lines. New lines are added at the top. (not ANSI.SYS)\n                            c === 'r'//SET SCROLLING REGION\n                        ) {\n                            this.ClearMXPOpen();\n                            this._SplitBuffer = '';\n                            _AnsiParams = null;\n                            state = ParserState.None;\n                        }\n                        else if (c === 'z') //mxp\n                        {\n                            //incase they put in a ; like e[1;z, e[1;7z or even e[;1z\n                            _MXPTag = _AnsiParams.split(';');\n                            //we only want the last valid #\n                            //start as 0 in cause invalid # or code\n                            _AnsiParams = 0;\n                            for (let mt = _MXPTag.length - 1; mt >= 0; mt--) {\n                                if (_MXPTag[mt].length > 0) {\n                                    _AnsiParams = _MXPTag[0];\n                                    break;\n                                }\n                            }\n                            iTmp = +_AnsiParams;\n                            if (isNaN(iTmp)) iTmp = 0;\n                            this.mxpState.on = true;\n                            this.mxpState.noBreak = false;\n                            this.mxpState.paragraph = false;\n                            if (this.mxpState.lineType === lineType.Open)\n                                this.ClearMXPOpen();\n                            switch (iTmp) {\n                                case 2:\n                                    this.mxpState.on = false;\n                                    this.mxpState.locked = false;\n                                    this.mxpState.lineType = lineType.Locked;\n                                    this.ClearMXPOpen();\n                                    break;\n                                case 3:\n                                    this.ResetMXP();\n                                    break;\n                                case 4:\n                                    this.mxpState.lineType = lineType.TempSecure;\n                                    if (idx + 1 >= tl) {\n                                        this._SplitBuffer += c;\n                                        break;\n                                    }\n                                    const ct = text.charAt(idx + 1);\n                                    if (ct !== '<') {\n                                        this.mxpState.lineType = lineType.Open;\n                                        this.mxpState.on = false;\n                                    }\n                                    this.mxpState.locked = false;\n                                    this.ClearMXPOpen();\n                                    break;\n                                case 5:\n                                    this.iMXPDefaultMode = lineType.Open;\n                                    this.mxpState.locked = true;\n                                    this.mxpState.lineType = lineType.LockOpen;\n                                    this.ClearMXPOpen();\n                                    break;\n                                case 6:\n                                    this.iMXPDefaultMode = lineType.Secure;\n                                    this.mxpState.lineType = lineType.LockSecure;\n                                    this.mxpState.locked = true;\n                                    this.ClearMXPOpen();\n                                    break;\n                                case 7:\n                                    this.iMXPDefaultMode = lineType.Locked;\n                                    this.mxpState.lineType = lineType.LockLocked;\n                                    this.mxpState.locked = true;\n                                    this.ClearMXPOpen();\n                                    break;\n                                default:\n                                    //invalid line so reset\n                                    if (iTmp < 0 || iTmp > 99)\n                                        this.ClearMXPOpen();\n                                    else {\n                                        this.mxpState.lineType = iTmp;\n                                        this.mxpState.locked = false;\n                                        //custom element linked to tag so expanded it into the line\n                                        if (this.mxpLines[this.mxpState.lineType] && this.mxpLines[this.mxpState.lineType].enabled) {\n                                            //strBuilder.push(EndDisplayBlock());\n                                            //strBuilder.push(StartDisplayBlock(lineLength));\n                                            iTmp = '';\n                                            if (this.mxpLines[this.mxpState.lineType].element.length > 0)\n                                                iTmp += '<' + this.mxpLines[this.mxpState.lineType].element + '>';\n                                            if (this.mxpLines[this.mxpState.lineType].definition.length > 0)\n                                                iTmp += this.mxpLines[this.mxpState.lineType].definition;\n                                            if (iTmp.length > 0) {\n                                                text = text.splice(idx + 1, iTmp);\n                                                tl = text.length;\n                                            }\n                                        }\n                                    }\n                                    break;\n                            }\n                            this._SplitBuffer = '';\n                            _AnsiParams = null;\n                            state = ParserState.None;\n                        }\n                        else if (c === 'J')  //Clear screen Up/Down\n                        {\n                            this.ClearMXPOpen();\n                            if (_AnsiParams.length > 0) {\n                                if (+_AnsiParams === 2) {\n                                    lineLength = 0;\n                                    iTmp = this.window.height;\n                                    formatBuilder.push(...this.getMXPCloseFormatBlocks());\n                                    this.AddLine(stringBuilder.join(''), rawBuilder.join(''), false, false, formatBuilder, remote);\n                                    stringBuilder = [];\n                                    rawBuilder = [];\n                                    formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength), ...this.getMXPCloseFormatBlocks()];\n                                    for (let j = 0; j < iTmp; j++) {\n                                        this.AddLine('', '\\n', false, false, formatBuilder, remote);\n                                        this.MXPCapture('\\n');\n                                    }\n                                    this.textLength += iTmp;\n                                    this.mxpState.noBreak = false;\n                                }\n                            }\n                            formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                            this._SplitBuffer = '';\n                            _AnsiParams = null;\n                            state = ParserState.None;\n                        }\n                        else if (c === 'm') {\n                            this.ProcessAnsiColorParams(_AnsiParams.split(';'));\n                            formatBuilder.push(format = this.getFormatBlock(lineLength));\n                            this._SplitBuffer = '';\n                            _AnsiParams = null;\n                            state = ParserState.None;\n                        }\n                        else if (c === '\\n' || c === '\\x1b') {\n                            //malformed code\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            //Abnormal end, discard\n                            state = ParserState.None;\n                            this._SplitBuffer = '';\n                            if (this.mxpState.on && c === '\\n')\n                                this.ClearMXPOpen();\n                        }\n                        else {\n                            this._SplitBuffer += c;\n                            _AnsiParams += c;\n                        }\n                        break;\n                    case ParserState.XTermTitle:\n                        if (i === 7) {\n                            this._SplitBuffer = '';\n                            this.emit('set-title', _TermTitle, _TermTitleType == null ? 0 : _TermTitleType);\n                            _TermTitle = '';\n                            _TermTitleType = null;\n                            state = ParserState.None;\n                        }\n                        else if (c === ';' && _TermTitleType == null) {\n                            _TermTitleType = +_TermTitle;\n                            if (isNaN(_TermTitleType))\n                                _TermTitleType = 0;\n                            _TermTitle = '';\n                            this._SplitBuffer += c;\n                        }\n                        else if (c === '\\x1b') {\n                            if (this._SplitBuffer.charAt(this._SplitBuffer.length - 1) === '\\n')\n                                this._SplitBuffer = '';\n                        }\n                        else {\n                            this._SplitBuffer += c;\n                            _TermTitle += c;\n                        }\n                        break;\n                    case ParserState.Ansi:\n                        if (c === '[') {\n                            this._SplitBuffer += c;  //store in split buffer incase split command\n                            _AnsiParams = '';\n                            state = ParserState.AnsiParams;\n                        }\n                        /*\n                        else if(c === ']')\n                        {\n                          _SplitBuffer = '';\n                          state = ParserState.None;\n                        }\n                        */\n                        else if (c === ']') {\n                            this._SplitBuffer += c;  //store in split buffer incase split command\n                            _TermTitle = '';\n                            state = ParserState.XTermTitle;\n                        }\n                        //Unsupported VT100 so skip them\n                        else if (\n                            c === 'D' || //Index ( down one line, scroll if at bottom )\n                            c === 'E' || //Next line ( move to column 1 of next line, scroll up if at bottom )\n                            c === 'M' || //Reverse index\t( up one line, scroll down if at top )\n                            c === '1' || //Graphic proc. option ON\n                            c === '2' || //Graphic proc. option OFF\n                            c === '7' || //Save cursor & attributes\n                            c === '8' || //Restore cursor & attributes\n                            c === '>' || //Keypad mode\t\tNumeric\n                            c === '=' || //Keypad mode\t\tApplication\n                            /*\n                            *LINE SIZE COMMANDS\n                            *<ESC>#3 Change current line to double-height top half\n                            *<ESC>#4 Change current line to double-height bottom half\n                            *<ESC>#5 Change current line to single-width single-height (normal)\n                            *<ESC>#6 Change current line to double-width single-height\n                            */\n                            c === '#'\n                        ) {\n                            if (d) {\n                                stringBuilder.push('\\u241B');\n                                if (i < 16) {\n                                    stringBuilder.push(String.fromCharCode(parseInt('240' + i.toString(16), 16)));\n                                    this.MXPCapture('&#x241B&#x240' + i.toString(16) + ';');\n                                }\n                                else {\n                                    stringBuilder.push(String.fromCharCode(parseInt('24' + i.toString(16), 16)));\n                                    this.MXPCapture('&#x241B&#x24' + i.toString(16) + ';');\n                                }\n                                lineLength += 2;\n                                this.textLength += 2;\n                                this.mxpState.noBreak = false;\n                            }\n                            state = ParserState.None;\n                            this._SplitBuffer = '';\n                        }\n                        break;\n                    case ParserState.MXPTag:\n                        if (_MXPTag === '!--') {\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            pState = ParserState.None;\n                            state = ParserState.MXPComment;\n                            _MXPComment = '<!--';\n                            _MXPTag = '';\n                            _MXPArgs = [];\n                        }\n                        else if (_MXPTag.endsWith('<!--')) {\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            pState = state;\n                            state = ParserState.MXPComment;\n                            _MXPComment = '<!--';\n                            _MXPTag = _MXPTag.substring(0, _MXPTag.length - 4);\n                            _MXPArgs = [];\n                        }\n                        else if (c === '\"') {\n                            state = ParserState.MXPTagDblQuoted;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                            this._SplitBuffer += c;\n                        }\n                        else if (c === '\\'') {\n                            state = ParserState.MXPTagQuoted;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                            this._SplitBuffer += c;\n                        }\n                        else if (c === '&') {\n                            _MXPEntity = '';\n                            pState = state;\n                            state = ParserState.MXPEntity;\n                            this._SplitBuffer = '';\n                        }\n                        else if (c === '\\n' || c === '\\x1b') {\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            //Abnormal end, discard\n                            state = ParserState.None;\n                            this._SplitBuffer = '';\n                            if (this.mxpState.on && c === '\\n')\n                                this.ClearMXPOpen();\n                        }\n                        else if (c === ' ') {\n                            state = ParserState.MXPTagArg;\n                            _MXPArgs.push('');\n                            this._SplitBuffer += c;\n                        }\n                        else if (c === '>') {\n                            _MXPOTag = _MXPTag;\n                            _MXPTag = _MXPTag.toUpperCase();\n                            if (_MXPTag === 'HR' && (this.mxpState.lineType === lineType.Secure || this.mxpState.lineType === lineType.LockSecure || this.mxpState.lineType === lineType.TempSecure)) {\n                                if (lineLength > 0) {\n                                    lineLength = 0;\n                                    this.MXPCapture('\\n');\n                                    formatBuilder.push(...this.getMXPCloseFormatBlocks());\n                                    this.AddLine(stringBuilder.join(''), rawBuilder.join(''), false, false, formatBuilder, remote);\n                                    stringBuilder = [];\n                                    rawBuilder = [];\n                                    formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                                }\n                                //skip = text.charAt(idx + 1) === '\\n';\n                                _MXPTag = this.getMXPBlock(_MXPTag, [], remote);\n                                if (_MXPTag && _MXPTag.format) {\n                                    _MXPTag.format.offset = lineLength;\n                                    formatBuilder.push(_MXPTag.format);\n                                    formatBuilder[0].hr = _MXPTag.format.hr;\n                                }\n                                formatBuilder.push(...this.getMXPCloseFormatBlocks());\n                                this.AddLine(stringBuilder.join(''), rawBuilder.join(''), false, false, formatBuilder, remote);\n                                this.textLength++;\n                                stringBuilder = [];\n                                rawBuilder = [];\n                                formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                            }\n                            else if (_MXPTag === 'BR' && (this.mxpState.lineType === lineType.Secure || this.mxpState.lineType === lineType.LockSecure || this.mxpState.lineType === lineType.TempSecure)) {\n                                this.MXPCapture('\\n');\n                                formatBuilder.push(...this.getMXPCloseFormatBlocks());\n                                this.AddLine(stringBuilder.join(''), rawBuilder.join(''), false, false, formatBuilder, remote);\n                                skip = false;\n                                lineLength = 0;\n                                stringBuilder = [];\n                                rawBuilder = [];\n                                formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                                this.textLength++;\n                            }\n                            else if (_MXPTag === 'IMAGE' && (this.mxpState.lineType === lineType.Secure || this.mxpState.lineType === lineType.LockSecure || this.mxpState.lineType === lineType.TempSecure)) {\n                                _MXPTag = this.getMXPBlock(_MXPTag, _MXPArgs, remote);\n                                if (_MXPTag && _MXPTag.format !== null) {\n                                    formatBuilder.push(_MXPTag.format);\n                                    lineLength += _MXPTag.length;\n                                    this.textLength += _MXPTag.length;\n                                }\n                                formatBuilder.push(format = this.getFormatBlock(lineLength));\n                            }\n                            else {\n                                _MXPTag = this.getMXPBlock(_MXPTag, [], remote, _MXPOTag, formatBuilder);\n                                if (this.mxpState.expanded) {\n                                    if (_MXPTag && _MXPTag.text !== null) text = text.splice(idx + 1, _MXPTag.text);\n                                    tl = text.length;\n                                    this.mxpState.expanded = false;\n                                    state = ParserState.None;\n                                    _MXPTag = '';\n                                    this._SplitBuffer = '';\n                                    continue;\n                                }\n                                if (_MXPTag) {\n                                    if (_MXPTag.format) {\n                                        _MXPTag.format.offset = lineLength;\n                                        formatBuilder.push(_MXPTag.format);\n                                    }\n                                    formatBuilder.push(format = this.getFormatBlock(lineLength));\n                                    if (_MXPTag.text !== null && _MXPTag.text.length > 0) {\n                                        stringBuilder.push(_MXPTag.text);\n                                        lineLength += _MXPTag.text.length;\n                                        this.textLength += _MXPTag.text.length;\n                                    }\n                                }\n                                else\n                                    formatBuilder.push(format = this.getFormatBlock(lineLength));\n                            }\n                            state = ParserState.None;\n                            this._SplitBuffer = '';\n                        }\n                        //Malformed broken so just display it\n                        else if (c === '<') {\n                            if (this.enableDebug)\n                                this.emit('debug', 'Malformed MXP Tag: ' + _MXPTag);\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            stringBuilder.push('<' + _MXPTag);\n                            lineLength += _MXPTag.length + 1;\n                            this.textLength += _MXPTag.length + 1;\n                            state = ParserState.None;\n                            this._SplitBuffer = '';\n                        }\n                        else {\n                            this._SplitBuffer += c;\n                            _MXPTag += c;\n                        }\n                        break;\n                    case ParserState.MXPTagQuoted:\n                        if (c === '\\'') {\n                            state = ParserState.MXPTagArg;\n                            this._SplitBuffer += c;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                        }\n                        else {\n                            this._SplitBuffer += c;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                        }\n                        break;\n                    case ParserState.MXPTagDblQuoted:\n                        if (c === '\"') {\n                            state = ParserState.MXPTagArg;\n                            this._SplitBuffer += c;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                        }\n                        else {\n                            this._SplitBuffer += c;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                        }\n                        break;\n                    case ParserState.MXPTagArg:\n                        if (c === '\\'') {\n                            state = ParserState.MXPTagQuoted;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                            this._SplitBuffer += c;\n                        }\n                        else if (c === '\"') {\n                            state = ParserState.MXPTagDblQuoted;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                            this._SplitBuffer += c;\n                        }\n                        else if (c === '\\n' || c === '\\x1b') {\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            //Abnormal end, discard\n                            state = ParserState.None;\n                            this._SplitBuffer = '';\n                            if (this.mxpState.on && c === '\\n')\n                                this.ClearMXPOpen();\n                        }\n                        else if (c === ' ') {\n                            state = ParserState.MXPTagArg;\n                            _MXPArgs.push('');\n                            this._SplitBuffer += c;\n                        }\n                        else if (c === '>') {\n                            if (_MXPTag.toUpperCase() === 'IMAGE' && (this.mxpState.lineType === lineType.Secure || this.mxpState.lineType === lineType.LockSecure || this.mxpState.lineType === lineType.TempSecure)) {\n                                _MXPTag = this.getMXPBlock(_MXPTag, _MXPArgs, remote, _MXPTag);\n                                if (_MXPTag !== null && _MXPTag.format !== null) {\n                                    _MXPTag.format.offset = lineLength;\n                                    formatBuilder.push(_MXPTag.format);\n                                }\n                                formatBuilder.push(format = this.getFormatBlock(lineLength));\n                            }\n                            else {\n                                _MXPTag = this.getMXPBlock(_MXPTag, _MXPArgs, remote, _MXPTag, formatBuilder);\n                                if (this.mxpState.expanded) {\n                                    if (_MXPTag !== null) text = text.splice(idx + 1, _MXPTag.text);\n                                    tl = text.length;\n                                    this.mxpState.expanded = false;\n                                    state = ParserState.None;\n                                    this._SplitBuffer = '';\n                                    continue;\n                                }\n                                if (_MXPTag !== null) {\n                                    if (_MXPTag !== null && _MXPTag.format) {\n                                        _MXPTag.format.offset = lineLength;\n                                        formatBuilder.push(_MXPTag.format);\n                                    }\n                                    formatBuilder.push(format = this.getFormatBlock(lineLength));\n                                    if (_MXPTag.text !== null) {\n                                        stringBuilder.push(_MXPTag.text);\n                                        lineLength += _MXPTag.text.length;\n                                        this.textLength += _MXPTag.text.length;\n                                    }\n                                }\n                                else\n                                    formatBuilder.push(format = this.getFormatBlock(lineLength));\n                            }\n                            state = ParserState.None;\n                            this._SplitBuffer = '';\n                        }\n                        else {\n                            this._SplitBuffer += c;\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                        }\n                        break;\n                    case ParserState.MXPEntity:\n                        if (c === '\\n' || c === '\\x1b') {\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            if (this.enableDebug) this.emit('debug', 'MXP Entity: ' + _MXPEntity);\n                            if (<ParserState>pState === ParserState.MXPTag) {\n                                _MXPTag += '&' + _MXPEntity;\n                                state = pState;\n                            }\n                            else {\n                                _MXPEntity = this.GetEntity(_MXPEntity);\n                                if (this.mxpState.expanded) {\n                                    if (_MXPTag !== null)\n                                        text = text.splice(idx + 1, _MXPEntity);\n                                    tl = text.length;\n                                    this.mxpState.expanded = false;\n                                    state = ParserState.None;\n                                    this._SplitBuffer = '';\n                                    continue;\n                                }\n                                _MXPOTag = htmlDecode('&' + _MXPEntity);\n                                stringBuilder.push(_MXPOTag);\n                                this.MXPCapture('&' + _MXPEntity);\n                                lineLength += _MXPOTag.length;\n                                this.textLength += _MXPOTag.length;\n                                this.mxpState.noBreak = false;\n                                //Abnormal end, send as is\n                                state = ParserState.None;\n                                this._SplitBuffer = '';\n                                format.unicode = true;\n                            }\n                            if (this.mxpState.on && c === '\\n')\n                                this.ClearMXPOpen();\n                        }\n                        else if (c === ';') {\n                            if (this.enableDebug) this.emit('debug', 'MXP Entity: ' + _MXPEntity);\n                            if (<ParserState>pState !== ParserState.MXPTag) {\n                                _MXPEntity = this.GetEntity(_MXPEntity);\n                                if (this.mxpState.expanded) {\n                                    text = text.splice(idx + 1, _MXPEntity);\n                                    tl = text.length;\n                                    this.mxpState.expanded = false;\n                                    state = pState;\n                                    this._SplitBuffer = '';\n                                    continue;\n                                }\n                                _MXPOTag = htmlDecode('&' + _MXPEntity + ';');\n                                stringBuilder.push(_MXPOTag);\n                                this.MXPCapture('&');\n                                this.MXPCapture(_MXPEntity);\n                                this.MXPCapture(';');\n                                lineLength += _MXPOTag.length;\n                                this.textLength += _MXPOTag.length;\n                                this.mxpState.noBreak = false;\n                                this._SplitBuffer = '';\n                            }\n                            else\n                                _MXPTag += '&' + _MXPEntity + ';';\n                            format.unicode = true;\n                            state = pState;\n                        }\n                        //malformed entity\n                        else if (c === '&') {\n                            if (this.enableDebug) this.emit('debug', 'Malformed MXP Entity: ' + _MXPEntity);\n                            if (<ParserState>pState !== ParserState.MXPTag) {\n                                stringBuilder.push('&' + _MXPEntity);\n                                this.MXPCapture('&');\n                                this.MXPCapture(_MXPEntity);\n                                lineLength += _MXPEntity.length + 1;\n                                this.textLength += _MXPEntity.length + 1;\n                                this.mxpState.noBreak = false;\n                                this._SplitBuffer = '';\n                                idx--;\n                                rawBuilder.pop();\n                                this.rawLength--;\n                            }\n                            else\n                                _MXPTag += '&' + _MXPEntity;\n                            format.unicode = true;\n                            state = pState;\n                        }\n                        else {\n                            this._SplitBuffer += c;\n                            _MXPEntity += c;\n                        }\n                        break;\n                    case ParserState.MXPComment:\n                        if (_MXPComment.endsWith('-->')) {\n                            if (this.enableDebug) this.emit('debug', 'MXP Comment: ' + _MXPComment);\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            state = pState;\n                            if (state === ParserState.None)\n                                this._SplitBuffer = '';\n                            _MXPComment = '';\n                        }\n                        else if (c === '\\n' || c === '\\x1b') {\n                            if (this.enableDebug) this.emit('debug', 'MXP Comment: ' + _MXPComment);\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            state = pState;\n                            _MXPComment = '';\n                            if (this.mxpState.on && c === '\\n')\n                                this.ClearMXPOpen();\n                        }\n                        else\n                            _MXPComment += c;\n                        break;\n                    case ParserState.URL:\n                        if (idx > lnk + 2) {\n                            stringBuilder.pop();\n                            stringBuilder.pop();\n                            rawBuilder.pop();\n                            rawBuilder.pop();\n                            this.rawLength -= 2;\n                            lineLength -= 2;\n                            this.textLength -= 2;\n                            this.MXPDeCapture(2);\n                            idx = lnk;\n                            state = ParserState.None;\n                        }\n                        else if (c === '/') {\n                            stringBuilder.push(c);\n                            this.MXPCapture(c);\n                            lineLength++;\n                            this.textLength++;\n                            if (idx === lnk + 2) {\n                                state = ParserState.URLFound;\n                                //Found :// so valid url\n                                lnk = stringBuilder.length - 4;\n                                lLnk = stringBuilder.length - 1;\n                                fLnk = formatBuilder.length;\n                                lnkOffset -= 2;\n                                while (lnk > 0 && CharAllowedInURL(stringBuilder[lnk], true)) {\n                                    lnk--;\n                                    lnkOffset--;\n                                }\n                                if (!CharAllowedInURL(stringBuilder[lnk], true)) {\n                                    lnk++;\n                                    lnkOffset++;\n                                }\n                                lNest = [];\n                                if (lnk > 0 && stringBuilder[lnk - 1] === '(')\n                                    lNest.push(')');\n                                if (lnk > 0 && stringBuilder[lnk - 1] === '[')\n                                    lNest.push(']');\n                            }\n                        }\n                        else if (idx > lnk + 1) {\n                            stringBuilder.pop();\n                            rawBuilder.pop();\n                            this.rawLength--;\n                            lineLength--;\n                            this.textLength--;\n                            this.MXPDeCapture(1);\n                            idx = lnk;\n                            state = ParserState.None;\n                        }\n                        else {\n                            idx = lnk;\n                            state = ParserState.None;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                        }\n                        break;\n                    case ParserState.URLFound:\n                        if (!CharAllowedInURL(c, false)) {\n                            if (lLnk !== stringBuilder.length - 1) {\n                                _MXPComment += stringBuilder.slice(lnk).join('');\n                                if (this.enableDebug) this.emit('debug', 'URL Found: ' + _MXPComment);\n                                formatBuilder.splice(fLnk, 0,\n                                    {\n                                        formatType: FormatType.Link,\n                                        offset: lnkOffset,\n                                        href: _MXPComment\n                                    });\n                                formatBuilder.push({\n                                    formatType: FormatType.LinkEnd,\n                                    offset: lineLength,\n                                    href: _MXPComment\n                                });\n                                formatBuilder.push(format = this.getFormatBlock(lineLength));\n                            }\n                            state = ParserState.None;\n                            idx--;\n                            rawBuilder.pop();\n                            this.rawLength--;\n                        }\n                        else {\n                            if (lNest.length > 1 && lNest[lNest.length - 1] === c) {\n                                lNest.pop();\n                                stringBuilder.push(c);\n                                this.MXPCapture(c);\n                                lineLength++;\n                                this.textLength++;\n                                if (i > 255)\n                                    format.unicode = true;\n                            }\n                            else if (lNest.length > 0 && c === '(') {\n                                lNest.push(')');\n                                stringBuilder.push(c);\n                                this.MXPCapture(c);\n                                lineLength++;\n                                this.textLength++;\n                                if (i > 255)\n                                    format.unicode = true;\n                            }\n                            else if (lNest.length > 0 && c === '[') {\n                                lNest.push(']');\n                                stringBuilder.push(c);\n                                this.MXPCapture(c);\n                                lineLength++;\n                                this.textLength++;\n                                if (i > 255)\n                                    format.unicode = true;\n                            }\n                            else if (lNest.length === 1 && lNest[lNest.length - 1] === c) {\n                                if (lLnk !== stringBuilder.length - 1) {\n                                    _MXPComment += stringBuilder.slice(lnk).join('');\n                                    if (this.enableDebug) this.emit('debug', 'URL Found: ' + _MXPComment);\n                                    formatBuilder.splice(fLnk, 0,\n                                        {\n                                            formatType: FormatType.Link,\n                                            href: _MXPComment,\n                                            offset: lnkOffset\n                                        });\n                                    formatBuilder.push({\n                                        formatType: FormatType.LinkEnd,\n                                        href: _MXPComment,\n                                        offset: lineLength\n                                    });\n                                    formatBuilder.push(format = this.getFormatBlock(lineLength));\n                                }\n                                state = ParserState.None;\n                                idx--;\n                                rawBuilder.pop();\n                                this.rawLength--;\n                            }\n                            else {\n                                if (i > 255)\n                                    format.unicode = true;\n                                stringBuilder.push(c);\n                                this.MXPCapture(c);\n                                lineLength++;\n                                this.textLength++;\n                            }\n                        }\n                        break;\n                    case ParserState.MSPSound:\n                        if (c === ')') {\n                            lnk = this.mxpState.lineType;\n                            this.mxpState.lineType = lineType.TempSecure;\n                            this.getMXPBlock('SOUND', _MXPArgs, remote);\n                            this.mxpState.lineType = lnk;\n                            state = ParserState.None;\n                            if (idx + 1 < tl && text.charAt(idx + 1) === '\\n') {\n                                idx++;\n                                skip = false;\n                                stringBuilder = [];\n                                formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                                this.mxpState.noBreak = false;\n                                lineLength = 0;\n                            }\n                            else if (idx + 2 < tl && text[idx + 1] === '\\r' && text[idx + 2] === '\\n') {\n                                idx += 2;\n                                skip = false;\n                                stringBuilder = [];\n                                formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                                this.mxpState.noBreak = false;\n                                lineLength = 0;\n                            }\n                        }\n                        else if (c === ' ')\n                            _MXPArgs.push('');\n                        else\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                        break;\n                    case ParserState.MSPMusic:\n                        if (c === ')') {\n                            lnk = this.mxpState.lineType;\n                            this.mxpState.lineType = lineType.TempSecure;\n                            this.getMXPBlock('MUSIC', _MXPArgs, remote);\n                            this.mxpState.lineType = lnk;\n                            state = ParserState.None;\n                            if (idx + 1 < tl && text.charAt(idx + 1) === '\\n') {\n                                idx++;\n                                skip = false;\n                                stringBuilder = [];\n                                formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                                this.mxpState.noBreak = false;\n                                lineLength = 0;\n                            }\n                            else if (idx + 2 < tl && text[idx + 1] === '\\r' && text[idx + 2] === '\\n') {\n                                idx += 2;\n                                skip = false;\n                                stringBuilder = [];\n                                formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                                this.mxpState.noBreak = false;\n                                lineLength = 0;\n                            }\n                        }\n                        else if (c === ' ')\n                            _MXPArgs.push('');\n                        else\n                            _MXPArgs[_MXPArgs.length - 1] += c;\n                        break;\n                    default:\n                        if (e && i === 7) {\n                            if (f) {\n                                c = '\\u2407';\n                                stringBuilder.push(c);\n                                this.MXPCapture(c);\n                                lineLength++;\n                                this.textLength++;\n                                this.mxpState.noBreak = false;\n                            }\n                            else if (d) {\n                                stringBuilder.push(c);\n                                this.MXPCapture('&#x2407;');\n                                lineLength++;\n                                this.textLength++;\n                                this.mxpState.noBreak = false;\n                            }\n                            this.emit('bell');\n                        }\n                        else if (e && c === '\\b') {\n                            skip = false;\n                            //if there are characters on the line\n                            if (lineLength > 0) {\n                                if (stringBuilder.length) {\n                                    //clean up empty ones\n                                    while (stringBuilder[stringBuilder.length - 1].length === 0)\n                                        stringBuilder.pop();\n                                    if (stringBuilder[stringBuilder.length - 1].length === 1)\n                                        stringBuilder.pop();\n                                    else\n                                        stringBuilder[stringBuilder.length - 1] = stringBuilder[stringBuilder.length - 1].substring(0, stringBuilder[stringBuilder.length - 1].length - 1);\n                                }\n                                if (format.offset === lineLength)\n                                    format.offset--;\n                                lineLength--;\n                                this.textLength--;\n                            }\n                            if (d) {\n                                c = '\\u25D8';\n                                stringBuilder.push(c);\n                                this.MXPCapture(c);\n                                lineLength++;\n                                this.textLength++;\n                            }\n                            this.mxpState.noBreak = false;\n                        }\n                        else if (e && c === '\\t') {\n                            const _Tab = tabWidth - lineLength % tabWidth;\n                            if (_Tab > 0) {\n                                stringBuilder.push(Array(_Tab + 1).join(' '));\n                                this.MXPCapture(Array(_Tab + 1).join(' '));\n                                lineLength += _Tab;\n                                this.textLength += _Tab;\n                                this.mxpState.noBreak = false;\n                            }\n                        }\n                        else if (c === '\\n') {\n                            if (this.mxpState.noBreak || this.mxpState.paragraph) continue;\n                            if (!this.mxpState.locked) {\n                                //notify client that a tag is over, allow for tagging the 10,11,12,19 tag types for auto mapper tagging/welcome test/custom tags\n                                if (this.mxpState.lineType !== lineType.Open)\n                                    this.emit('MXP-tag-end', this.mxpState.lineType, stringBuilder.join(''), formatBuilder);\n                                //custom element linked to tag so expanded it into the line\n                                if (!this.mxpState.lineExpanded && this.mxpLines[this.mxpState.lineType] && this.mxpLines[this.mxpState.lineType].enabled) {\n                                    iTmp = '';\n                                    if (this.mxpLines[this.mxpState.lineType].element.length > 0)\n                                        iTmp += '</' + this.mxpLines[this.mxpState.lineType].element + '>';\n                                    if (this.mxpLines[this.mxpState.lineType].closeDefinition.length > 0)\n                                        iTmp += this.mxpLines[this.mxpState.lineType].closeDefinition;\n                                    if (iTmp.length > 0) {\n                                        text = text.splice(idx, iTmp);\n                                        tl = text.length;\n                                        idx--;\n                                        rawBuilder.pop();\n                                        this.rawLength--;\n                                        this.mxpState.lineExpanded = true;\n                                        continue;\n                                    }\n                                }\n                                this.mxpState.lineExpanded = false;\n                                formatBuilder.push(...this.getMXPCloseFormatBlocks());\n                                if (this.mxpState.on)\n                                    this.ClearMXPOpen();\n                                this.mxpState.on = false;\n                                if (this.mxpLines[this.mxpState.lineType] && this.mxpLines[this.mxpState.lineType].enabled && this.mxpLines[this.mxpState.lineType].gag)\n                                    skip = true;\n                                this.mxpState.lineType = this.iMXPDefaultMode;\n                                if (this.mxpState.lineType !== 2 && !this.enableMXP)\n                                    this.ResetMXP();\n                            }\n                            else {\n                                formatBuilder.push(...this.getMXPCloseFormatBlocks());\n                                if (this.mxpState.on)\n                                    this.ClearMXPOpen();\n                            }\n                            lineLength = 0;\n                            if (!skip)\n                                this.MXPCapture('\\n');\n                            this.AddLine(stringBuilder.join(''), rawBuilder.join(''), false, skip, formatBuilder, remote);\n                            skip = false;\n                            stringBuilder = [];\n                            rawBuilder = [];\n                            formatBuilder = [...this.getMXPOpenFormatBlocks(), format = this.getFormatBlock(lineLength)];\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                        }\n                        else if (e && c === '\\r') {\n                            continue;\n                            /*\n                            if (this.mxpState.noBreak || this.mxpState.paragraph) continue;\n                            if (!this.mxpState.locked) {\n                                if (this.mxpState.on)\n                                    this.ClearMXPOpen();\n                                this.mxpState.on = false;\n                                this.mxpState.lineType = lineType.Open;\n                            }\n                            continue;\n                            */\n                        }\n                        else if (e && c === '\\x1b') {\n                            this._SplitBuffer += c;  //store in split buffer incase split command\n                            state = ParserState.Ansi;\n                        }\n                        else if (i < 32 || i === 127) {\n                            if (f) {\n                                if (i === 1)\n                                    c = '\\u263A';\n                                else if (i === 2)\n                                    c = '\\u263B';\n                                else if (i === 3)\n                                    c = '\\u2665';\n                                else if (i === 4)\n                                    c = '\\u2666';\n                                else if (i === 5)\n                                    c = '\\u2663';\n                                else if (i === 6)\n                                    c = '\\u2660';\n                                else if (i === 7)\n                                    c = '\\u2407';\n                                else if (i === 8)\n                                    c = '\\u25D8';\n                                else if (i === 9)\n                                    c = '\\u25CB';\n                                else if (i === 10)\n                                    c = '\\u25D9';\n                                else if (i === 11)\n                                    c = '\\u2642';\n                                else if (i === 12)\n                                    c = '\\u2640';\n                                else if (i === 13)\n                                    c = '\\u266A';\n                                else if (i === 14)\n                                    c = '\\u266B';\n                                else if (i === 15)\n                                    c = '\\u263C';\n                                else if (i === 16)\n                                    c = '\\u25BA';\n                                else if (i === 17)\n                                    c = '\\u25C4';\n                                else if (i === 18)\n                                    c = '\\u2195';\n                                else if (i === 19)\n                                    c = '\\u203C';\n                                else if (i === 20)\n                                    c = '\\u00B6';\n                                else if (i === 21)\n                                    c = '\\u00A7';\n                                else if (i === 22)\n                                    c = '\\u25AC';\n                                else if (i === 23)\n                                    c = '\\u21A8';\n                                else if (i === 24)\n                                    c = '\\u2191';\n                                else if (i === 25)\n                                    c = '\\u2193';\n                                else if (i === 26)\n                                    c = '\\u2192';\n                                else if (i === 27)\n                                    c = '\\u2190';\n                                else if (i === 28)\n                                    c = '\\u221F';\n                                else if (i === 29)\n                                    c = '\\u2194';\n                                else if (i === 30)\n                                    c = '\\u25B2';\n                                else if (i === 31)\n                                    c = '\\u25BC';\n                                else if (i === 127)\n                                    c = '\\u2302';\n                                stringBuilder.push(c);\n                                this.MXPCapture(c);\n                                lineLength++;\n                                this.textLength++;\n                                this.mxpState.noBreak = false;\n                            }\n                            else if (d) {\n                                i = 9216 + i;\n                                stringBuilder.push(String.fromCharCode(i));\n                                this.MXPCapture('&#');\n                                this.MXPCapture(i.toString());\n                                this.MXPCapture(';');\n                                lineLength++;\n                                this.textLength++;\n                                this.mxpState.noBreak = false;\n                            }\n                            else\n                                continue;\n                        }\n                        else if (c === ' ' || (this._CurrentAttributes > 0 && (this._CurrentAttributes & FontStyle.Hidden) === FontStyle.Hidden)) {\n                            stringBuilder.push(' ');\n                            this.MXPCapture(' ');\n                            lineLength++;\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                        }\n                        else if (c === '<' && idx >= mOffset) {\n                            if (this.enableMXP && this.mxpState.on) {\n                                _MXPTag = '';\n                                _MXPArgs = [];\n                                this._SplitBuffer += c;  //store in split buffer incase split command\n                                state = ParserState.MXPTag;\n                            }\n                            else {\n                                stringBuilder.push('<');\n                                this.MXPCapture('&lt;');\n                                lineLength++;\n                                this.textLength++;\n                            }\n                        }\n                        else if (c === '>') {\n                            stringBuilder.push('>');\n                            this.MXPCapture('&gt;');\n                            lineLength++;\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                        }\n                        else if (c === '&' && idx >= mOffset) {\n                            if (this.enableMXP && this.mxpState.on) {\n                                _MXPEntity = '';\n                                this._SplitBuffer += c;  //store in split buffer incase split command\n                                pState = state;\n                                state = ParserState.MXPEntity;\n                            }\n                            else {\n                                stringBuilder.push(c);\n                                lineLength++;\n                                this.textLength++;\n                                this.mxpState.noBreak = false;\n                            }\n                        }\n                        else if (c === '\"') {\n                            stringBuilder.push(c);\n                            this.MXPCapture('&quot;');\n                            lineLength++;\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                        }\n                        else if (c === '\\'') {\n                            stringBuilder.push(c);\n                            this.MXPCapture('&apos;');\n                            lineLength++;\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                        }\n                        else if (c === ':') {\n                            stringBuilder.push(c);\n                            this.MXPCapture(c);\n                            lineLength++;\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                            if (u) {\n                                _MXPComment = '';\n                                let psk;\n                                let pFnd = false;\n                                for (p = 0; p < pl; p++) {\n                                    if (idx - this.protocols[p].length < 0)\n                                        continue;\n                                    psk = false;\n                                    const nl = this.protocols[p].length;\n                                    for (let n = 0; n < nl; n++) {\n                                        if (text[idx - (nl - n)] !== this.protocols[p][n]) {\n                                            psk = true;\n                                            break;\n                                        }\n                                    }\n                                    if (psk)\n                                        continue;\n                                    lnk = stringBuilder.length;\n                                    lnkOffset = lineLength;\n                                    fLnk = formatBuilder.length;\n                                    if (lnk > 1 + nl && stringBuilder[lnk - (2 + nl)].length === 1 && /\\S/.test(stringBuilder[lnk - (2 + nl)]) && stringBuilder[lnk - (2 + nl)] !== '(' && stringBuilder[lnk - (2 + nl)] !== '[')\n                                        continue;\n                                    lNest = [];\n                                    lnk = stringBuilder.length - (1 + nl);\n                                    lnkOffset -= (1 + nl);\n                                    lLnk = stringBuilder.length - 1;\n                                    if (lnk > 0 && stringBuilder[lnk - 1] === '(')\n                                        lNest.push(')');\n                                    if (lnk > 0 && stringBuilder[lnk - 1] === '[')\n                                        lNest.push(']');\n                                    state = ParserState.URLFound;\n                                    pFnd = true;\n                                    if (pFnd)\n                                        break;\n                                }\n                                if (!pFnd) {\n                                    state = ParserState.URL;\n                                    lnk = idx;\n                                    lnkOffset = lineLength;\n                                }\n                            }\n                        }\n                        else if (c === '.') {\n                            stringBuilder.push(c);\n                            this.MXPCapture(c);\n                            lineLength++;\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                            if (u && idx - 3 >= 0) {\n                                _MXPComment = 'http://';\n                                if ((text[idx - 1] === 'w' || idx[lnk - 1] === 'W') &&\n                                    (text[idx - 2] === 'w' || idx[lnk - 2] === 'W') &&\n                                    (text[idx - 3] === 'w' || idx[lnk - 3] === 'W')\n                                ) {\n                                    lnk = stringBuilder.length;\n                                    lnkOffset = lineLength;\n                                    fLnk = formatBuilder.length;\n                                    if (lnk > 4 && stringBuilder[lnk - 5].length === 1 && /\\S/.test(stringBuilder[lnk - 5]) && stringBuilder[lnk - 5] !== '(' && stringBuilder[lnk - 5] !== '[')\n                                        continue;\n                                    lNest = [];\n                                    lnk = stringBuilder.length - 4;\n                                    lnkOffset -= 4;\n                                    lLnk = stringBuilder.length - 1;\n                                    if (lnk > 0 && stringBuilder[lnk - 1] === '(')\n                                        lNest.push(')');\n                                    if (lnk > 0 && stringBuilder[lnk - 1] === '[')\n                                        lNest.push(']');\n                                    state = ParserState.URLFound;\n                                }\n                            }\n                        }\n                        else if (s && lineLength === 0 && text.substring(idx, idx + 8) === '!!MUSIC(') {\n                            _MXPArgs = [''];\n                            state = ParserState.MSPMusic;\n                            idx += 7;\n                            this.mxpState.noBreak = false;\n                        }\n                        else if (s && lineLength === 0 && text.substring(idx, idx + 8) === '!!SOUND(') {\n                            _MXPArgs = [''];\n                            state = ParserState.MSPSound;\n                            idx += 7;\n                            this.mxpState.noBreak = false;\n                        }\n                        else {\n                            if (f && i > 127 && i < 255) {\n                                if (i === 128)\n                                    c = '\\u00C7';\n                                else if (i === 129)\n                                    c = '\\u00FC';\n                                else if (i === 130)\n                                    c = '\\u00E9';\n                                else if (i === 131)\n                                    c = '\\u00E2';\n                                else if (i === 132)\n                                    c = '\\u00E4';\n                                else if (i === 133)\n                                    c = '\\u00E0';\n                                else if (i === 134)\n                                    c = '\\u00E5';\n                                else if (i === 135)\n                                    c = '\\u00E7';\n                                else if (i === 136)\n                                    c = '\\u00EA';\n                                else if (i === 137)\n                                    c = '\\u00EB';\n                                else if (i === 138)\n                                    c = '\\u00E8';\n                                else if (i === 139)\n                                    c = '\\u00EF';\n                                else if (i === 140)\n                                    c = '\\u00EE';\n                                else if (i === 141)\n                                    c = '\\u00EC';\n                                else if (i === 142)\n                                    c = '\\u00C4';\n                                else if (i === 143)\n                                    c = '\\u00C5';\n                                else if (i === 144)\n                                    c = '\\u00C9';\n                                else if (i === 145)\n                                    c = '\\u00E6';\n                                else if (i === 146)\n                                    c = '\\u00C6';\n                                else if (i === 147)\n                                    c = '\\u00F4';\n                                else if (i === 148)\n                                    c = '\\u00F6';\n                                else if (i === 149)\n                                    c = '\\u00F2';\n                                else if (i === 150)\n                                    c = '\\u00FB';\n                                else if (i === 151)\n                                    c = '\\u00F9';\n                                else if (i === 152)\n                                    c = '\\u00FF';\n                                else if (i === 153)\n                                    c = '\\u00D6';\n                                else if (i === 154)\n                                    c = '\\u00DC';\n                                else if (i === 155)\n                                    c = '\\u00A2';\n                                else if (i === 156)\n                                    c = '\\u00A3';\n                                else if (i === 157)\n                                    c = '\\u00A5';\n                                else if (i === 158)\n                                    c = '\\u20A7';\n                                else if (i === 159)\n                                    c = '\\u0192';\n                                else if (i === 160)\n                                    c = '\\u00E1';\n                                else if (i === 161)\n                                    c = '\\u00ED';\n                                else if (i === 162)\n                                    c = '\\u00F3';\n                                else if (i === 163)\n                                    c = '\\u00FA';\n                                else if (i === 164)\n                                    c = '\\u00F1';\n                                else if (i === 165)\n                                    c = '\\u00D1';\n                                else if (i === 166)\n                                    c = '\\u00AA';\n                                else if (i === 167)\n                                    c = '\\u00BA';\n                                else if (i === 168)\n                                    c = '\\u00BF';\n                                else if (i === 169)\n                                    c = '\\u2310';\n                                else if (i === 170)\n                                    c = '\\u00AC';\n                                else if (i === 171)\n                                    c = '\\u00BD';\n                                else if (i === 172)\n                                    c = '\\u00BC';\n                                else if (i === 173)\n                                    c = '\\u00A1';\n                                else if (i === 174)\n                                    c = '\\u00AB';\n                                else if (i === 175)\n                                    c = '\\u00BB';\n                                else if (i === 176)\n                                    c = '\\u2591';\n                                else if (i === 177)\n                                    c = '\\u2592';\n                                else if (i === 178)\n                                    c = '\\u2593';\n                                else if (i === 179)\n                                    c = '\\u2502';\n                                else if (i === 180)\n                                    c = '\\u2524';\n                                else if (i === 181)\n                                    c = '\\u2561';\n                                else if (i === 182)\n                                    c = '\\u2562';\n                                else if (i === 183)\n                                    c = '\\u2556';\n                                else if (i === 184)\n                                    c = '\\u2555';\n                                else if (i === 185)\n                                    c = '\\u2563';\n                                else if (i === 186)\n                                    c = '\\u2551';\n                                else if (i === 187)\n                                    c = '\\u2557';\n                                else if (i === 188)\n                                    c = '\\u255D';\n                                else if (i === 189)\n                                    c = '\\u255C';\n                                else if (i === 190)\n                                    c = '\\u255B';\n                                else if (i === 191)\n                                    c = '\\u2510';\n                                else if (i === 192)\n                                    c = '\\u2514';\n                                else if (i === 193)\n                                    c = '\\u2534';\n                                else if (i === 194)\n                                    c = '\\u252C';\n                                else if (i === 195)\n                                    c = '\\u251C';\n                                else if (i === 196)\n                                    c = '\\u2500';\n                                else if (i === 197)\n                                    c = '\\u253C';\n                                else if (i === 198)\n                                    c = '\\u255E';\n                                else if (i === 199)\n                                    c = '\\u255F';\n                                else if (i === 200)\n                                    c = '\\u255A';\n                                else if (i === 201)\n                                    c = '\\u2554';\n                                else if (i === 202)\n                                    c = '\\u2569';\n                                else if (i === 203)\n                                    c = '\\u2566';\n                                else if (i === 204)\n                                    c = '\\u2560';\n                                else if (i === 205)\n                                    c = '\\u2550';\n                                else if (i === 206)\n                                    c = '\\u256C';\n                                else if (i === 207)\n                                    c = '\\u2567';\n                                else if (i === 208)\n                                    c = '\\u2568';\n                                else if (i === 209)\n                                    c = '\\u2564';\n                                else if (i === 210)\n                                    c = '\\u2565';\n                                else if (i === 211)\n                                    c = '\\u2559';\n                                else if (i === 212)\n                                    c = '\\u2558';\n                                else if (i === 213)\n                                    c = '\\u2552';\n                                else if (i === 214)\n                                    c = '\\u2553';\n                                else if (i === 215)\n                                    c = '\\u256B';\n                                else if (i === 216)\n                                    c = '\\u256A';\n                                else if (i === 217)\n                                    c = '\\u2518';\n                                else if (i === 218)\n                                    c = '\\u250C';\n                                else if (i === 219)\n                                    c = '\\u2588';\n                                else if (i === 220)\n                                    c = '\\u2584';\n                                else if (i === 221)\n                                    c = '\\u258C';\n                                else if (i === 222)\n                                    c = '\\u2590';\n                                else if (i === 223)\n                                    c = '\\u2580';\n                                else if (i === 224)\n                                    c = '\\u03B1';\n                                else if (i === 225)\n                                    c = '\\u03B2';\n                                else if (i === 226)\n                                    c = '\\u0393';\n                                else if (i === 227)\n                                    c = '\\u03C0';\n                                else if (i === 228)\n                                    c = '\\u03A3';\n                                else if (i === 229)\n                                    c = '\\u03C3';\n                                else if (i === 230)\n                                    c = '\\u00B5';\n                                else if (i === 231)\n                                    c = '\\u03C4';\n                                else if (i === 232)\n                                    c = '\\u03A6';\n                                else if (i === 233)\n                                    c = '\\u0398';\n                                else if (i === 234)\n                                    c = '\\u03A9';\n                                else if (i === 235)\n                                    c = '\\u03B4';\n                                else if (i === 236)\n                                    c = '\\u221E';\n                                else if (i === 237)\n                                    c = '\\u2205';\n                                else if (i === 238)\n                                    c = '\\u2208';\n                                else if (i === 239)\n                                    c = '\\u2229';\n                                else if (i === 240)\n                                    c = '\\u2261';\n                                else if (i === 241)\n                                    c = '\\u00B1';\n                                else if (i === 242)\n                                    c = '\\u2265';\n                                else if (i === 243)\n                                    c = '\\u2264';\n                                else if (i === 244)\n                                    c = '\\u2320';\n                                else if (i === 245)\n                                    c = '\\u2321';\n                                else if (i === 246)\n                                    c = '\\u00F7';\n                                else if (i === 247)\n                                    c = '\\u2248';\n                                else if (i === 248)\n                                    c = '\\u00B0';\n                                else if (i === 249)\n                                    c = '\\u2219';\n                                else if (i === 250)\n                                    c = '\\u00B7';\n                                else if (i === 251)\n                                    c = '\\u221A';\n                                else if (i === 252)\n                                    c = '\\u207F';\n                                else if (i === 253)\n                                    c = '\\u00B2';\n                                else if (i === 254)\n                                    c = '\\u25A0';\n                            }\n                            else if (i > 255)\n                                format.unicode = true;\n                            stringBuilder.push(c);\n                            this.MXPCapture(c);\n                            lineLength++;\n                            this.textLength++;\n                            this.mxpState.noBreak = false;\n                        }\n                        break;\n                }\n            }\n            if (this._SplitBuffer.length) {\n                this.rawLength -= this._SplitBuffer.length;\n                rawBuilder.splice(rawBuilder.length - this._SplitBuffer.length, this._SplitBuffer.length);\n            }\n            formatBuilder.push(...this.getMXPCloseFormatBlocks());\n            if (state === ParserState.URLFound) {\n                formatBuilder.splice(fLnk, 0,\n                    {\n                        formatType: FormatType.Link,\n                        offset: lnkOffset,\n                        href: _MXPComment += stringBuilder.slice(lnk).join('')\n                    });\n            }\n            this.AddLine(stringBuilder.join(''), rawBuilder.join(''), true, false, formatBuilder, remote);\n        }\n        catch (ex) {\n            if (this.enableDebug) this.emit('debug', ex);\n        }\n        this.busy = false;\n        this.emit('parse-done');\n        this.parsing.shift();\n        if (this.parsing.length > 0)\n            setTimeout(this.parseNext(), 0);\n    }\n\n    private parseNext() {\n        const iTmp = this.parsing.shift();\n        return () => { this.parse(iTmp[0], iTmp[1], true, iTmp[2]); };\n    }\n\n    public updateWindow(width, height) {\n        this.window = { width: width, height: height };\n    }\n\n    public Clear() {\n        this.ResetColors();\n        this.textLength = 0;\n        this._SplitBuffer = '';\n    }\n\n    public ClearMXP() {\n        this.mxpEntities = {};\n        this.ResetMXP();\n        this.mxpElements = {};\n        this.mxpState = new MXPState();\n    }\n\n    public ResetMXP() {\n        this.mxpStyles = [];\n        this.mxpStyles.push(new MXPStyle(FontStyle.None, '', '', false));\n    }\n\n    public ResetMXPLine() {\n        this.iMXPDefaultMode = lineType.Open;\n        this.mxpState.lineType = lineType.Open;\n    }\n\n    //public interface, as client can only access publicly marked entities\n    public GetPublicEntity(entity) {\n        if (this.mxpEntities[entity] && this.mxpEntities[entity].publish)\n            return this.mxpEntities[entity].value;\n        return entity;\n    }\n\n}", "import { EventEmitter } from \"./events\";\r\nimport { Parser } from \"./parser\";\r\nimport { Size, DisplayOptions, ParserLine, FormatType, FontStyle } from \"./types\";\r\nimport { htmlEncode, formatUnit, getScrollbarWidth, debounce } from './library';\r\n\r\ndeclare let moment;\r\n\r\n/**\r\n * Contains parsed line data\r\n */\r\ninterface LineData {\r\n    text: string;       //the line text\r\n    formats: any[];     //the line formatting data\r\n    raw: string;        //the raw line data including all ansi codes\r\n    id: number;         //unique id for line\r\n    timestamp: number;  //timestamp the line was added\r\n}\r\n\r\nexport enum UpdateType {\r\n    none = 0,\r\n    update = 1 << 0,\r\n    display = 1 << 1,\r\n    trim = 1 << 2,\r\n    scrollEnd = 1 << 3,\r\n    updateWindow = 1 << 4,\r\n    rebuildLines = 1 << 5\r\n}\r\n\r\nexport enum TimeStampStyle {\r\n    None,\r\n    Simple,\r\n    Format\r\n}\r\n\r\nexport class Display extends EventEmitter {\r\n    //#region Private properties\r\n    private _model: DisplayModel;\r\n    private _container: HTMLElement;\r\n    private _view: HTMLElement;\r\n    private _updating: UpdateType = UpdateType.none;\r\n    private _enableDebug: boolean = false;\r\n    private _character: HTMLElement;\r\n    private _charHeight: number;\r\n    private _charWidth: number;\r\n    private _innerHeight;\r\n    private _maxView: number = 0;\r\n    private _padding = [0, 0, 0, 0];\r\n    private _enableColors: boolean = true;\r\n    private _enableBackgroundColors: boolean = true;\r\n    private _hideTrailingEmptyLine = true;\r\n    private _styles: HTMLStyleElement;\r\n    private _maxLines: number = 500;\r\n    private _wordWrap = false;\r\n    private _indent: number = 4;\r\n    private _indentPadding: number = 0;\r\n    private _wrapAt: number = 0;\r\n\r\n    private _linkFunction;\r\n    private _mxpLinkFunction;\r\n    private _mxpSendFunction;\r\n    private _mxpTooltipFunction;\r\n    private _scrollAtEnd = false;\r\n\r\n    private _resizeObserver;\r\n    private _resizeObserverCache;\r\n    private _observer: MutationObserver;\r\n\r\n    private _wResize;\r\n\r\n    private _lineCache: string[] = [];\r\n    private _expireCache: number[] = [];\r\n\r\n    private _timestamp: TimeStampStyle = TimeStampStyle.None;\r\n    private _timestampFormat: string = '[[]MM-DD HH:mm:ss.SSS[]] ';\r\n    private _timestampWidth: number = new Date().toISOString().length + 1;\r\n    //#endregion\r\n    //#region Public properties\r\n    public scrollLock: boolean = false;\r\n\r\n    get showTimestamp() { return this._timestamp; }\r\n    set showTimestamp(value: TimeStampStyle) {\r\n        if (value === this._timestamp) return;\r\n        this._timestamp = value;\r\n        if (!moment || this._timestamp !== TimeStampStyle.Format)\r\n            this._timestampWidth = new Date().toISOString().length + 1;\r\n        else\r\n            this._timestampWidth = moment().format(this._timestampFormat).length;\r\n        this.buildStyleSheet();\r\n        this.doUpdate(UpdateType.display | UpdateType.update | UpdateType.rebuildLines);\r\n    }\r\n\r\n    get timestampFormat() { return this._timestampFormat; }\r\n    set timestampFormat(value: string) {\r\n        if (this._timestampFormat === value) return;\r\n        this._timestampFormat = value;\r\n        if (!moment || this._timestamp !== TimeStampStyle.Format)\r\n            this._timestampWidth = new Date().toISOString().length + 1;\r\n        else\r\n            this._timestampWidth = moment().format(this._timestampFormat).length;\r\n        this.doUpdate(UpdateType.display | UpdateType.rebuildLines | UpdateType.updateWindow | UpdateType.update);\r\n    }\r\n    z\r\n    get wordWrap(): boolean {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(value: boolean) {\r\n        if (value === this._wordWrap) return;\r\n        this._wordWrap = value;\r\n        this.buildStyleSheet();\r\n        this.doUpdate(UpdateType.update);\r\n    }\r\n\r\n    get wrapAt() { return this._wrapAt; }\r\n    set wrapAt(value: number) {\r\n        if (value === this._wrapAt) return;\r\n        this._wrapAt = value;\r\n        this.buildStyleSheet();\r\n        this.doUpdate(UpdateType.update | UpdateType.display);\r\n    }\r\n\r\n    get indent() { return this._indent; }\r\n    set indent(value: number) {\r\n        if (value === this._indent)\r\n            return;\r\n        this._indent = value;\r\n        this.buildStyleSheet();\r\n        this.doUpdate(UpdateType.update | UpdateType.display);\r\n    }\r\n\r\n    get linkFunction(): string {\r\n        return this._linkFunction || 'doLink';\r\n    }\r\n\r\n    set linkFunction(val: string) {\r\n        this._linkFunction = val;\r\n    }\r\n\r\n    get mxpLinkFunction(): string {\r\n        return this._mxpLinkFunction || 'doMXPLink';\r\n    }\r\n\r\n    set mxpLinkFunction(val: string) {\r\n        this._mxpLinkFunction = val;\r\n    }\r\n\r\n    get mxpSendFunction(): string {\r\n        return this._mxpSendFunction || 'doMXPSend';\r\n    }\r\n\r\n    set mxpSendFunction(val: string) {\r\n        this._mxpSendFunction = val;\r\n    }\r\n\r\n    get mxpTooltipFunction(): string {\r\n        return this._mxpTooltipFunction || 'doMXPTooltip';\r\n    }\r\n\r\n    set mxpTooltipFunction(val: string) {\r\n        this._mxpTooltipFunction = val;\r\n    }\r\n\r\n    get id() {\r\n        if (this._container) return this._container.id;\r\n        return '';\r\n    }\r\n\r\n    get container(): HTMLElement {\r\n        return this._container;\r\n    }\r\n\r\n    get lines(): LineData[] {\r\n        return this._model.lines;\r\n    }\r\n\r\n    get model() { return this._model; }\r\n    set model(value: DisplayModel) {\r\n        if (this._model === value) return;\r\n        //if model set remove all listeners\r\n        if (this._model)\r\n            this._model.removeAllListeners();\r\n        //set model and assign all the events needed\r\n        this._model = value;\r\n        this._model.on('debug', this.debug);\r\n        this._model.on('bell', () => { this.emit('bell'); });\r\n        this._model.on('add-line', data => { this.emit('add-line', data); });\r\n        this._model.on('add-line-done', data => { this.emit('add-line-done', data); });\r\n        this._model.on('line-added', (data, noUpdate) => {\r\n            this._lineCache.push(this.getLineHTML(data.idx));\r\n        });\r\n        this._model.on('expire-links', args => {\r\n            if (this._expireCache.length) {\r\n                let id;\r\n                let elLine: HTMLElement;\r\n                for (let x = 0, xl = this._expireCache.length; x < xl; x++)\r\n                    this.rebuildLine(this._expireCache[x]);\r\n            }\r\n            this._expireCache = [];\r\n            this.emit('expire-links');\r\n        });\r\n        this._model.on('parse-done', () => {\r\n            this._view.insertAdjacentHTML('beforeend', this._lineCache.join(''));\r\n            this._lineCache = [];\r\n            this.doUpdate(UpdateType.display);\r\n            this.emit('parse-done');\r\n        });\r\n\r\n        this._model.on('set-title', (title, type) => {\r\n            this.emit('set-title', title, type);\r\n        });\r\n        this._model.on('music', (data) => {\r\n            this.emit('music', data);\r\n        });\r\n        this._model.on('sound', (data) => {\r\n            this.emit('sound', data);\r\n        });\r\n\r\n        this._model.on('MXP-tag-reply', (tag, args) => {\r\n            this.emit('MXP-tag-reply', tag, args);\r\n        });\r\n\r\n        this._model.on('expire-link-line', idx => {\r\n            this._expireCache.push(idx);\r\n            this.doUpdate(UpdateType.display);\r\n        });\r\n    }\r\n\r\n    get maxLines(): number { return this._maxLines; }\r\n    set maxLines(value: number) {\r\n        if (value !== this._maxLines) {\r\n            this._maxLines = value;\r\n            this.doUpdate(UpdateType.trim);\r\n        }\r\n    }\r\n\r\n    get enableDebug(): boolean {\r\n        return this._enableDebug;\r\n    }\r\n\r\n    get enableColors() { return this._enableColors; }\r\n    set enableColors(value) {\r\n        if (value === this._enableColors) return;\r\n        this._enableColors = value;\r\n        this.buildStyleSheet();\r\n    }\r\n\r\n    get enableBackgroundColors() { return this._enableBackgroundColors; }\r\n    set enableBackgroundColors(value) {\r\n        if (value === this._enableBackgroundColors) return;\r\n        this._enableBackgroundColors = value;\r\n        this.buildStyleSheet();\r\n    }\r\n\r\n    get hideTrailingEmptyLine() { return this._hideTrailingEmptyLine; }\r\n    set hideTrailingEmptyLine(value) {\r\n        if (value === this._hideTrailingEmptyLine) return;\r\n        this._hideTrailingEmptyLine = value;\r\n        this.doUpdate(UpdateType.display);\r\n    }\r\n\r\n    set enableDebug(enable: boolean) {\r\n        this._enableDebug = enable;\r\n        this._model.enableDebug = enable;\r\n    }\r\n\r\n    get tabWidth(): number {\r\n        return this._model.tabWidth;\r\n    }\r\n\r\n    set tabWidth(value) {\r\n        this._model.tabWidth = value;\r\n    }\r\n\r\n    get textLength(): number {\r\n        return this._model.textLength;\r\n    }\r\n\r\n    get EndOfLine(): boolean {\r\n        return this._model.EndOfLine;\r\n    }\r\n\r\n    get parseQueueLength(): number {\r\n        return this._model.parseQueueLength;\r\n    }\r\n\r\n    get parseQueueEndOfLine(): boolean {\r\n        return this._model.parseQueueEndOfLine;\r\n    }\r\n\r\n    get EndOfLineLength(): number {\r\n        if (this.lines.length === 0)\r\n            return 0;\r\n        return this.lines[this.lines.length - 1].text.length;\r\n    }\r\n\r\n    set enableFlashing(value: boolean) {\r\n        this._model.enableFlashing = value;\r\n    }\r\n    get enableFlashing(): boolean {\r\n        return this._model.enableFlashing;\r\n    }\r\n\r\n    set enableMXP(value: boolean) {\r\n        this._model.enableMXP = value;\r\n    }\r\n    get enableMXP(): boolean {\r\n        return this._model.enableMXP;\r\n    }\r\n\r\n    set showInvalidMXPTags(value: boolean) {\r\n        this._model.showInvalidMXPTags = value;\r\n    }\r\n    get showInvalidMXPTags(): boolean {\r\n        return this._model.showInvalidMXPTags;\r\n    }\r\n\r\n    set enableBell(value: boolean) {\r\n        this._model.enableBell = value;\r\n    }\r\n    get enableBell(): boolean {\r\n        return this._model.enableBell;\r\n    }\r\n\r\n    set enableURLDetection(value: boolean) {\r\n        this._model.enableURLDetection = value;\r\n    }\r\n    get enableURLDetection(): boolean {\r\n        return this._model.enableURLDetection;\r\n    }\r\n\r\n    set enableMSP(value: boolean) {\r\n        this._model.enableMSP = value;\r\n    }\r\n    get enableMSP(): boolean {\r\n        return this._model.enableMSP;\r\n    }\r\n\r\n    set displayControlCodes(value: boolean) {\r\n        this._model.displayControlCodes = value;\r\n    }\r\n    get displayControlCodes(): boolean {\r\n        return this._model.displayControlCodes;\r\n    }\r\n\r\n    set emulateTerminal(value: boolean) {\r\n        this._model.emulateTerminal = value;\r\n    }\r\n    get emulateTerminal(): boolean {\r\n        return this._model.emulateTerminal;\r\n    }\r\n\r\n    set MXPStyleVersion(value: string) {\r\n        this._model.MXPStyleVersion = value;\r\n    }\r\n    get MXPStyleVersion(): string {\r\n        return this._model.MXPStyleVersion;\r\n    }\r\n\r\n    get WindowSize(): Size {\r\n        return new Size(this.WindowWidth, this.WindowHeight);\r\n    }\r\n\r\n    get WindowWidth(): number {\r\n        return Math.trunc(this._maxView / this._charWidth);\r\n    }\r\n\r\n    get WindowHeight(): number {\r\n        if (this._view.scrollWidth > this._view.clientWidth)\r\n            return Math.trunc((this._innerHeight - getScrollbarWidth() - this._padding[0] - this._padding[2]) / this._charHeight);\r\n        return Math.trunc((this._innerHeight - this._padding[0] - this._padding[2]) / this._charHeight);\r\n    }\r\n\r\n    get html(): string {\r\n        const l = this.lines.length;\r\n        const html: string[] = [];\r\n        for (let idx = 0; idx < l; idx++)\r\n            html.push(this.getLineHTML(idx));\r\n        return html.join('');\r\n    }\r\n\r\n    get text(): string {\r\n        return this._model.text;\r\n    }\r\n\r\n    get raw(): string {\r\n        return this._model.raw;\r\n    }\r\n\r\n    get scrollAtBottom() {\r\n        return this._scrollAtEnd;\r\n    }\r\n    //#endregion\r\n    constructor(container: string | JQuery | HTMLElement | DisplayOptions, options?: DisplayOptions) {\r\n        super();\r\n        if (!container)\r\n            throw new Error('Container must be a selector, element or jquery object');\r\n        if(typeof container === 'object' && 'container' in container)\r\n        {\r\n            options = Object.assign(options || {}, container);\r\n            container = options.container;\r\n            delete options.container;\r\n        }\r\n        if (typeof container === 'string') {\r\n            this._container = document.querySelector(container);\r\n            if (!this._container)\r\n                throw new Error('Invalid selector for display.');\r\n        }\r\n        else if (container instanceof $)\r\n            this._container = container[0];\r\n        else if (container instanceof HTMLElement)\r\n            this._container = container;\r\n        else\r\n            throw new Error('Container must be a selector, element or jquery object');\r\n        this._styles = document.createElement('style');\r\n        this._container.appendChild(this._styles);\r\n        this._character = document.createElement('span');\r\n        this._character.id = this.id + '-Character';\r\n        this._character.className = 'line';\r\n        this._character.innerHTML = '<span style=\"border-bottom: 1px solid rgb(0, 0, 0);\">W</span>';\r\n        this._character.style.visibility = 'hidden';\r\n        this._container.appendChild(this._character);\r\n\r\n        this._view = document.createElement('div');\r\n        this._view.className = 'view';\r\n        this._view.addEventListener('scroll', () => {\r\n            this._scrollAtEnd = this._view.clientHeight + this._view.scrollTop >= this._view.scrollHeight;\r\n        });\r\n        this._view.addEventListener('click', e => {\r\n            this.emit('click', e);\r\n        })\r\n        this._container.appendChild(this._view);\r\n\r\n        this._charHeight = parseFloat(window.getComputedStyle(this._character).height);\r\n        this._charWidth = parseFloat(window.getComputedStyle(this._character.firstElementChild).width);\r\n        if (!options)\r\n            options = { display: this };\r\n        else\r\n            options.display = this;\r\n        this.model = new DisplayModel(options);\r\n\r\n        this._wResize = (e) => {\r\n            if (this._scrollAtEnd)\r\n                this.scrollDisplay();\r\n            debounce(() => {\r\n                this.doUpdate(UpdateType.update | UpdateType.updateWindow);\r\n            }, 250, 'resize');\r\n        };\r\n        window.addEventListener('resize', this._wResize.bind(this));\r\n\r\n        this._resizeObserver = new ResizeObserver((entries, observer) => {\r\n            if (entries.length === 0) return;\r\n            if (!entries[0].contentRect || entries[0].contentRect.width === 0 || entries[0].contentRect.height === 0)\r\n                return;\r\n            debounce(() => {\r\n                if (!this._resizeObserverCache || this._resizeObserverCache.width !== entries[0].contentRect.width || this._resizeObserverCache.height !== entries[0].contentRect.height) {\r\n                    if (this._scrollAtEnd)\r\n                        this.scrollDisplay();\r\n                    this._resizeObserverCache = { width: entries[0].contentRect.width, height: entries[0].contentRect.height };\r\n                    this.doUpdate(UpdateType.update | UpdateType.updateWindow);\r\n                    this.emit('resize');\r\n                }\r\n            }, 250, 'resize');\r\n        });\r\n        this._resizeObserver.observe(this._container);\r\n        this._observer = new MutationObserver((mutationsList) => {\r\n            let mutation;\r\n            for (mutation of mutationsList) {\r\n                if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\r\n                    if (this._scrollAtEnd)\r\n                        this.scrollDisplay();\r\n                    this.doUpdate(UpdateType.update | UpdateType.updateWindow);\r\n                    this.emit('resize');\r\n                }\r\n            }\r\n        });\r\n        this._observer.observe(this._container, { attributes: true, attributeOldValue: true, attributeFilter: ['style'] });\r\n        if (!moment || this._timestamp !== TimeStampStyle.Format)\r\n            this._timestampWidth = new Date().toISOString().length + 1;\r\n        else\r\n            this._timestampWidth = moment().format(this._timestampFormat).length;\r\n        this.updateFont();\r\n    }\r\n\r\n    public debug(msg) {\r\n        this.emit('debug', msg);\r\n    }\r\n\r\n    public scrollDisplay(): void {\r\n        if (!this.scrollLock)\r\n            this._view.scrollTop = this._view.scrollHeight;\r\n    };\r\n\r\n    public scrollTo(x: number, y: number) {\r\n        this._view.scrollTo(x, y);\r\n    }\r\n\r\n    public scrollToCharacter(x: number, y: number) {\r\n        this._view.scrollTo(x * this._charHeight, y * this._charWidth);\r\n    }\r\n\r\n    public scrollBy(x: number, y: number) {\r\n        this._view.scrollBy(x, y);\r\n    }\r\n\r\n    public scrollUp() {\r\n        this._view.scrollBy(0, -this._charHeight);\r\n    }\r\n\r\n    public scrollDown() {\r\n        this._view.scrollBy(0, this._charHeight);\r\n    }\r\n\r\n    public pageUp() {\r\n        this._view.scrollBy(0, -this._view.clientHeight)\r\n    }\r\n\r\n    public pageDown() {\r\n        this._view.scrollBy(0, this._view.clientHeight)\r\n    }\r\n\r\n    public trimLines() {\r\n        if (this._maxLines === -1)\r\n            return;\r\n        if (this.lines.length > this._maxLines) {\r\n            const amt = this.lines.length - this._maxLines;\r\n            let r = amt;\r\n            while (r-- > 0)\r\n                this._view.removeChild(this._view.firstChild);\r\n            this._model.removeLines(0, amt);\r\n        }\r\n    }\r\n\r\n    public append(txt: string, remote?: boolean, force?: boolean, prependSplit?: boolean) {\r\n        this._model.append(txt, remote || false, force || false, prependSplit || false);\r\n    }\r\n\r\n    public CurrentAnsiCode() {\r\n        return this._model.CurrentAnsiCode();\r\n    }\r\n\r\n    public removeLine(line: number, noUpdate?: boolean) {\r\n        if (line < 0 || line >= this.lines.length) return;\r\n        this.emit('line-removed', line, this.lines[line].text);\r\n        const id = this._model.getLineID(line);\r\n        const elLine = document.querySelector(`[data-id=\"${id}\"]`);\r\n        this._view.removeChild(elLine);\r\n        this._model.removeLine(line);\r\n    }\r\n\r\n    public removeLines(line: number, amt: number) {\r\n        if (line < 0 || line >= this.lines.length) return;\r\n        if (amt < 1) amt = 1;\r\n        this.emit('lines-removed', line, this.lines.slice(line, line + amt - 1));\r\n        //const id = this._model.getLineID(line);\r\n        //const elLine = document.querySelector(`[data-id=\"${id}\"]`);\r\n        //this._view.removeChild(elLine);\r\n        this._view.replaceChildren(...[].slice.call(this._view.children, 0, line), ...[].slice.call(this._view.children, line + amt));\r\n        this._model.removeLines(line, amt);\r\n    }\r\n\r\n    private updateDisplay() {\r\n        //disable animation\r\n        this._view.classList.remove('animate');\r\n        this.doUpdate(UpdateType.trim);\r\n        if (this._hideTrailingEmptyLine && this.lines.length && this.lines[this.lines.length - 1].text.length === 0)\r\n            (<HTMLElement>this._view.lastChild).style.display = 'none';\r\n        this.doUpdate(UpdateType.scrollEnd | UpdateType.updateWindow);\r\n        //re-enable animation so they are all synced\r\n        this._view.classList.add('animate');\r\n    }\r\n\r\n    public updateWindow(width?, height?) {\r\n        if (width === undefined) {\r\n            width = this.WindowWidth;\r\n            height = this.WindowHeight;\r\n        }\r\n        this._model.updateWindow(width, height);\r\n        this.emit('update-window', width, height);\r\n    }\r\n\r\n    public clear() {\r\n        this._model.clear();\r\n        this._view.innerHTML = '';\r\n    }\r\n\r\n    public dispose() {\r\n        document.body.removeChild(this._character);\r\n        document.body.removeChild(this._styles);\r\n        while (this._container.firstChild)\r\n            this._view.removeChild(this._view.firstChild);\r\n        window.removeEventListener('resize', this._wResize);\r\n    }\r\n\r\n    private update() {\r\n        const scrollWidth = getScrollbarWidth();\r\n        this._maxView = this._view.clientWidth - this._padding[1] - this._padding[3] - scrollWidth - this._indentPadding;\r\n        if (this._timestamp !== TimeStampStyle.None)\r\n            this._maxView -= this._timestampWidth * this._charWidth;\r\n        this._innerHeight = this._view.clientHeight;\r\n    }\r\n\r\n    public updateFont(font?: string, size?: string) {\r\n        if (!font || font.length === 0)\r\n            font = '\"Courier New\", Courier, monospace';\r\n        else //fall back just incase\r\n            font += ', monospace';\r\n        if (!size || size.length === 0)\r\n            size = '1em';\r\n        if (font !== this._container.style.fontFamily || size !== this._container.style.fontSize) {\r\n            //set styles using raw javascript for minor speed\r\n            this._container.style.fontSize = size;\r\n            this._container.style.fontFamily = font;\r\n            this._character.style.fontSize = size;\r\n            this._character.style.fontFamily = font;\r\n            //recalculate height/width of characters so display can be calculated\r\n            this._charHeight = parseFloat(window.getComputedStyle(this._character).height);\r\n            this._charWidth = parseFloat(window.getComputedStyle(this._character.firstElementChild).width);\r\n            setTimeout(() => {\r\n                this._charHeight = parseFloat(window.getComputedStyle(this._character).height);\r\n                this._charWidth = parseFloat(window.getComputedStyle(this._character.firstElementChild).width);    \r\n            }, 250);\r\n            this.buildStyleSheet();\r\n            this.doUpdate(UpdateType.scrollEnd | UpdateType.updateWindow | UpdateType.update);\r\n        }\r\n        const pc = window.getComputedStyle(this._view);\r\n        const padding = [\r\n            parseInt(pc.getPropertyValue('padding-top')) || 0,\r\n            parseInt(pc.getPropertyValue('padding-right')) || 0,\r\n            parseInt(pc.getPropertyValue('padding-bottom')) || 0,\r\n            parseInt(pc.getPropertyValue('padding-left')) || 0\r\n        ];\r\n        if (padding[0] !== this._padding[0] ||\r\n            padding[1] !== this._padding[1] ||\r\n            padding[2] !== this._padding[2] ||\r\n            padding[3] !== this._padding[3]\r\n        ) {\r\n            this._padding = padding;\r\n            this.doUpdate(UpdateType.update);\r\n        }\r\n    }\r\n\r\n    private buildStyleSheet() {\r\n        let styles = ''; // `.background > span, .view > span, .line, .background-line { height: ${this._charHeight}px; line-height: ${this._charHeight - 2}px; }`;\r\n        if (!this._enableColors)\r\n            styles += '.view > span span {color: inherit !important;}';\r\n        if (!this._enableColors || !this._enableBackgroundColors)\r\n            styles += '.background > span span {background-color: inherit !important;}';\r\n        if (this._wordWrap)\r\n            styles += '.view {white-space: break-spaces; }';\r\n        else if (this._wrapAt > 0)\r\n            styles += `.view {white-space: break-spaces; } .line {width: ${this._wrapAt * this._charWidth}px !important;max-width:  ${this._wrapAt * this._charWidth}px;min-width:  ${this._wrapAt * this._charWidth}px;display: block;}`\r\n        if ((this._wordWrap || this._wrapAt > 0) && this._indent > 0)\r\n            styles += `.view {  padding-left: 0px !important; text-indent: ${this._indent * this._charWidth}px hanging; }`;\r\n        //styles += `.view { padding-left: ${this._indent * this._charWidth * 2}px;text-indent: -${this._indent * this._charWidth}px; }@-moz-document url-prefix() { .view {  padding-left: 0px !important; text-indent: ${this._indent * this._charWidth}px hanging; } }`;\r\n        styles += `.line > span { min-height: ${this._charHeight}}`;\r\n        if (this._timestamp !== TimeStampStyle.None)\r\n            styles += '.timestamp { display: inline-block; }';\r\n        //else\r\n        //styles += '.timestamp { display: none !important; }';\r\n        this._styles.innerHTML = styles;\r\n        if ((this._wordWrap || this._wrapAt > 0) && this._indent > 0)\r\n            this._indentPadding = parseFloat(window.getComputedStyle(this._view).paddingLeft) / 2;\r\n        else\r\n            this._indentPadding = 0;\r\n    }\r\n\r\n    public getLineHTML(idx?: number, start?: number, len?: number, inner?: boolean) {\r\n        if (idx === undefined || idx >= this.lines.length)\r\n            idx = this.lines.length - 1;\r\n        else if (idx < 0)\r\n            idx = 0;\r\n        if (start === undefined || start < 0)\r\n            start = 0;\r\n        if (len === undefined || len === -1)\r\n            len = this.lines[idx].text.length;\r\n        const parts: string[] = [];\r\n        let offset = 0;\r\n        let style: any = '';\r\n        let fCls: any = '';\r\n        const text = this.lines[idx].text;\r\n        const formats = this.lines[idx].formats;\r\n        const fLen = formats.length;\r\n        let right = false;\r\n        const id = this._model.getLineID(idx);\r\n        if (this._timestamp === TimeStampStyle.Format && moment)\r\n            parts.push('<span class=\"timestamp\" style=\"color:', this._model.GetColor(-7), ';background:', this._model.GetColor(-8), ';\"', fCls, '>', moment(this.lines[idx].timestamp).format(this._timestampFormat), '</span>');\r\n        else if (this._timestamp === TimeStampStyle.Simple)\r\n            parts.push('<span class=\"timestamp\" style=\"color:', this._model.GetColor(-7), ';background:', this._model.GetColor(-8), ';\"', fCls, '>', new Date(this.lines[idx].timestamp).toISOString(), ' </span>');\r\n        for (let f = 0; f < fLen; f++) {\r\n            const format = formats[f];\r\n            let nFormat;\r\n            let end;\r\n            const td: string[] = [];\r\n            //let oSize;\r\n            //let oFont;\r\n            if (f < fLen - 1) {\r\n                nFormat = formats[f + 1];\r\n                //skip empty blocks\r\n                if (format.offset === nFormat.offset && nFormat.formatType === format.formatType)\r\n                    continue;\r\n                end = nFormat.offset;\r\n            }\r\n            else\r\n                end = text.length;\r\n            offset = format.offset;\r\n\r\n            if (end > len)\r\n                end = len;\r\n            if (offset < start)\r\n                offset = start;\r\n\r\n            if (format.formatType === FormatType.Normal) {\r\n                style = [];\r\n                fCls = [];\r\n                if (typeof format.background === 'number')\r\n                    style.push('background:', this._model.GetColor(format.background), ';');\r\n                else if (format.background)\r\n                    style.push('background:', format.background, ';');\r\n                if (typeof format.color === 'number')\r\n                    style.push('color:', this._model.GetColor(format.color), ';');\r\n                else if (format.color)\r\n                    style.push('color:', format.color, ';');\r\n                if (format.font)\r\n                    style.push('font-family: ', format.font, ';');\r\n                if (format.size)\r\n                    style.push('font-size: ', format.size, ';');\r\n                if (format.style !== FontStyle.None) {\r\n                    if ((format.style & FontStyle.Bold) === FontStyle.Bold)\r\n                        style.push('font-weight: bold;');\r\n                    if ((format.style & FontStyle.Italic) === FontStyle.Italic)\r\n                        style.push('font-style: italic;');\r\n                    if ((format.style & FontStyle.Overline) === FontStyle.Overline)\r\n                        td.push('overline ');\r\n                    if ((format.style & FontStyle.DoubleUnderline) === FontStyle.DoubleUnderline || (format.style & FontStyle.Underline) === FontStyle.Underline)\r\n                        td.push('underline ');\r\n                    if ((format.style & FontStyle.DoubleUnderline) === FontStyle.DoubleUnderline)\r\n                        style.push('border-bottom: 1px solid ', (typeof format.color === 'number' ? this._model.GetColor(format.color) : format.color), ';');\r\n                    else\r\n                        //style.push('padding-bottom: 1px;');\r\n                        style.push('border-bottom: 1px solid ', (typeof format.background === 'number' ? this._model.GetColor(format.background) : format.background), ';');\r\n                    if ((format.style & FontStyle.Rapid) === FontStyle.Rapid || (format.style & FontStyle.Slow) === FontStyle.Slow) {\r\n                        if (this.enableFlashing)\r\n                            fCls.push(' ansi-blink');\r\n                        else if ((format.style & FontStyle.DoubleUnderline) !== FontStyle.DoubleUnderline && (format.style & FontStyle.Underline) !== FontStyle.Underline)\r\n                            td.push('underline ');\r\n                    }\r\n                    if ((format.style & FontStyle.Strikeout) === FontStyle.Strikeout)\r\n                        td.push('line-through ');\r\n                    if (td.length > 0)\r\n                        style.push('text-decoration:', td.join('').trim(), ';');\r\n                }\r\n                else\r\n                    style.push('border-bottom: 1px solid ', (typeof format.background === 'number' ? this._model.GetColor(format.background) : format.background), ';');\r\n                //style.push('padding-bottom: 1px;');\r\n                if (offset < start || end < start)\r\n                    continue;\r\n                style = style.join('').trim();\r\n                if (fCls.length !== 0)\r\n                    fCls = ' class=\"' + fCls.join('').trim() + '\"';\r\n                else\r\n                    fCls = '';\r\n                if (format.hr)\r\n                    parts.push('<span style=\"', style, 'min-width:100%;width:100%;\"', fCls, '><div style=\"position:relative;top: 50%;transform: translateY(-50%);height:4px;width:100%; background-color:', (typeof format.color === 'number' ? this._model.GetColor(format.color) : format.color), '\"></div></span>');\r\n                else if (end - offset !== 0)\r\n                    parts.push('<span style=\"', style, '\"', fCls, '>', htmlEncode(text.substring(offset, end)), '</span>');\r\n            }\r\n            else if (format.formatType === FormatType.Link) {\r\n                if (offset < start || end < start)\r\n                    continue;\r\n                parts.push('<a draggable=\"false\" class=\"URLLink\" href=\"javascript:void(0);\" title=\"');\r\n                parts.push(format.href.replace(/\"/g, '&quot;'));\r\n                parts.push('\" onclick=\"', this.linkFunction, '(\\'', format.href.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '&quot;'), '\\');return false;\">');\r\n                if (end - offset === 0) continue;\r\n                parts.push('<span style=\"', style, '\"', fCls, '>');\r\n                parts.push(htmlEncode(text.substring(offset, end)));\r\n                parts.push('</span>');\r\n            }\r\n            else if (format.formatType === FormatType.LinkEnd || format.formatType === FormatType.MXPLinkEnd || format.formatType === FormatType.MXPSendEnd) {\r\n                if (offset < start || end < start)\r\n                    continue;\r\n                parts.push('</a>');\r\n            }\r\n            else if (format.formatType === FormatType.MXPLink) {\r\n                if (offset < start || end < start)\r\n                    continue;\r\n                parts.push('<a draggable=\"false\" class=\"MXPLink\" href=\"javascript:void(0);\" title=\"');\r\n                parts.push(format.href.replace(/\"/g, '&quot;'));\r\n                parts.push('\"');\r\n                if (format.expire && format.expire.length)\r\n                    parts.push(` data-expire=\"${format.expire}\"`);\r\n                parts.push(' onclick=\"', this.mxpLinkFunction, '(this, \\'', format.href.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '&quot;'), '\\');return false;\">');\r\n                if (end - offset === 0) continue;\r\n                parts.push('<span style=\"', style, '\"', fCls, '>');\r\n                parts.push(htmlEncode(text.substring(offset, end)));\r\n                parts.push('</span>');\r\n            }\r\n            else if (format.formatType === FormatType.MXPSend) {\r\n                if (offset < start || end < start)\r\n                    continue;\r\n                parts.push('<a draggable=\"false\" class=\"MXPLink\" href=\"javascript:void(0);\" title=\"');\r\n                parts.push(format.hint.replace(/\"/g, '&quot;'));\r\n                parts.push('\"');\r\n                if (format.expire && format.expire.length)\r\n                    parts.push(` data-expire=\"${format.expire}\"`);\r\n                parts.push(' onmouseover=\"', this.mxpTooltipFunction, '(this);\"');\r\n                parts.push(' onclick=\"', this.mxpSendFunction, '(event||window.event, this, ', format.href.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '&quot;'), ', ', format.prompt ? '1' : '0', ', ', format.tt.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '&quot;'), ');return false;\">');\r\n                if (end - offset === 0) continue;\r\n                parts.push('<span style=\"', style, '\"', fCls, '>');\r\n                parts.push(htmlEncode(text.substring(offset, end)));\r\n                parts.push('</span>');\r\n            }\r\n            else if (format.formatType === FormatType.MXPExpired && end - offset !== 0) {\r\n                if (offset < start || end < start)\r\n                    continue;\r\n                parts.push('<span style=\"', style, '\"', fCls, '>');\r\n                parts.push(htmlEncode(text.substring(offset, end)));\r\n                parts.push('</span>');\r\n            }\r\n            else if (format.formatType === FormatType.Image) {\r\n                if (offset < start || end < start)\r\n                    continue;\r\n                let tmp = '';\r\n                parts.push('<img src=\"');\r\n                if (format.url.length > 0) {\r\n                    parts.push(format.url);\r\n                    tmp += format.url;\r\n                    if (!format.url.endsWith('/')) {\r\n                        parts.push('/');\r\n                        tmp += '/';\r\n                    }\r\n                }\r\n                if (format.t.length > 0) {\r\n                    parts.push(format.t);\r\n                    tmp += format.t;\r\n                    if (!format.t.endsWith('/')) {\r\n                        parts.push('/');\r\n                        tmp += '/';\r\n                    }\r\n                }\r\n                tmp += format.name;\r\n                parts.push(format.name, '\"  style=\"');\r\n                if (format.w.length > 0)\r\n                    parts.push('width:', formatUnit(format.w, this._charWidth), ';');\r\n                if (format.h.length > 0)\r\n                    parts.push('height:', formatUnit(format.h, this._charHeight), ';');\r\n                switch (format.align.toLowerCase()) {\r\n                    case 'left':\r\n                        parts.push('float:left;');\r\n                        break;\r\n                    case 'right':\r\n                        parts.push('float:right;');\r\n                        right = true;\r\n                        break;\r\n                    case 'top':\r\n                    case 'middle':\r\n                    case 'bottom':\r\n                        parts.push('vertical-align:', format.align, ';');\r\n                        break;\r\n                }\r\n                if (format.hspace.length > 0 && format.vspace.length > 0) {\r\n                    parts.push('margin:');\r\n                    parts.push(formatUnit(format.vspace, this._charWidth), ' ');\r\n                    parts.push(formatUnit(format.hspace, this._charHeight), ';');\r\n                }\r\n                else if (format.hspace.length > 0) {\r\n                    parts.push('margin:');\r\n                    parts.push('0px ', formatUnit(format.hspace, this._charHeight), ';');\r\n                }\r\n                else if (format.vspace.length > 0) {\r\n                    parts.push('margin:');\r\n                    parts.push(formatUnit(format.vspace, this._charWidth), ' 0px;');\r\n                }\r\n                parts.push('\"');\r\n                if (format.ismap) parts.push(' ismap onclick=\"return false;\"');\r\n                parts.push(`src=\"${tmp}\"/>`);\r\n            }\r\n        }\r\n        if (inner) {\r\n            if (right && len < this.lines[idx].text.length)\r\n                return parts.join('');\r\n            if (right)\r\n                return parts.join('') + '<br>';\r\n            if (len < this.lines[idx].text.length)\r\n                return parts.join('');\r\n            return parts.join('') + '<br>';\r\n        }\r\n        if (right && len < this.lines[idx].text.length)\r\n            return `<span data-id=\"${id}\" class=\"line\" style=\"min-width:100%\">${parts.join('')}</span>`;\r\n        if (right)\r\n            return `<span data-id=\"${id}\" class=\"line\" style=\"min-width:100%\">${parts.join('')}<br></span>`;\r\n        if (len < this.lines[idx].text.length)\r\n            return `<span data-id=\"${id}\" class=\"line\">${parts.join('')}</span>`;\r\n        return `<span  data-id=\"${id}\" class=\"line\">${parts.join('')}<br></span>`;\r\n    }\r\n\r\n    public getLineText(line, full?: boolean) {\r\n        //if line out of range, or if for what ever reason the line is missing data return empty string\r\n        if (line < 0 || line >= this.lines.length || !this.lines[line]) return '';\r\n        //get line from id in case lines where removed\r\n        return this.lines[line].text;\r\n    }\r\n\r\n    private rebuildLine(start: number) {\r\n        this.rebuildLines(start, start);\r\n    }\r\n\r\n    private rebuildLines(start?: number, end?: number) {\r\n        if (!this.lines.length) return;\r\n        if (start === undefined || start < 0)\r\n            start = 0;\r\n        if (end === undefined || end === -1 || end >= this.lines.length)\r\n            end = this.lines.length - 1;\r\n        const lines = this.lines;\r\n        let _html = [];\r\n        let line = start;\r\n        for (; line <= end; line++) {\r\n            _html.push(this.getLineHTML(line));\r\n        }\r\n\r\n        //if all lines can speed up and reduce load by setting all view at once\r\n        if (start === 0 && end === this.lines.length - 1)\r\n            this._view.innerHTML = _html.join('');\r\n        //if selection of lines will need to update each line one at atime to not break other lines\r\n        else {\r\n            this._view.replaceChildren(...[].slice.call(this._view.children, 0, start), ...[].slice.call(this._view.children, end + 1));\r\n            if (start === 0)\r\n                this._view.firstElementChild.insertAdjacentHTML('beforebegin', _html.join(''));\r\n            else {\r\n                this._view.children[start - 1].insertAdjacentHTML('afterend', _html.join(''));\r\n            }\r\n        }\r\n    }\r\n\r\n    private doUpdate(type?: UpdateType) {\r\n        if (!type) return;\r\n        this._updating |= type;\r\n        if (this._updating === UpdateType.none)\r\n            return;\r\n        window.requestAnimationFrame(() => {\r\n            if (this._updating === UpdateType.none)\r\n                return;\r\n            if ((this._updating & UpdateType.rebuildLines) === UpdateType.rebuildLines) {\r\n                this.rebuildLines();\r\n                this._updating &= ~UpdateType.rebuildLines;\r\n            }\r\n            if ((this._updating & UpdateType.update) === UpdateType.update) {\r\n                this.update();\r\n                this._updating &= ~UpdateType.update;\r\n            }\r\n            if ((this._updating & UpdateType.display) === UpdateType.display) {\r\n                this.updateDisplay();\r\n                this._updating &= ~UpdateType.display;\r\n            }\r\n            if ((this._updating & UpdateType.trim) === UpdateType.trim) {\r\n                this.trimLines();\r\n                this._updating &= ~UpdateType.trim;\r\n            }\r\n            if ((this._updating & UpdateType.scrollEnd) === UpdateType.scrollEnd) {\r\n                this.scrollDisplay();\r\n                this._updating &= ~UpdateType.scrollEnd;\r\n            }\r\n            if ((this._updating & UpdateType.updateWindow) === UpdateType.updateWindow) {\r\n                this.updateWindow();\r\n                this._updating &= ~UpdateType.updateWindow;\r\n            }\r\n            this.doUpdate(this._updating);\r\n        });\r\n    }\r\n\r\n    public colorSubStrByLine(idx: number, fore, back?, start?: number, len?: number, style?: FontStyle) {\r\n        this.colorSubStringByLine(idx, fore, back, start, (start || 0) + (len || 0), style);\r\n    }\r\n\r\n    public colorSubStringByLine(idx: number, fore, back?, start?: number, end?: number, style?: FontStyle) {\r\n        //only update if something changed\r\n        if (!this._model.colorSubStringByLine(idx, fore, back, start, end, style))\r\n            return;\r\n        this.rebuildLine(idx);\r\n    }\r\n\r\n    public removeStyleSubStrByLine(idx: number, style: FontStyle, start?: number, len?: number) {\r\n        this.removeStyleSubStringByLine(idx, style, start, (start || 0) + (len || 0));\r\n    }\r\n\r\n    //color like javascript.substring using 0 index for start and end\r\n    public removeStyleSubStringByLine(idx: number, style: FontStyle, start?: number, end?: number) {\r\n        //only update if something changed\r\n        if (!this._model.removeStyleSubStringByLine(idx, style, start, end))\r\n            return;\r\n        this.rebuildLine(idx);\r\n    }\r\n\r\n    public highlightSubStrByLine(idx: number, start?: number, len?: number) {\r\n        this.highlightStyleSubStringByLine(idx, start, (start || 0) + (len || 0));\r\n    }\r\n\r\n    //color like javascript.substring using 0 index for start and end\r\n    public highlightStyleSubStringByLine(idx: number, start?: number, end?: number, color?: boolean) {\r\n        //only update if something changed\r\n        if (!this._model.highlightStyleSubStringByLine(idx, start, end, color))\r\n            return;\r\n        this.rebuildLine(idx);\r\n    }\r\n\r\n    public SetColor(code: number, color) {\r\n        this._model.SetColor(code, color);\r\n    }\r\n\r\n    public ClearMXP() {\r\n        this._model.ClearMXP();\r\n    }\r\n\r\n    public ResetMXPLine() {\r\n        this._model.ResetMXPLine();\r\n    }\r\n\r\n    /*\r\n    get hasSelection(): boolean {\r\n        const sel = this._currentSelection;\r\n        if (sel.start.x === sel.end.x && sel.start.y === sel.end.y)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    get selection(): string {\r\n        if (this._lines.length === 0) return '';\r\n        const sel = this._currentSelection;\r\n        let s = sel.start.x;\r\n        let e = sel.end.x;\r\n        let sL = sel.start.y;\r\n        let eL = sel.end.y;\r\n        if ((sL === -1 && eL === -1) || sL === null || eL === null)\r\n            return '';\r\n        if (sL < 0)\r\n            sL = 0;\r\n        else if (sL >= this._lines.length)\r\n            sL = this._lines.length - 1;\r\n        if (eL < 0)\r\n            eL = 0;\r\n        else if (eL >= this._lines.length)\r\n            eL = this._lines.length - 1;\r\n        //convert wrap offset to text offsets\r\n        s = this._lines[sL].startOffset + s;\r\n        e = this._lines[eL].startOffset + e;\r\n        //convert wrap lines to text lines\r\n        sL = this._model.getLineFromID(this._lines[sL].id);\r\n        eL = this._model.getLineFromID(this._lines[eL].id);\r\n        if (sL > eL) {\r\n            sL = sel.end.y;\r\n            eL = sel.start.y;\r\n            s = sel.end.x;\r\n            e = sel.start.x;\r\n        }\r\n        else if (sL < eL) {\r\n            sL = sel.start.y;\r\n            eL = sel.end.y;\r\n            s = sel.start.x;\r\n            e = sel.end.x;\r\n        }\r\n        else if (s === e) {\r\n            return '';\r\n        }\r\n        else if (sel.start.y > 0 && sel.start.y < this._lines.length && this._lines[sel.start.y].hr)\r\n            return '---';\r\n        else\r\n            return this._model.getText(sL, Math.min(s, e), Math.max(s, e));\r\n        const len = this._lines.length;\r\n\r\n        if (sL < 0)\r\n            sL = 0;\r\n        if (eL >= len) {\r\n            eL = len - 1;\r\n            e = this.getLineText(eL).length;\r\n        }\r\n        if (s < 0)\r\n            s = 0;\r\n        if (e > this.getLineText(eL).length)\r\n            e = this.getLineText(eL).length;\r\n\r\n        //convert wrap offset to text offsets\r\n        s = this._lines[sL].startOffset + s;\r\n        e = this._lines[eL].startOffset + e;\r\n        //convert wrap lines to text lines\r\n        sL = this._model.getLineFromID(this._lines[sL].id);\r\n        eL = this._model.getLineFromID(this._lines[eL].id);\r\n        const txt: string[] = [];\r\n        const lines = this._model.lines;\r\n        if (this.lines[sL].formats[0].hr)\r\n            txt.push('---');\r\n        else\r\n            txt.push(lines[sL].text.substring(s));\r\n        sL++;\r\n        while (sL < eL) {\r\n            if (lines[sL].formats[0].hr)\r\n                txt.push('---');\r\n            else\r\n                txt.push(lines[sL].text);\r\n            sL++;\r\n        }\r\n        if (lines[eL].formats[0].hr)\r\n            txt.push('---');\r\n        else\r\n            txt.push(lines[eL].text.substring(0, e));\r\n        return txt.join('\\n');\r\n    }\r\n\r\n    get selectionAsHTML(): string {\r\n        if (this._lines.length === 0) return '';\r\n        const sel = this._currentSelection;\r\n        let s = sel.start.x;\r\n        let e = sel.end.x;\r\n        let sL = sel.start.y;\r\n        let eL = sel.end.y;\r\n        if (sL < 0)\r\n            sL = 0;\r\n        else if (sL >= this._lines.length)\r\n            sL = this._lines.length - 1;\r\n        if (eL < 0)\r\n            eL = 0;\r\n        else if (eL >= this._lines.length)\r\n            eL = this._lines.length - 1;\r\n        //convert wrap offset to text offsets\r\n        s = this._lines[sL].startOffset + s;\r\n        e = this._lines[eL].startOffset + e;\r\n        //convert wrap lines to text lines\r\n        sL = this._model.getLineFromID(this._lines[sL].id);\r\n        eL = this._model.getLineFromID(this._lines[eL].id);\r\n        if (sL > eL) {\r\n            sL = sel.end.y;\r\n            eL = sel.start.y;\r\n            s = sel.end.x;\r\n            e = sel.start.x;\r\n        }\r\n        else if (sL < eL) {\r\n            sL = sel.start.y;\r\n            eL = sel.end.y;\r\n            s = sel.start.x;\r\n            e = sel.end.x;\r\n        }\r\n        else if (sel.start.x === sel.end.x) {\r\n            return '';\r\n        }\r\n        else {\r\n            sL = sel.start.y;\r\n            if (sL < 0) sL = 0;\r\n            if (sL >= this._lines.length)\r\n                sL = this._lines.length - 1;\r\n            //convert wrap offset to text offsets\r\n            s = this._lines[sL].startOffset + s;\r\n            e = this._lines[eL].startOffset + e;\r\n            s = Math.min(sel.start.x, sel.end.x);\r\n            e = Math.max(sel.start.x, sel.end.x);\r\n            //convert wrap lines to text lines\r\n            sL = this._model.getLineFromID(this._lines[sel.start.y].id);\r\n            return this.getLineHTML(sL, s, e);\r\n        }\r\n        const len = this._lines.length;\r\n\r\n        if (sL < 0)\r\n            sL = 0;\r\n        if (eL >= len) {\r\n            eL = len - 1;\r\n            e = this.getLineText(eL).length;\r\n        }\r\n        if (s < 0)\r\n            s = 0;\r\n        if (e > this.getLineText(eL).length)\r\n            e = this.getLineText(eL).length;\r\n        //convert wrap offset to text offsets\r\n        s = this._lines[sL].startOffset + s;\r\n        e = this._lines[eL].startOffset + e;\r\n        //convert wrap lines to text lines\r\n        sL = this._model.getLineFromID(this._lines[sL].id);\r\n        eL = this._model.getLineFromID(this._lines[eL].id);\r\n\r\n        const txt = [this.getLineHTML(sL, s)];\r\n        sL++;\r\n        while (sL < eL) {\r\n            txt.push(this.getLineHTML(sL));\r\n            sL++;\r\n        }\r\n        txt.push(this.getLineHTML(eL, 0, e));\r\n        return txt.join('\\n');\r\n    }\r\n\r\n    public selectAll() {\r\n        let ll = this._lines.length;\r\n        if (ll === 0) return;\r\n        ll--;\r\n        this._currentSelection = {\r\n            start: { x: 0, y: 0, lineID: this._lines[0].id, lineOffset: 0 },\r\n            end: { x: this.getLineText(ll).length, y: ll, lineID: this._lines[ll].id, lineOffset: this._lines[ll].endOffset },\r\n            scrollTimer: -1,\r\n            drag: false\r\n        };\r\n        this.emit('selection-changed');\r\n        this.emit('selection-done');\r\n        this.updateSelection();\r\n    }\r\n\r\n    public clearSelection() {\r\n        this._currentSelection = {\r\n            start: { x: -1, y: -1, lineID: -1, lineOffset: 0 },\r\n            end: { x: -1, y: -1, lineID: -1, lineOffset: 0 },\r\n            scrollTimer: -1,\r\n            drag: false\r\n        };\r\n        this.emit('selection-changed');\r\n        this.emit('selection-done');\r\n        this.updateSelection();\r\n    }\r\n    \r\n    */\r\n}\r\n\r\nexport class DisplayModel extends EventEmitter {\r\n    private _lineID = 0;\r\n    private _parser: Parser;\r\n    public lines: LineData[] = [];\r\n    private lineIDs: number[] = [];\r\n    private _expire = {};\r\n    private _expire2 = [];\r\n\r\n    get enableDebug() {\r\n        return this._parser.enableDebug;\r\n    }\r\n\r\n    set enableDebug(value) {\r\n        this._parser.enableDebug = value;\r\n    }\r\n\r\n    get tabWidth(): number {\r\n        return this._parser.tabWidth;\r\n    }\r\n\r\n    set tabWidth(value) {\r\n        this._parser.tabWidth = value;\r\n    }\r\n\r\n    get textLength(): number {\r\n        return this._parser.textLength;\r\n    }\r\n\r\n    get EndOfLine(): boolean {\r\n        return this._parser.EndOfLine;\r\n    }\r\n\r\n    get parseQueueLength(): number {\r\n        return this._parser.parseQueueLength;\r\n    }\r\n\r\n    get parseQueueEndOfLine(): boolean {\r\n        return this._parser.parseQueueEndOfLine;\r\n    }\r\n\r\n    set enableFlashing(value: boolean) {\r\n        this._parser.enableFlashing = value;\r\n    }\r\n    get enableFlashing(): boolean {\r\n        return this._parser.enableFlashing;\r\n    }\r\n\r\n    set enableMXP(value: boolean) {\r\n        this._parser.enableMXP = value;\r\n    }\r\n    get enableMXP(): boolean {\r\n        return this._parser.enableMXP;\r\n    }\r\n\r\n    set showInvalidMXPTags(value: boolean) {\r\n        this._parser.showInvalidMXPTags = value;\r\n    }\r\n    get showInvalidMXPTags(): boolean {\r\n        return this._parser.showInvalidMXPTags;\r\n    }\r\n\r\n    set enableBell(value: boolean) {\r\n        this._parser.enableBell = value;\r\n    }\r\n    get enableBell(): boolean {\r\n        return this._parser.enableBell;\r\n    }\r\n\r\n    set enableURLDetection(value: boolean) {\r\n        this._parser.enableURLDetection = value;\r\n    }\r\n    get enableURLDetection(): boolean {\r\n        return this._parser.enableURLDetection;\r\n    }\r\n\r\n    set enableMSP(value: boolean) {\r\n        this._parser.enableMSP = value;\r\n    }\r\n    get enableMSP(): boolean {\r\n        return this._parser.enableMSP;\r\n    }\r\n\r\n    set displayControlCodes(value: boolean) {\r\n        this._parser.displayControlCodes = value;\r\n    }\r\n    get displayControlCodes(): boolean {\r\n        return this._parser.displayControlCodes;\r\n    }\r\n\r\n    set emulateTerminal(value: boolean) {\r\n        this._parser.emulateTerminal = value;\r\n    }\r\n    get emulateTerminal(): boolean {\r\n        return this._parser.emulateTerminal;\r\n    }\r\n\r\n    set emulateControlCodes(value: boolean) {\r\n        this._parser.emulateControlCodes = value;\r\n    }\r\n    get emulateControlCodes(): boolean {\r\n        return this._parser.emulateControlCodes;\r\n    }\r\n\r\n    set MXPStyleVersion(value: string) {\r\n        this._parser.StyleVersion = value;\r\n    }\r\n    get MXPStyleVersion(): string {\r\n        return this._parser.StyleVersion;\r\n    }\r\n\r\n    constructor(options: DisplayOptions) {\r\n        super();\r\n        this._parser = new Parser(options);\r\n        this._parser.on('debug', (msg) => { this.emit(msg); });\r\n\r\n        this._parser.on('bell', () => { this.emit('bell'); });\r\n\r\n        this._parser.on('add-line', (data: ParserLine) => {\r\n            this.addParserLine(data, true);\r\n        });\r\n\r\n        this._parser.on('expire-links', (args) => {\r\n            let lines;\r\n            let line;\r\n            let expire;\r\n            if (!args || args.length === 0) {\r\n                for (line in this._expire2) {\r\n                    if (!this._expire2.hasOwnProperty(line))\r\n                        continue;\r\n                    this.expireLineLinkFormat(this._expire2[line], +line);\r\n                }\r\n                for (expire in this._expire) {\r\n                    if (!this._expire.hasOwnProperty(expire))\r\n                        continue;\r\n                    lines = this._expire[expire];\r\n                    for (line in lines) {\r\n                        if (!lines.hasOwnProperty(line))\r\n                            continue;\r\n                        this.expireLineLinkFormat(lines[line], +line);\r\n                    }\r\n                }\r\n                this._expire2 = [];\r\n                this._expire = {};\r\n                this.emit('expire-links', args);\r\n            }\r\n            else if (this._expire[args]) {\r\n                lines = this._expire[args];\r\n                for (line in lines) {\r\n                    if (!lines.hasOwnProperty(line))\r\n                        continue;\r\n                    this.expireLineLinkFormat(lines[line], +line);\r\n                }\r\n                delete this._expire[args];\r\n                this.emit('expire-links', args);\r\n            }\r\n        });\r\n\r\n        this._parser.on('parse-done', () => {\r\n            this.emit('parse-done');\r\n        });\r\n\r\n        this._parser.on('set-title', (title, type) => {\r\n            this.emit('set-title', title, type);\r\n        });\r\n        this._parser.on('music', (data) => {\r\n            this.emit('music', data);\r\n        });\r\n        this._parser.on('sound', (data) => {\r\n            this.emit('sound', data);\r\n        });\r\n\r\n        this._parser.on('MXP-tag-reply', (tag, args) => {\r\n            this.emit('MXP-tag-reply', tag, args);\r\n        });\r\n\r\n    }\r\n\r\n    public addParserLine(data: ParserLine, noUpdate?: boolean) {\r\n        data.timestamp = Date.now();\r\n        this.emit('add-line', data);\r\n        if (data == null || typeof data === 'undefined' || data.line == null || typeof data.line === 'undefined')\r\n            return;\r\n        this.emit('add-line-done', data);\r\n        if (data.gagged)\r\n            return;\r\n        const line: LineData = {\r\n            text: (data.line === '\\n' || data.line.length === 0) ? '' : data.line,\r\n            raw: data.raw,\r\n            formats: data.formats,\r\n            id: this._lineID,\r\n            timestamp: data.timestamp\r\n        }\r\n        this.lines.push(line);\r\n        this.lineIDs.push(this._lineID);\r\n        this._lineID++;\r\n        this.buildLineExpires(this.lines.length - 1);\r\n        this.emit('line-added', data, noUpdate);\r\n    }\r\n\r\n    private expireLineLinkFormat(formats, idx: number) {\r\n        let f;\r\n        let fs;\r\n        let fl;\r\n        let fsl;\r\n        let type;\r\n        let eType;\r\n        let format;\r\n        let n = 0;\r\n        for (fs = 0, fsl = formats.length; fs < fsl; fs++) {\r\n            fl = this.lines[idx].formats.length;\r\n            f = formats[fs];\r\n            format = this.lines[idx].formats[f];\r\n            type = format.formatType;\r\n            if (format.formatType === FormatType.MXPLink)\r\n                eType = FormatType.MXPLinkEnd;\r\n            else\r\n                eType = FormatType.MXPSendEnd;\r\n            format.formatType = FormatType.MXPExpired;\r\n            f++;\r\n            for (; f < fl; f++) {\r\n                if (this.lines[idx].formats[f] === eType) {\r\n                    if (n === 0) {\r\n                        this.lines[idx].formats[f].formatType = FormatType.MXPSkip;\r\n                        break;\r\n                    }\r\n                    else\r\n                        n--;\r\n                }\r\n                else if (this.lines[idx].formats[f] === type)\r\n                    n++;\r\n            }\r\n        }\r\n        this.emit('expire-link-line', idx);\r\n    }\r\n\r\n    public clear() {\r\n        this._parser.Clear();\r\n        this.lines = [];\r\n        this._expire = {};\r\n        this._expire2 = [];\r\n        this.lineIDs = [];\r\n        this._lineID = 0;\r\n    }\r\n\r\n    public IncreaseColor(color, percent) {\r\n        return this._parser.IncreaseColor(color, percent);\r\n    }\r\n\r\n    public GetColor(color) {\r\n        return this._parser.GetColor(color);\r\n    }\r\n\r\n    public append(txt: string, remote?: boolean, force?: boolean, prependSplit?: boolean) {\r\n        this._parser.parse(txt, remote || false, force || false, prependSplit || false);\r\n    }\r\n\r\n    public CurrentAnsiCode() {\r\n        return this._parser.CurrentAnsiCode();\r\n    }\r\n\r\n    public updateWindow(width?, height?) {\r\n        this._parser.updateWindow(width, height);\r\n    }\r\n\r\n    public SetColor(code: number, color) {\r\n        this._parser.SetColor(code, color);\r\n    }\r\n\r\n    public ClearMXP() {\r\n        this._parser.ClearMXP();\r\n    }\r\n\r\n    public ResetMXPLine() {\r\n        this._parser.ResetMXPLine();\r\n    }\r\n\r\n    get busy() {\r\n        return this._parser.busy;\r\n    }\r\n\r\n    public removeLine(line: number) {\r\n        this.lines.splice(line, 1);\r\n        this.lineIDs.splice(line, 1);\r\n        this._expire2.splice(line, 1);\r\n    }\r\n\r\n    public removeLines(line: number, amt: number) {\r\n        this.lines.splice(line, amt);\r\n        this.lineIDs.splice(line, amt);\r\n        this._expire2.splice(line, amt);\r\n        for (let ol in this._expire) {\r\n            if (!this._expire.hasOwnProperty(ol) || this._expire[ol].length === 0 || line >= this._expire[ol].length)\r\n                continue;\r\n            this._expire[ol].splice(line, amt);\r\n        }\r\n    }\r\n\r\n    public getLineID(line: number) {\r\n        if (line < 0 || line >= this.lineIDs.length) return -1;\r\n        return this.lineIDs[line];\r\n    }\r\n\r\n    public get getNextLineID() {\r\n        return this._lineID;\r\n    }\r\n\r\n    public getLineFromID(id) {\r\n        return this.lineIDs.indexOf(id);\r\n    }\r\n\r\n    private buildLineExpires(idx) {\r\n        if (idx === undefined)\r\n            idx = this.lines.length - 1;\r\n        const formats = this.lines[idx].formats;\r\n        for (const ol in this._expire) {\r\n            if (!this._expire.hasOwnProperty(ol))\r\n                continue;\r\n            if (this._expire[ol][idx])\r\n                delete this._expire[ol][idx];\r\n        }\r\n        delete this._expire2[idx];\r\n        let f = formats.length;\r\n        let format;\r\n        while (f--) {\r\n            format = formats[f];\r\n            if (format.formatType === FormatType.MXPSend || format.formatType === FormatType.MXPLink) {\r\n                if (format.expire && format.expire.length > 0) {\r\n                    if (!this._expire[format.expire])\r\n                        this._expire[format.expire] = [];\r\n                    if (!this._expire[format.expire][idx])\r\n                        this._expire[format.expire][idx] = [];\r\n                    this._expire[format.expire][idx].push(f);\r\n                }\r\n                else {\r\n                    if (!this._expire2[idx])\r\n                        this._expire2[idx] = [];\r\n                    this._expire2[idx].push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //color like javascript.substr using 0 index and length\r\n    public colorSubStrByLine(idx: number, fore, back?, start?: number, len?: number, style?: FontStyle) {\r\n        return this.colorSubStringByLine(idx, fore, back, start, start + len, style);\r\n    }\r\n\r\n    //color like javascript.substring using 0 index for start and end\r\n    public colorSubStringByLine(idx: number, fore, back?, start?: number, end?: number, style?: FontStyle) {\r\n        //invalid line bail\r\n        if (idx < 0 || idx >= this.lines.length) return false;\r\n        const lineLength = this.lines[idx].text.length;\r\n        //passed line skip\r\n        if (start >= lineLength) return false;\r\n        if (!start || start < 0) start = 0;\r\n        if (!end || end > lineLength)\r\n            end = lineLength;\r\n        if (start === end)\r\n            return false;\r\n        const formats = this.lines[idx].formats;\r\n        let len = formats.length;\r\n        let found: boolean = false;\r\n        //whole line so just do everything\r\n        if (start === 0 && end >= lineLength) {\r\n            for (let f = 0; f < len; f++) {\r\n                const format = formats[f];\r\n                //only worry about normal types\r\n                if (format.formatType !== FormatType.Normal)\r\n                    continue;\r\n                found = true;\r\n                if (format.bStyle) {\r\n                    format.bStyle = 0;\r\n                    format.fStyle = 0;\r\n                    format.fCls = 0;\r\n                }\r\n                format.color = fore || format.color;\r\n                format.background = back || format.background;\r\n                format.style |= style || FontStyle.None;\r\n            }\r\n            //found no text block must create one\r\n            if (!found) {\r\n                formats.unshift({\r\n                    formatType: FormatType.Normal,\r\n                    offset: 0,\r\n                    color: fore || 0,\r\n                    background: back || 0,\r\n                    size: 0,\r\n                    font: 0,\r\n                    style: style || FontStyle.None,\r\n                    unicode: false\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            let nFormat;\r\n            let formatEnd;\r\n            for (let f = 0; f < len; f++) {\r\n                const format = formats[f];\r\n                //only worry about normal types\r\n                if (format.formatType !== FormatType.Normal)\r\n                    continue;\r\n                //find the end of he format\r\n                if (f < len - 1) {\r\n                    let nF = f + 1;\r\n                    nFormat = formats[nF];\r\n                    //skip empty blocks\r\n                    if (format.offset === nFormat.offset && nFormat.formatType === format.formatType)\r\n                        continue;\r\n                    //find next block that is not same offset\r\n                    while (format.offset === nFormat.offset && nFormat.formatType === format.formatType && nF < len - 1)\r\n                        nFormat = formats[++nF];\r\n                    //last block same offset use total length\r\n                    if (nF === len && format.offset === nFormat.offset)\r\n                        formatEnd = lineLength;\r\n                    else\r\n                        formatEnd = nFormat.offset;\r\n                }\r\n                else\r\n                    formatEnd = lineLength;\r\n                if (start < format.offset) continue;\r\n                //passed end so try next block\r\n                if (start >= formatEnd) continue;\r\n                //after this block move on.\r\n                //not offset so need to insert a new block\r\n                found = true;\r\n                if (format.bStyle) {\r\n                    format.bStyle = 0;\r\n                    format.fStyle = 0;\r\n                    format.fCls = 0;\r\n                }\r\n                //if end middle of block, add new block with old info to split\r\n                if (end < formatEnd) {\r\n                    format.width = 0;\r\n                    formats.splice(f + 1, 0, {\r\n                        formatType: format.formatType,\r\n                        offset: end,\r\n                        color: format.color,\r\n                        background: format.background,\r\n                        size: format.size,\r\n                        font: format.font,\r\n                        style: format.style,\r\n                        unicode: format.unicode\r\n                    });\r\n                    len++;\r\n                }\r\n                if (start != format.offset) {\r\n                    //clean old width\r\n                    format.width = 0;\r\n                    //insert new block with new colors\r\n                    formats.splice(f + 1, 0, {\r\n                        formatType: format.formatType,\r\n                        offset: start,\r\n                        color: fore || format.color,\r\n                        background: back || format.background,\r\n                        size: format.size,\r\n                        font: format.font,\r\n                        style: format.style | (style || FontStyle.None),\r\n                        unicode: format.unicode\r\n                    });\r\n                    len++;\r\n                }\r\n                else {\r\n                    format.color = fore || format.color;\r\n                    format.background = back || format.background;\r\n                    format.style |= (style || FontStyle.None);\r\n                }\r\n                //not end so shift start to next block\r\n                if (end > formatEnd)\r\n                    start = formatEnd;\r\n            }\r\n            //clean out duplicates and other no longer needed blocks\r\n            this.lines[idx].formats = this.pruneFormats(formats, this.textLength);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public removeStyleSubStrByLine(idx: number, style: FontStyle, start?: number, len?: number) {\r\n        return this.removeStyleSubStringByLine(idx, style, start, start + len);\r\n    }\r\n\r\n    //color like javascript.substring using 0 index for start and end\r\n    public removeStyleSubStringByLine(idx: number, style: FontStyle, start?: number, end?: number) {\r\n        //invalid line bail\r\n        if (idx < 0 || idx >= this.lines.length) return false;\r\n        const lineLength = this.lines[idx].text.length;\r\n        //passed line skip\r\n        if (start >= lineLength) return false;\r\n        if (!start || start < 0) start = 0;\r\n        if (!end || end > lineLength)\r\n            end = lineLength;\r\n\r\n        const formats = this.lines[idx].formats;\r\n        let len = formats.length;\r\n        let found: boolean = false;\r\n        //whole line so just do everything\r\n        if (start === 0 && end >= lineLength) {\r\n            for (let f = 0; f < len; f++) {\r\n                const format = formats[f];\r\n                //only worry about normal types\r\n                if (format.formatType !== FormatType.Normal)\r\n                    continue;\r\n                found = true;\r\n                if (format.bStyle) {\r\n                    format.bStyle = 0;\r\n                    format.fStyle = 0;\r\n                    format.fCls = 0;\r\n                }\r\n                format.style &= ~(style || FontStyle.None);\r\n            }\r\n            //found no text block must create one\r\n            if (!found) {\r\n                formats.unshift({\r\n                    formatType: FormatType.Normal,\r\n                    offset: 0,\r\n                    color: 0,\r\n                    background: 0,\r\n                    size: 0,\r\n                    font: 0,\r\n                    style: FontStyle.None,\r\n                    unicode: false\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            let nFormat;\r\n            let formatEnd;\r\n            for (let f = 0; f < len; f++) {\r\n                const format = formats[f];\r\n                //only worry about normal types\r\n                if (format.formatType !== FormatType.Normal)\r\n                    continue;\r\n                //find the end of he format\r\n                if (f < len - 1) {\r\n                    let nF = f + 1;\r\n                    nFormat = formats[nF];\r\n                    //skip empty blocks\r\n                    if (format.offset === nFormat.offset && nFormat.formatType === format.formatType)\r\n                        continue;\r\n                    //find next block that is not same offset\r\n                    while (format.offset === nFormat.offset && nFormat.formatType === format.formatType && nF < len - 1)\r\n                        nFormat = formats[++nF];\r\n                    //last block same offset use total length\r\n                    if (nF === len && format.offset === nFormat.offset)\r\n                        formatEnd = lineLength;\r\n                    else\r\n                        formatEnd = nFormat.offset;\r\n                }\r\n                else\r\n                    formatEnd = lineLength;\r\n                if (start < format.offset) continue;\r\n                //passed end so try next block\r\n                if (start >= formatEnd) continue;\r\n                //after this block move on.\r\n                //not offset so need to insert a new block\r\n                found = true;\r\n                if (format.bStyle) {\r\n                    format.bStyle = 0;\r\n                    format.fStyle = 0;\r\n                    format.fCls = 0;\r\n                }\r\n                //if end middle of block, add new block with old info to split\r\n                if (end < formatEnd) {\r\n                    format.width = 0;\r\n                    formats.splice(f + 1, 0, {\r\n                        formatType: format.formatType,\r\n                        offset: end,\r\n                        color: format.color,\r\n                        background: format.background,\r\n                        size: format.size,\r\n                        font: format.font,\r\n                        style: format.style,\r\n                        unicode: format.unicode\r\n                    });\r\n                    len++;\r\n                }\r\n                if (start != format.offset) {\r\n                    //clean old width\r\n                    format.width = 0;\r\n                    //insert new block with new colors\r\n                    formats.splice(f + 1, 0, {\r\n                        formatType: format.formatType,\r\n                        offset: start,\r\n                        color: format.color,\r\n                        background: format.background,\r\n                        size: format.size,\r\n                        font: format.font,\r\n                        style: format.style & ~(style || FontStyle.None),\r\n                        unicode: format.unicode\r\n                    });\r\n                    len++;\r\n                }\r\n                else {\r\n                    format.style &= ~(style || FontStyle.None);\r\n                }\r\n                //not end so shift start to next block\r\n                if (end > formatEnd)\r\n                    start = formatEnd;\r\n            }\r\n            //clean out duplicates and other no longer needed blocks\r\n            this.lines[idx].formats = this.pruneFormats(formats, this.textLength);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public highlightSubStrByLine(idx: number, start?: number, len?: number) {\r\n        return this.highlightStyleSubStringByLine(idx, start, start + len);\r\n    }\r\n\r\n    //color like javascript.substring using 0 index for start and end\r\n    public highlightStyleSubStringByLine(idx: number, start?: number, end?: number, color?: boolean) {\r\n        //invalid line bail\r\n        if (idx < 0 || idx >= this.lines.length) return false;\r\n        const lineLength = this.lines[idx].text.length;\r\n        //passed line skip\r\n        if (start >= lineLength) return false;\r\n        if (!start || start < 0) start = 0;\r\n        if (!end || end > lineLength)\r\n            end = lineLength;\r\n\r\n        const formats = this.lines[idx].formats;\r\n        let len = formats.length;\r\n        let found: boolean = false;\r\n        //whole line so just do everything\r\n        if (start === 0 && end >= lineLength) {\r\n            for (let f = 0; f < len; f++) {\r\n                const format = formats[f];\r\n                //only worry about normal types\r\n                if (format.formatType !== FormatType.Normal)\r\n                    continue;\r\n                found = true;\r\n                if (format.bStyle) {\r\n                    format.bStyle = 0;\r\n                    format.fStyle = 0;\r\n                    format.fCls = 0;\r\n                }\r\n                if (color || (format.style & FontStyle.Bold) === FontStyle.Bold) {\r\n                    if (typeof format.color === 'number')\r\n                        format.color = this._parser.IncreaseColor(this._parser.GetColor(format.color), 0.25);\r\n                    else\r\n                        format.color = this._parser.IncreaseColor(format.color, 0.25);\r\n                }\r\n                else\r\n                    format.style |= FontStyle.Bold;\r\n            }\r\n            //found no text block must create one\r\n            if (!found) {\r\n                formats.unshift({\r\n                    formatType: FormatType.Normal,\r\n                    offset: 0,\r\n                    color: color ? 370 : 0,\r\n                    background: 0,\r\n                    size: 0,\r\n                    font: 0,\r\n                    style: color ? FontStyle.None : FontStyle.Bold,\r\n                    unicode: false\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            let nFormat;\r\n            let formatEnd;\r\n            for (let f = 0; f < len; f++) {\r\n                const format = formats[f];\r\n                //only worry about normal types\r\n                if (format.formatType !== FormatType.Normal)\r\n                    continue;\r\n                //find the end of he format\r\n                if (f < len - 1) {\r\n                    let nF = f + 1;\r\n                    nFormat = formats[nF];\r\n                    //skip empty blocks\r\n                    if (format.offset === nFormat.offset && nFormat.formatType === format.formatType)\r\n                        continue;\r\n                    //find next block that is not same offset\r\n                    while (format.offset === nFormat.offset && nFormat.formatType === format.formatType && nF < len - 1)\r\n                        nFormat = formats[++nF];\r\n                    //last block same offset use total length\r\n                    if (nF === len && format.offset === nFormat.offset)\r\n                        formatEnd = lineLength;\r\n                    else\r\n                        formatEnd = nFormat.offset;\r\n                }\r\n                else\r\n                    formatEnd = lineLength;\r\n                if (start < format.offset) continue;\r\n                //passed end so try next block\r\n                if (start >= formatEnd) continue;\r\n                //after this block move on.\r\n                //not offset so need to insert a new block\r\n                found = true;\r\n                if (format.bStyle) {\r\n                    format.bStyle = 0;\r\n                    format.fStyle = 0;\r\n                    format.fCls = 0;\r\n                }\r\n                //if end middle of block, add new block with old info to split\r\n                if (end < formatEnd) {\r\n                    format.width = 0;\r\n                    formats.splice(f + 1, 0, {\r\n                        formatType: format.formatType,\r\n                        offset: end,\r\n                        color: format.color,\r\n                        background: format.background,\r\n                        size: format.size,\r\n                        font: format.font,\r\n                        style: format.style,\r\n                        unicode: format.unicode\r\n                    });\r\n                    len++;\r\n                }\r\n                if (start != format.offset) {\r\n                    //clean old width\r\n                    format.width = 0;\r\n                    //insert new block with new colors\r\n                    nFormat = {\r\n                        formatType: format.formatType,\r\n                        offset: start,\r\n                        color: format.color,\r\n                        background: format.background,\r\n                        size: format.size,\r\n                        font: format.font,\r\n                        style: format.style,\r\n                        unicode: format.unicode\r\n                    }\r\n                    if (color || (format.style & FontStyle.Bold) === FontStyle.Bold) {\r\n                        if (typeof format.color === 'number')\r\n                            nFormat.color = this._parser.IncreaseColor(this._parser.GetColor(format.color), 0.25);\r\n                        else\r\n                            nFormat.color = this._parser.IncreaseColor(format.color, 0.25);\r\n                    }\r\n                    else\r\n                        nFormat.style |= FontStyle.Bold;\r\n                    formats.splice(f + 1, 0, nFormat);\r\n                    len++;\r\n                }\r\n                else if (color || (format.style & FontStyle.Bold) === FontStyle.Bold) {\r\n                    if (typeof format.color === 'number')\r\n                        format.color = this._parser.IncreaseColor(this._parser.GetColor(format.color), 0.25);\r\n                    else\r\n                        format.color = this._parser.IncreaseColor(format.color, 0.25);\r\n                }\r\n                else\r\n                    format.style |= FontStyle.Bold;\r\n\r\n                //not end so shift start to next block\r\n                if (end > formatEnd)\r\n                    start = formatEnd;\r\n            }\r\n            //clean out duplicates and other no longer needed blocks\r\n            this.lines[idx].formats = this.pruneFormats(formats, this.textLength);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private pruneFormats(formats, textLen) {\r\n        //no formats or only 1 format\r\n        if (!formats || formats.length < 2) return formats;\r\n        const l = formats.length;\r\n        const nF = [];\r\n        for (let f = 0; f < l; f++) {\r\n            const format = formats[f];\r\n            let end;\r\n            if (f < l - 1) {\r\n                const nFormat = formats[f + 1];\r\n                //old links that have expired so no longer needed clean\r\n                //if (format.formatType === FormatType.MXPSkip) continue;\r\n                //skip format until find one that has different offset\r\n                if (format.offset === nFormat.offset && nFormat.formatType === format.formatType)\r\n                    continue;\r\n                end = nFormat.offset;\r\n                //empty link\r\n                if (format.formatType === FormatType.Link && end - format.offset === 0 && nFormat.formatType === FormatType.LinkEnd)\r\n                    continue;\r\n                //empty send\r\n                if (format.formatType === FormatType.MXPSend && end - format.offset === 0 && nFormat.formatType === FormatType.MXPSendEnd)\r\n                    continue;\r\n                //empty link\r\n                if (format.formatType === FormatType.MXPLink && end - format.offset === 0 && nFormat.formatType === FormatType.MXPLinkEnd)\r\n                    continue;\r\n                //same data but offset is higher, set next block current offset, clear width and continue;\r\n                if (\r\n                    format.formatType === nFormat.formatType &&\r\n                    format.color === nFormat.color &&\r\n                    format.background === nFormat.background &&\r\n                    format.size === nFormat.size &&\r\n                    format.font === nFormat.font &&\r\n                    format.style === nFormat.style &&\r\n                    format.unicode === nFormat.unicode\r\n                ) {\r\n                    nFormat.offset = format.offset;\r\n                    nFormat.width = 0;\r\n                    continue;\r\n                }\r\n            }\r\n            //trailing link with no text or empty format block and not fragment\r\n            else if (format.offset === textLen && textLen !== 0 && ((format.formatType === FormatType.Normal && !format.hr) || format.formatType === FormatType.Link || format.formatType === FormatType.MXPSend || format.formatType === FormatType.MXPLink))\r\n                continue;\r\n            nF.push(format);\r\n        }\r\n        return nF;\r\n    }\r\n\r\n    get text(): string {\r\n        return this.lines.map(line => line.text).join('\\n');\r\n    }\r\n\r\n    get raw(): string {\r\n        return this.lines.map(line => line.raw).join('');\r\n    }\r\n\r\n    public getText(line, start, end?) {\r\n        if (line < 0 || line >= this.lines.length) return '';\r\n        if (start < 0) start = 0;\r\n        if (typeof end === 'undefined' || end > this.lines[line].text.length)\r\n            return this.lines[line].text.substring(start);\r\n        return this.lines[line].text.substring(start, end);\r\n    }\r\n}\r\n", "{\n  \"name\": \"oimud\",\n  \"productName\": \"oiMUD\",\n  \"icon\": \"./assets/icons/oiMUD.png.png\",\n  \"website\": \"https://github.com/icewolfz/oiMUD\",\n  \"homepage\": \"https://github.com/icewolfz/oiMUD\",\n  \"url\": \"https://github.com/icewolfz/oiMUD/issues\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index.htm\",\n  \"description\": \"A MUD websocket client.\",\n  \"author\": \"Icewolfz\",\n  \"email\": \"icewolfz@users.noreply.github.com\",\n  \"license\": \"Personal\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/icewolfz/oiMUD.git\"\n  },\n  \"private\": true,\n  \"scripts\": {\n    \"tslint\": \"tsc -p . --listEmittedFiles  --noEmit\",\n    \"build:all\": \"node build.js -a\",\n    \"build:all-debug\": \"node build.js -a -d\",  \n    \"build:css-debug\": \"node build.js -css -d\"\n  },\n  \"devDependencies\": {\n    \"@types/jquery\": \"^3.5.31\",\n    \"esbuild\": \"0.24.0\",\n    \"eslint\": \"^9.12.0\",\n    \"eslint-plugin-html\": \"^8.1.2\",\n    \"sass\": \"^1.79.4\"\n  },\n  \"dependencies\": {\n    \"@types/jstorage\": \"^0.3.33\",\n    \"jquery\": \"^3.7.1\",\n    \"mathjs\": \"^13.2.0\",\n    \"moment\": \"^2.30.1\"\n  }\n}\n", "//MSP = 90 // MUD Sound Protocol (MSP)(unofficial)\n/**\n * Implementation of the MSP (MUD Sound Protocol) and GMCP Client.Media module for oiMUD as a plugin\n *\n * @author Icewolfz\n * @copyright Icewolfz 2013\n * @version 1.2\n * MSP requires the modules {@link module:telnet}.\n * MSP requires the modules {@link module:src/lib/buzz}.\n * @requires module:src/lib/buzz\n * @requires module:telnet\n * @namespace MSP\n * @constructor\n *\n * @property {Object} [server=false]\t- Weather the server willing to do MSP\n * @property {Object} [enabled=true]\t- Is MSP module enabled\n *\n * @todo make Music/Sound play music either using soundmanager2(larger but more compatible) or buzz (HTML5 old)\n */\ndeclare global {\n    interface Window {\n        MSP: MSP;\n    }\n}\n\nimport * as buzz from './../lib/buzz.js'\n\nimport { EventEmitter } from './../events.js';\nimport { stripQuotes } from './../library.js';\nimport { TelnetOption } from './../telnet.js';\nimport { Client } from './../client.js';\nimport { Plugin } from '../plugin.js';\nimport { AnsiColorCode } from '../ansi.js';\nimport { FunctionEvent } from '../types.js';\n\nenum ParseMode {\n    default = 0,\n    inline = 1,\n    strict = 2\n}\n\ninterface MSPData {\n    off: boolean;\n    file?: string;\n    url?: string;\n    volume?: number;\n    repeat?: number;\n    priority?: number;\n    type?: string;\n    continue?: boolean;\n}\n\nclass SoundState extends EventEmitter {\n    public _file: string = '';\n    private _repeats: number = 1;\n    private _volume: number = 100;\n    private _priority: number = 50;\n    private _retries: number = 0;\n\n    public current: number = 0;\n    public sound = null;\n    public playing: boolean = false;\n    public url: string = '';\n    public continue: boolean = true;\n    public maxErrorRetries: number = 0;\n\n    set file(file: string) {\n        if (!this.continue)\n            this.close();\n        this._file = file;\n    }\n    get file(): string {\n        return this._file;\n    }\n\n    set repeats(repeats: number) {\n        if (repeats >= -1)\n            this._repeats = repeats;\n        else\n            this._repeats = 1;\n        this.current = 0;\n    }\n\n    get repeats(): number {\n        return this._repeats;\n    }\n\n    set volume(volume: number) {\n        if (volume >= 0 && volume <= 100)\n            this._volume = volume;\n        else\n            this._volume = 1;\n    }\n\n    get volume(): number {\n        return this._volume;\n    }\n\n    set priority(priority: number) {\n        if (priority >= 0 && priority <= 100)\n            this._priority = priority;\n        else\n            this._priority = 50;\n    }\n\n    get priority(): number {\n        return this._priority;\n    }\n\n    public play() {\n        this.playing = true;\n        if (this._repeats > 0 && this.current < this._repeats) {\n            this.current++;\n            this.close();\n            this.open().then(() => {\n                //reset to 0 as it was successful in prep of next sound\n                this._retries = 0;\n                this.sound.setVolume(this._volume).play();\n                if (this.current < this._repeats) {\n                    this.sound.bind('ended abort', (e) => {\n                        this.play();\n                    });\n                }\n                else\n                    this.sound.bind('ended abort', (e) => {\n                        this.playing = false;\n                        this.emit('ended');\n                    });\n                if (this.sound.isEnded())\n                    this.playing = false;\n            }).catch(err => {\n                //only retry until reaches max error retries to prevent infinite looping\n                if (this._retries < this.maxErrorRetries) {\n                    //reduce current as failed to play\n                    this.current--;\n                    this.play();\n                    this._retries++;\n                }\n                //if at max retries do nothing and reset to 0\n                else\n                    this._retries = 0;\n            });\n        }\n        else if (this._repeats === -1) {\n            this.close();\n            this.open().then(() => {\n                //reset to 0 as it was successful in prep of next sound\n                this._retries = 0;\n                this.sound.setVolume(this._volume).loop().play();\n                if (this.sound.isEnded())\n                    this.playing = false;\n            }).catch(err => {\n                //only retry until reaches max error retries to prevent infinite looping\n                if (this._retries < this.maxErrorRetries) {\n                    this.play();\n                    this._retries++;\n                }\n                //if at max retries do nothing and reset to 0\n                else\n                    this._retries = 0;\n            });\n        }\n        else\n            this.playing = false;\n    }\n\n    public async open() {\n        this.close();\n        return new Promise((resolve, reject) => {\n            this.sound = (new buzz.sound as any)(this.url + this._file);\n            this.sound.bind('loadeddata', (e) => {\n                this.emit('playing', { file: this._file, sound: this.sound, state: this, duration: buzz.toTimer(this.sound.getDuration()) });\n                resolve(1);\n            });\n            this.sound.bind('error', (e) => {\n                if (e && e.currentTarget && e.currentTarget.error) {\n                    switch (e.currentTarget.error.code) {\n                        case 1:\n                            this.emit('error', new Error(`MSP - Aborted: ${this.url}${this._file}`));\n                            break;\n                        case 2:\n                            this.emit('error', new Error(`MSP - Network error: ${this.url}${this._file}`));\n                            break;\n                        case 3:\n                            this.emit('error', new Error(`MSP - Could not decode: ${this.url}${this._file}`));\n                            break;\n                        case 4:\n                            this.emit('error', new Error(`MSP - Source not supported: ${this.url}${this._file}`));\n                            break;\n                    }\n                }\n                else if (e && e.currentTarget && e.currentTarget.networkState === 3)\n                    this.emit('error', new Error(`MSP - Source not found or unable to play: ${this.url}${this._file}`));\n                else\n                    this.emit('error', new Error('MSP - Unknown error'));\n                reject();\n            });\n            this.emit('opened');\n        });\n    }\n\n    public close() {\n        if (this.sound) {\n            this.stop();\n            delete this.sound;\n            this.sound = null;\n        }\n        else if (this.playing)\n            this.playing = false;\n        this.emit('closed');\n    }\n\n    public stop() {\n        if (this.sound)\n            this.sound.stop();\n        this.playing = false;\n        this.emit('stopped');\n    }\n}\n\nexport interface MSPOptions {\n    client: Client;\n    forcedDefaultMusicURL?: string;\n    forcedDefaultSoundURL?: string;\n}\n\n/**\n * Implementation of the MSP (MUD Sound Protocol)\n *\n * @author William\n * @copyright William 2013\n * @version 1.1\n * MSP requires the modules {@link module:telnet}.\n * MSP requires the modules {@link module:buzz}.\n * @requires module:buzz\n * @requires module:telnet\n * @namespace MSP\n * @constructor\n *\n * @property {Object} [server=false]\t- Weather the server willing to do MSP\n * @property {Object} [enabled=true]\t- Is MSP module enabled\n */\nexport class MSP extends Plugin {\n    private _enabled: boolean = true;\n    private _enableSound: boolean = true;\n    private _maxErrorRetries: number = 1;\n    public server: boolean = false;\n    public enableDebug: boolean = false;\n\n    public defaultSoundURL: string = '';\n    public defaultMusicURL: string = '';\n    public forcedDefaultMusicURL: string = 'http://' + window.location.hostname + '/sounds/';\n    public forcedDefaultSoundURL: string = 'http://' + window.location.hostname + '/sounds/';\n    public defaultSoundExt: string = '.m4a';\n    public defaultMusicExt: string = '.m4a';\n    public MusicState: SoundState = new SoundState();\n    public SoundState: SoundState = new SoundState();\n    public parseMode: ParseMode = ParseMode.default;\n\n    constructor(options?: MSPOptions | Client) {\n        super(options instanceof Client ? options : options?.client);\n        if (options && !(options instanceof Client)) {\n            if ('forcedDefaultMusicURL' in options)\n                this.forcedDefaultMusicURL = options.forcedDefaultMusicURL;\n            if ('forcedDefaultSoundURL' in options)\n                this.forcedDefaultSoundURL = options.forcedDefaultSoundURL;\n        }\n        this.MusicState.on('playing', (data) => { data.type = 1; this.emit('playing', data); });\n        this.SoundState.on('playing', (data) => { data.type = 0; this.emit('playing', data); });\n        this.MusicState.on('error', (err) => { this.emit('error', err); });\n        this.SoundState.on('error', (err) => { this.emit('error', err); });\n        this.MusicState.maxErrorRetries = this._maxErrorRetries;\n        this.SoundState.maxErrorRetries = this._maxErrorRetries;\n    }\n\n    public remove() {\n        if (!this.client) return;\n        this.client.off('connecting', this.reset);\n        this.client.off('close', this.reset);\n        this.client.off('received-option', this.processOption);\n        this.client.off('received-GMCP', this.processGMCP);\n        this.client.off('music', this.music);\n        this.client.off('sound', this.sound);\n        this.client.off('options-loaded', this.loadOptions);\n        this.client.off('option-loaded', this.setOption);\n        this.client.off('function', this.processFunction);\n        this.off('error', this.client.error);\n        this.off('debug', this.client.debug);\n    }\n\n    public initialize() {\n        if (!this.client) return;\n        this.client.on('connecting', this.reset);\n        this.client.on('close', this.reset);\n        this.client.on('received-option', this.processOption);\n        this.client.on('received-GMCP', this.processGMCP);\n        this.client.on('music', this.music);\n        this.client.on('sound', this.sound);\n        this.client.on('options-loaded', this.loadOptions);\n        this.client.on('option-loaded', this.setOption);\n        this.client.on('function', this.processFunction);\n        this.on('playing', (data) => {\n            if (!this.client) return;\n            this.debug('MSP ' + (data.type ? 'Music' : 'Sound') + ' Playing ' + data.file + ' for ' + data.duration);\n            this.debug(data);\n            if (!this.client.getOption('notifyMSPPlay')) return;\n            this.client.echo((data.type ? 'Music' : 'Sound') + ' Playing ' + data.file + ' for ' + data.duration, AnsiColorCode.InfoText, AnsiColorCode.InfoBackground, true, true);\n        });\n        this.on('debug', this.client.debug);\n        this.on('error', this.client.error);\n        this.loadOptions();\n    }\n\n    public get menu() {\n        return [];\n    }\n\n    public loadOptions() {\n        this.enableDebug = this.client.getOption('enableDebug');\n        this.enabled = this.client.getOption('enableMSP');\n        this.enableSound = this.client.getOption('enableSound');\n        this.maxErrorRetries = this.client.getOption('mspMaxRetriesOnError');\n    }\n\n    public setOption(option, value) {\n        switch (option) {\n            case 'enableMSP':\n                this.enabled = this.client.getOption('enableMSP');\n                break;\n            case 'mspMaxRetriesOnError':\n                this.maxErrorRetries = this.client.getOption('mspMaxRetriesOnError');\n                break;\n            case 'enableSound':\n            case 'enableDebug':\n                this[option] = value;\n                break;\n        }\n    }\n\n    /**\n     * enable or disable MSP\n     *\n     * @type {boolean}\n     * @memberof MSP\n     */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        if (value === this._enabled) return;\n        this._enabled = value;\n        this.MusicState?.close();\n        this.SoundState?.close();\n    }\n\n    /**\n     * the number of retries to try before stopping when an error happens MSP\n     *\n     * @type {boolean}\n     * @memberof MSP\n     */\n    get maxErrorRetries() { return this._maxErrorRetries; }\n    set maxErrorRetries(value) {\n        if (value === this._maxErrorRetries) return;\n        this._maxErrorRetries = value;\n        if (this.MusicState)\n            this.MusicState.maxErrorRetries = value;\n        if (this.SoundState)\n            this.SoundState.maxErrorRetries = value;\n    }\n\n\n    /**\n     * enable or disable enableSound, allow processing of msp\n     *\n     * @type {boolean}\n     * @memberof MSP\n     */\n    get enableSound() { return this._enableSound; }\n    set enableSound(value) {\n        if (value === this._enableSound) return;\n        this._enableSound = value;\n        this.MusicState?.close();\n        this.SoundState?.close();\n    }\n\n    /**\n     * getArguments - process a line of text and extract any arguments and return\n     * them as an object for consuming and handle it due to being a web browser can't\n     * save sounds, so they either need a url or be on the local http server using\n     * the default url set\n     *\n     * @param {String} text the line of text extract arguments from\n     * @param {Number} type the type of arguments to process, 0 SOUND, 1 MUSIC\n     * @returns {Object} return a MUSIC or SOUND argument object\n     */\n    private getArguments(text: string, type: number) {\n        const e: MSPData = { off: false, file: '', url: '', volume: 100, repeat: 1, priority: 50, type: '', continue: true };\n        const args = [];\n        let state: number = 0;\n        let str = [];\n        let x: number = 0;\n        let xl: number = text.length;\n        let c: string;\n        let arg;\n        let tmp;\n        for (; x < xl; x++) {\n            c = text.charAt(x);\n            switch (state) {\n                case 1:\n                    if (c === '\\'') {\n                        state = 0;\n                        str.push(c);\n                    }\n                    else\n                        str.push(c);\n                    break;\n                case 2:\n                    if (c === '\\'') {\n                        state = 0;\n                        str.push(c);\n                    }\n                    else\n                        str.push(c);\n                    break;\n                default:\n                    if (c === ' ') {\n                        args.push(str.join(''));\n                        str = [];\n                    }\n                    else if (c === '\\'') {\n                        state = 1;\n                        str.push(c);\n                    }\n                    else if (c === '\\'') {\n                        state = 2;\n                        str.push(c);\n                    }\n                    else\n                        str.push(c);\n\n                    break;\n            }\n        }\n        if (str.length > 0) {\n            args.push(str.join(''));\n            str = [];\n        }\n        x = 0;\n        xl = args.length;\n        this.debug('MSP arguments found: ' + args);\n        for (x = 0; x < xl; x++) {\n            arg = args[x].split('=');\n            if (arg.length > 1) {\n                switch (arg[0].toUpperCase()) {\n                    case 'FNAME':\n                        e.file = stripQuotes(arg[1]);\n                        if (e.file.toLowerCase() === 'off') {\n                            e.off = true;\n                            e.file = '';\n                        }\n                        break;\n                    case 'V': //volume\n                        tmp = parseInt(arg[1], 10);\n                        if (isNaN(tmp))\n                            tmp = 100;\n                        e.volume = tmp;\n                        break;\n                    case 'L': //repeat\n                        tmp = parseInt(arg[1], 10);\n                        if (isNaN(tmp))\n                            tmp = 1;\n                        e.repeat = tmp;\n                        break;\n                    //Sound only\n                    case 'P': //priority\n                        tmp = parseInt(arg[1], 10);\n                        if (isNaN(tmp))\n                            tmp = 1;\n                        e.priority = tmp;\n                        break;\n                    //Music only\n                    case 'C': //continue\n                        e.continue = arg[1] !== '0';\n                        break;\n                    case 'T': //type\n                        if (arg[1].length > 0)\n                            e.type = arg[1];\n                        break;\n                    case 'U': //url\n                        e.url = stripQuotes(arg[1]);\n                        if (!e.url.endsWith('/') && e.url.length > 0)\n                            e.url += '/';\n                        break;\n                }\n            }\n            else if (x === 0) {\n                e.file = stripQuotes(args[x]);\n                if (e.file.toLowerCase() === 'off') {\n                    e.off = true;\n                    e.file = '';\n                }\n            }\n            else if (x === 1) {\n                tmp = parseInt(args[x], 10);\n                if (isNaN(tmp))\n                    tmp = 100;\n                e.volume = tmp;\n            }\n            else if (x === 2) {\n                tmp = parseInt(args[x], 10);\n                if (isNaN(tmp))\n                    tmp = 1;\n                e.repeat = tmp;\n            }\n            else if (x === 3 && type === 1)\n                e.continue = args[x] !== '0';\n            else if (x === 3) {\n                tmp = parseInt(args[x], 10);\n                if (isNaN(tmp))\n                    tmp = 1;\n                e.priority = tmp;\n            }\n            else if (x === 4) {\n                if (args[x].length > 0)\n                    e.type = args[x];\n            }\n            else if (x === 5) {\n                e.url = stripQuotes(args[x]);\n                if (!e.url.endsWith('/') && e.url.length > 0)\n                    e.url += '/';\n            }\n        }\n        this.debug(e);\n        return e;\n    }\n\n    public reset() {\n        this.server = false;\n    }\n\n    /**\n     * music - process music object and player/stop based on object options\n     *\n     * @param {Object} data Music argument object, contains all settings\n     */\n    public music(data: MSPData) {\n        if (!this.enabled && !this.enableSound) return false;\n        if (!data.file || data.file.length === 0) {\n            if (data.off && data.url && data.url.length > 0)\n                this.defaultMusicURL = data.url;\n            else if (data.off)\n                this.MusicState.stop();\n            return;\n        }\n        else if (data.off) {\n            this.MusicState.stop();\n            return;\n        }\n        this.MusicState.volume = data.volume;\n        this.MusicState.repeats = data.repeat;\n        this.MusicState.continue = data.continue;\n        const old = this.MusicState.file;\n\n        if (data.file.lastIndexOf('.') === -1)\n            this.MusicState.file = data.file + this.defaultMusicExt;\n        else\n            this.MusicState.file = data.file;\n        if (data.url && data.url.length > 0)\n            this.MusicState.url = data.url;\n        else if (this.forcedDefaultMusicURL && this.forcedDefaultMusicURL.length > 0)\n            this.MusicState.url = this.forcedDefaultMusicURL;\n        else if (this.defaultMusicURL && this.defaultMusicURL.length > 0)\n            this.MusicState.url = this.defaultMusicURL;\n        else\n            this.MusicState.url = '';\n        if (this.MusicState.url.length > 0 && !this.MusicState.url.endsWith('/'))\n            this.MusicState.url += '/';\n        if (data.type && data.type.length > 0) {\n            this.MusicState.url += data.type;\n            if (this.MusicState.url.length > 0 && !this.MusicState.url.endsWith('/'))\n                this.MusicState.url += '/';\n        }\n        if (old !== this.MusicState.file || !data.continue || !this.MusicState.playing) {\n            if (this.enableSound)\n                this.MusicState.play();\n            else\n                this.emit('playing', { type: 1, file: this.MusicState.file, sound: this.MusicState.sound, state: this.MusicState, duration: '--:--' });\n        }\n    }\n\n    /**\n     * sound - process music object and player/stop based on object options\n     *\n     * @param {Object} data Sound argument object, contains all settings\n     * @todo make it play/stop sound\n     */\n    public sound(data: MSPData) {\n        if (!this.enabled && !this.enableSound) return false;\n        if (!data.file || data.file.length === 0) {\n            if (data.off && data.url && data.url.length > 0)\n                this.defaultSoundURL = data.url;\n            else if (data.off)\n                this.SoundState.stop();\n            return;\n        }\n        else if (data.off) {\n            this.SoundState.stop();\n            return;\n        }\n        //if playing and new priority is lower, do not play new sound\n        if (this.SoundState.playing && data.priority < this.SoundState.priority)\n            return false;\n\n        this.SoundState.volume = data.volume;\n        this.SoundState.repeats = data.repeat;\n        this.SoundState.priority = data.priority;\n        if (data.file.lastIndexOf('.') === -1)\n            this.SoundState.file = data.file + this.defaultSoundExt;\n        else\n            this.SoundState.file = data.file;\n        if (data.url && data.url.length > 0)\n            this.SoundState.url = data.url;\n        else if (this.forcedDefaultSoundURL && this.forcedDefaultSoundURL.length > 0)\n            this.SoundState.url = this.forcedDefaultSoundURL;\n        else if (this.defaultSoundURL && this.defaultSoundURL.length > 0)\n            this.SoundState.url = this.defaultSoundURL;\n        else\n            this.SoundState.url = '';\n        if (this.SoundState.url.length > 0 && !this.SoundState.url.endsWith('/'))\n            this.SoundState.url += '/';\n        if (data.type && data.type.length > 0) {\n            this.SoundState.url += data.type;\n            if (this.SoundState.url.length > 0 && !this.SoundState.url.endsWith('/'))\n                this.SoundState.url += '/';\n        }\n        if (this.enableSound)\n            this.SoundState.play();\n        else\n            this.emit('playing', { type: 0, file: this.SoundState.file, sound: this.SoundState.sound, state: this.SoundState, duration: '--:--' });\n    }\n\n    /**\n     * processOption - process telnet options, if its MSP handle it and correctly reply yes we support MSP or no don't\n     *\n     * @param {Object} data Telnet#replyToOption event object\n     */\n    public processOption(data: TelnetOption) {\n        if (data.option === 90) {\n            this.debug('<MSP>');\n            if (data.verb === 253) {\n                this.server = true;\n                if (this.enabled) {\n                    this.debug('REPLY: <IAC><WILL><MSP>');\n                    data.telnet.sendData([255, 251, 90], true);\n                }\n                else {\n                    this.debug('REPLY: <IAC><DONT><MSP>');\n                    data.telnet.sendData([255, 254, 90], true);\n                }\n            }\n            else if (data.verb === 254) {\n                this.server = false;\n                this.debug('REPLY: <IAC><WONT><MSP>');\n                data.telnet.sendData([255, 252, 90], true);\n            }\n            else if (data.verb === 251) {\n                this.server = true;\n                if (this.enabled) {\n                    this.debug('REPLY: <IAC><DO><MSP>');\n                    data.telnet.sendData([255, 253, 90], true);\n                }\n                else {\n                    this.debug('REPLY: <IAC><DONT><MSP>');\n                    data.telnet.sendData([255, 254, 90], true);\n                }\n            }\n            else if (data.verb === 252) {\n                this.server = false;\n                this.debug('REPLY: <IAC><DONT><MSP>');\n                data.telnet.sendData([255, 254, 90], true);\n            }\n            data.handled = true;\n        }\n    }\n\n    /**\n     * processGMCP - process incoming GMCP for Client.Media events\n     * @param {string} mod Client#received-GMCP module\n     * @param {Object} data Client#received-GMCP data object\n     */\n    public async processGMCP(mod: string, data: any) {\n        switch (mod) {\n            case 'Client.Media.Default':\n                if (data.type === 'sound' || !data.type)\n                    this.sound({ off: true, url: data.url });\n                else if (data.type === 'music')\n                    this.music({ off: true, url: data.url });\n                break;\n            //as we don't support loading and caching of media ignore this\n            case 'Client.Media.Load':\n                break;\n            case 'Client.Media.Play':\n                //start off with default values\n                const sound: MSPData = { off: false, file: data.name, url: '', volume: 50, repeat: 1, priority: 50, type: '', continue: true };\n                //process incoming data and set as needed\n                if (data.hasOwnProperty('url'))\n                    sound.url = data.url;\n                if (data.hasOwnProperty('tag'))\n                    sound.type = data.tag;\n                if (data.hasOwnProperty('volume'))\n                    sound.volume = data.volume;\n                if (data.hasOwnProperty('loops'))\n                    sound.repeat = data.loops;\n                if (data.hasOwnProperty('priority'))\n                    sound.priority = data.priority;\n                if (data.type === 'sound' || !data.type)\n                    this.sound(sound);\n                else if (data.type === 'music') {\n                    if (data.hasOwnProperty('continue') && (data.continue === 'false' || !data.continue))\n                        sound.continue = false;\n                    this.music(sound);\n                }\n                break;\n            case 'Client.Media.Stop':\n                if (data.type === 'sound' || !data.type)\n                    this.sound({ off: true });\n                else if (data.type === 'music')\n                    this.music({ off: true });\n                break;\n        }\n    }\n\n    /**\n     * debug - emit debug event if enabledDebug on\n     * @param {string | object} e The debug message or an object of data \n     */\n    public debug(e) {\n        if (!this.enableDebug) return;\n        this.emit('debug', e);\n    }\n\n    /**\n     * Process function event to execute custom text functions\n     * @param data {FunctionEvent} The data about the function to execute\n     */\n    public processFunction(data: FunctionEvent) {\n        let args;\n        let tmp;\n        let i;\n        if (!data) return;\n        switch (data.name.toLowerCase()) {\n            case 'soundinfo':\n                if (this.SoundState.playing)\n                    this.client.echo('Playing Sound - ' + this.SoundState.file + ' - ' + buzz.toTimer(this.SoundState.sound.getTime()) + '/' + buzz.toTimer(this.SoundState.sound.getDuration()), -7, -8, true, true);\n                else\n                    this.client.echo('No sound currently playing.', -7, -8, true, true);\n                data.handled = true;\n                break;\n            case 'musicinfo':\n                if (this.MusicState.playing)\n                    this.client.echo('Playing Music - ' + this.MusicState.file + ' -  ' + buzz.toTimer(this.MusicState.sound.getTime()) + '/' + buzz.toTimer(this.MusicState.sound.getDuration()), -7, -8, true, true);\n                else\n                    this.client.echo('No music currently playing.', -7, -8, true, true);\n                data.handled = true;\n                break;\n            case 'playmusic':\n            case 'playm':\n                args = this.client.input.parseOutgoing(data.args.join(' '), false);\n                tmp = { off: false, file: '', url: '', volume: 100, repeat: 1, priority: 50, type: '', continue: true };\n                i = args.lastIndexOf('/');\n                if (i === -1)\n                    tmp.file = args;\n                else {\n                    tmp.file = args.substring(i + 1);\n                    tmp.url = args.substring(0, i + 1);\n                }\n                this.music(tmp);\n                data.handled = true;\n                break;\n            case 'playsound':\n            case 'plays':\n                args = this.client.input.parseOutgoing(data.args.join(' '), false);\n                tmp = { off: false, file: '', url: '', volume: 100, repeat: 1, priority: 50, type: '', continue: true };\n                i = args.lastIndexOf('/');\n                if (i === -1)\n                    tmp.file = args;\n                else {\n                    tmp.file = args.substring(i + 1);\n                    tmp.url = args.substring(0, i + 1);\n                }\n                this.sound(tmp);\n                data.handled = true;\n                break;\n            case 'stopmusic':\n            case 'stopm':\n                this.MusicState.close();\n                data.handled = true;\n                break;\n            case 'stopsound':\n            case 'stops':\n                this.SoundState.close();\n                data.handled = true;\n                break;\n            case 'stopallsound':\n            case 'stopa':\n                this.MusicState.close();\n                this.SoundState.close();\n                data.handled = true;\n                break;\n\n        }\n    }\n}", "import { Client } from \"./client\";\r\nimport { EventEmitter } from './events.js';\r\nimport { MenuItem } from './types';\r\n\r\nexport abstract class Plugin extends EventEmitter {\r\n    #client;\r\n    public get client() { return this.#client; }\r\n    public set client(value: Client) {\r\n        if (value === this.#client) return;\r\n        this.remove();\r\n        this.#client = value;\r\n        this.initialize();\r\n    }\r\n\r\n    constructor(client: Client) {\r\n        super();\r\n        this.#client = client;\r\n    }\r\n\r\n    public abstract remove(): void;\r\n    public abstract initialize(): void;\r\n    abstract get menu(): MenuItem[];\r\n}", "import \"./css/client.css\";\r\nimport { EventEmitter } from './events';\r\nimport { Telnet } from './telnet';\r\nimport { AnsiColorCode } from './ansi';\r\nimport { SortItemArrayByPriority, selectAll, debounce, getParameterByName } from './library';\r\nimport { Settings } from './settings';\r\nimport { Input } from './input';\r\nimport { ProfileCollection, Alias, Trigger, Alarm, Macro, Profile, Button, TriggerType, SubTriggerTypes } from './profile';\r\nimport { Display } from './display';\r\nimport { Plugin } from './plugin';\r\nimport { version } from '../package.json'\r\n\r\n//import core plugins\r\nimport { MSP } from './plugins/msp';\r\nimport { Test } from './plugins/test';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Client;\r\n        client: Client;\r\n        oiMUD: Client;\r\n        Display;\r\n        Test;\r\n        Dialog;\r\n    }\r\n}\r\ndeclare let moment;\r\n//declare let localforage;\r\n\r\ninterface ClientOptions {\r\n    display: HTMLInputElement | JQuery | string;\r\n    commandInput: HTMLInputElement | JQuery | string;\r\n    host?: string;\r\n    port?: number;\r\n    scheme?: string;\r\n    protocol?: string;\r\n}\r\n\r\ninterface ItemCache {\r\n    alarmPatterns: any[];\r\n    alarms: Trigger[];\r\n    triggers: Trigger[];\r\n    aliases: Alias[];\r\n    macros: Macro[];\r\n    buttons: Button[];\r\n}\r\n\r\n/**\r\n * Mud client\r\n *\r\n * @export\r\n * @class Client\r\n * @extends {EventEmitter}\r\n */\r\nexport class Client extends EventEmitter {\r\n    //#region Private properties\r\n    private _enableDebug: boolean = false;\r\n    private _input: Input;\r\n    private _telnet: Telnet;\r\n    private _itemCache: ItemCache = {\r\n        triggers: null,\r\n        aliases: null,\r\n        macros: null,\r\n        buttons: null,\r\n        alarms: null,\r\n        alarmPatterns: []\r\n    }\r\n    private _alarm;\r\n    private _commandInput: HTMLInputElement;\r\n    private _display: Display;\r\n    private _profiles: ProfileCollection;\r\n    private _variables = {};\r\n    private _plugins: Plugin[];\r\n    private _options: any = {};\r\n    //#endregion\r\n    //#region Public properties\r\n    public active: boolean = true;\r\n    public connecting: boolean = false;\r\n    public version: string = version;\r\n    public connectTime: number = 0;\r\n    public disconnectTime: number = 0;\r\n    public lastSendTime: number = 0;\r\n    public defaultTitle = 'oiMUD';\r\n    public errored: boolean = false;\r\n    //#endregion\r\n    //#region Public setter/getters\r\n    public get telnet(): Telnet { return this._telnet; }\r\n    public get variables() { return this._variables; }\r\n    public get commandInput(): HTMLInputElement { return this._commandInput; }\r\n    public get display(): Display { return this._display; }\r\n    public get profiles(): ProfileCollection { return this._profiles; }\r\n    public get plugins(): Plugin[] { return this._plugins; }\r\n    public get options(): Settings { return this._options; }\r\n    public get input(): Input { return this._input; }\r\n\r\n\r\n    set simpleAlarms(value) {\r\n        this.setOption('simpleAlarms', value);\r\n    }\r\n\r\n    get simpleAlarms() { return this.getOption('simpleAlarms'); }\r\n\r\n    set enableParsing(value) {\r\n        this.setOption('enableParsing', value);\r\n        this._input.enableParsing = value;\r\n    }\r\n\r\n    get enableParsing() { return this.getOption('enableParsing'); }\r\n\r\n    set enableTriggers(value) {\r\n        this.setOption('enableTriggers', value);\r\n        this._input.enableTriggers = value;\r\n        this.startAlarms();\r\n    }\r\n\r\n    get enableTriggers() { return this.getOption('enableTriggers'); }\r\n\r\n    get enableDebug(): boolean {\r\n        return this._enableDebug;\r\n    }\r\n\r\n    set enableDebug(enable: boolean) {\r\n        this._enableDebug = enable;\r\n        this._telnet.enableDebug = enable;\r\n        this._display.enableDebug = enable;\r\n    }\r\n\r\n    get host(): string {\r\n        return this._telnet.host;\r\n    }\r\n    set host(host: string) {\r\n        this._telnet.host = host;\r\n    }\r\n\r\n    get port(): number {\r\n        return this._telnet.port;\r\n    }\r\n    set port(port: number) {\r\n        this._telnet.port = port;\r\n    }\r\n\r\n    get connected(): boolean {\r\n        return this._telnet.connected;\r\n    }\r\n\r\n    public get activeProfile() {\r\n        return this._profiles.active;\r\n    };\r\n\r\n    public get commandHistory() {\r\n        return this._input.commandHistory;\r\n    }\r\n\r\n    get aliases(): Alias[] {\r\n        if (this._itemCache.aliases)\r\n            return this._itemCache.aliases;\r\n        const keys = this.profiles.keys;\r\n        const tmp = [];\r\n        let k = 0;\r\n        const kl = keys.length;\r\n        if (kl === 0) return [];\r\n        if (kl === 1) {\r\n            if (!this.profiles.items[keys[0]].enabled || !this.profiles.items[keys[0]].enableAliases)\r\n                this._itemCache.aliases = [];\r\n            else\r\n                this._itemCache.aliases = SortItemArrayByPriority(this.profiles.items[keys[k]].aliases);\r\n            return this._itemCache.aliases;\r\n        }\r\n        for (; k < kl; k++) {\r\n            if (!this.profiles.items[keys[k]].enabled || !this.profiles.items[keys[k]].enableAliases || this.profiles.items[keys[k]].aliases.length === 0)\r\n                continue;\r\n            tmp.push.apply(tmp, SortItemArrayByPriority(this.profiles.items[keys[k]].aliases));\r\n        }\r\n        this._itemCache.aliases = tmp;\r\n        return this._itemCache.aliases;\r\n    }\r\n\r\n    get macros(): Macro[] {\r\n        if (this._itemCache.macros)\r\n            return this._itemCache.macros;\r\n        const keys = this.profiles.keys;\r\n        const tmp = [];\r\n        let k = 0;\r\n        const kl = keys.length;\r\n        if (kl === 0) return [];\r\n        if (kl === 1) {\r\n            if (!this.profiles.items[keys[0]].enabled || !this.profiles.items[keys[0]].enableMacros)\r\n                this._itemCache.macros = [];\r\n            else\r\n                this._itemCache.macros = SortItemArrayByPriority(this.profiles.items[keys[k]].macros);\r\n            return this._itemCache.macros;\r\n        }\r\n        for (; k < kl; k++) {\r\n            if (!this.profiles.items[keys[k]].enabled || !this.profiles.items[keys[k]].enableMacros || this.profiles.items[keys[k]].macros.length === 0)\r\n                continue;\r\n            tmp.push.apply(tmp, SortItemArrayByPriority(this.profiles.items[keys[k]].macros));\r\n        }\r\n        this._itemCache.macros = tmp;\r\n        return this._itemCache.macros;\r\n    }\r\n\r\n    get triggers(): Trigger[] {\r\n        if (this._itemCache.triggers)\r\n            return this._itemCache.triggers;\r\n        const keys = this.profiles.keys;\r\n        const tmp = [];\r\n        let k = 0;\r\n        const kl = keys.length;\r\n        if (kl === 0) return [];\r\n        if (kl === 1) {\r\n            if (!this.profiles.items[keys[0]].enabled || !this.profiles.items[keys[0]].enableTriggers)\r\n                this._itemCache.triggers = [];\r\n            else\r\n                this._itemCache.triggers = SortItemArrayByPriority(this.profiles.items[keys[0]].triggers);\r\n            return this._itemCache.triggers;\r\n        }\r\n        for (; k < kl; k++) {\r\n            if (!this.profiles.items[keys[k]].enabled || !this.profiles.items[keys[k]].enableTriggers || this.profiles.items[keys[k]].triggers.length === 0)\r\n                continue;\r\n            tmp.push.apply(tmp, SortItemArrayByPriority(this.profiles.items[keys[k]].triggers));\r\n        }\r\n        this._itemCache.triggers = tmp;\r\n        return this._itemCache.triggers;\r\n    }\r\n\r\n    public removeTrigger(trigger: Trigger) {\r\n        const keys = this.profiles.keys;\r\n        let k = 0;\r\n        const kl = keys.length;\r\n        let idx = -1;\r\n        if (kl === 0)\r\n            return;\r\n        if (kl === 1) {\r\n            if (!this.profiles.items[keys[0]].enabled || !this.profiles.items[keys[0]].enableTriggers)\r\n                return;\r\n            idx = this.profiles.items[keys[k]].triggers.indexOf(trigger);\r\n        }\r\n        else\r\n            for (; k < kl && idx !== -1; k++) {\r\n                if (!this.profiles.items[keys[k]].enabled || !this.profiles.items[keys[k]].enableTriggers || this.profiles.items[keys[k]].triggers.length === 0)\r\n                    continue;\r\n                idx = this.profiles.items[keys[k]].triggers.indexOf(trigger);\r\n                //found trigger bail, or it will keep looking and k index will be wrong profile\r\n                if (idx !== -1)\r\n                    break;\r\n            }\r\n        //check to be sure trigger found\r\n        if (idx === -1)\r\n            return;\r\n        this.profiles.items[keys[k]].triggers.splice(idx, 1);\r\n        this._itemCache.triggers = null;\r\n        //an alarm or has sub types see if cached\r\n        if ((trigger.triggers.length || trigger.type === TriggerType.Alarm) && this._itemCache.alarms) {\r\n            idx = this._itemCache.alarms.indexOf(trigger);\r\n            if (idx !== -1) {\r\n                this._itemCache.alarms.splice(idx, 1);\r\n                this._itemCache.alarmPatterns.splice(idx, 1);\r\n            }\r\n        }\r\n        this.saveProfiles();\r\n        this.emit('item-removed', 'trigger', keys[k], idx);\r\n    }\r\n\r\n    get alarms(): Trigger[] {\r\n        if (this._itemCache.alarms)\r\n            return this._itemCache.alarms;\r\n        const keys = this.profiles.keys;\r\n        const tmp = [];\r\n        let k = 0;\r\n        const kl = keys.length;\r\n        if (kl === 0) return [];\r\n        if (kl === 1) {\r\n            if (!this.profiles.items[keys[0]].enabled || !this.profiles.items[keys[0]].enableTriggers)\r\n                this._itemCache.alarms = [];\r\n            else\r\n                this._itemCache.alarms = $.grep(SortItemArrayByPriority(this.profiles.items[keys[k]].triggers), (a: Trigger) => {\r\n                    //has sub triggers of type alarm so cache them for future use as well\r\n                    if (a && a.enabled && a.triggers.length) {\r\n                        if (a.type === TriggerType.Alarm) return true;\r\n                        //loop sub states if one is alarm cache it for future\r\n                        for (let s = 0, sl = a.triggers.length; s < sl; s++)\r\n                            if (a.triggers[s].enabled && a.triggers[s].type === TriggerType.Alarm)\r\n                                return true;\r\n                        return false;\r\n                    }\r\n                    return a && a.enabled && a.type === TriggerType.Alarm;\r\n                });\r\n            this._itemCache.alarms.reverse();\r\n            return this._itemCache.alarms;\r\n        }\r\n        for (; k < kl; k++) {\r\n            if (!this.profiles.items[keys[k]].enabled || !this.profiles.items[keys[k]].enableTriggers || this.profiles.items[keys[k]].triggers.length === 0)\r\n                continue;\r\n            tmp.push.apply(tmp, SortItemArrayByPriority(this.profiles.items[keys[k]].triggers));\r\n        }\r\n        this._itemCache.alarms = $.grep(tmp, (a) => {\r\n            //has sub triggers of type alarm so cache them for future use as well\r\n            if (a && a.enabled && a.triggers.length) {\r\n                if (a.type === TriggerType.Alarm) return true;\r\n                //loop sub states if one is alarm cache it for future\r\n                for (let s = 0, sl = a.triggers.length; s < sl; s++)\r\n                    if (a.triggers[s].enabled && a.triggers[s].type === TriggerType.Alarm)\r\n                        return true;\r\n                return false;\r\n            }\r\n            return a && a.enabled && a.type === TriggerType.Alarm;\r\n        });\r\n        this._itemCache.alarms.reverse();\r\n        return this._itemCache.alarms;\r\n    }\r\n\r\n    get buttons(): Button[] {\r\n        if (this._itemCache.buttons)\r\n            return this._itemCache.buttons;\r\n        const keys = this.profiles.keys;\r\n        const tmp = [];\r\n        let k = 0;\r\n        const kl = keys.length;\r\n        if (kl === 0) return [];\r\n        if (kl === 1) {\r\n            if (!this.profiles.items[keys[0]].enabled || !this.profiles.items[keys[0]].enableButtons)\r\n                this._itemCache.buttons = [];\r\n            else\r\n                this._itemCache.buttons = SortItemArrayByPriority(this.profiles.items[keys[k]].buttons);\r\n            return this._itemCache.buttons;\r\n        }\r\n        for (; k < kl; k++) {\r\n            if (!this.profiles.items[keys[k]].enabled || !this.profiles.items[keys[k]].enableButtons || this.profiles.items[keys[k]].buttons.length === 0)\r\n                continue;\r\n            tmp.push.apply(tmp, SortItemArrayByPriority(this.profiles.items[keys[k]].buttons));\r\n        }\r\n        this._itemCache.buttons = tmp;\r\n        return this._itemCache.buttons;\r\n    }\r\n\r\n    //#endregion    \r\n\r\n    public addPlugin(plugin: Plugin) {\r\n        if (!plugin) return;\r\n        this.plugins.push(plugin);\r\n        plugin.initialize();\r\n    }\r\n\r\n    public removePlugin(plugin: Plugin) {\r\n        if (!this.plugins.length) return;\r\n        const idx = this.plugins.indexOf(plugin);\r\n        if (idx !== -1) {\r\n            plugin.remove();\r\n            this.plugins.splice(idx, 1);\r\n        }\r\n    }\r\n\r\n    public getVariable(name: string) {\r\n        return this.variables[name];\r\n    }\r\n\r\n    public setVariable(name: string, value) {\r\n        this.variables[name] = value;\r\n    }\r\n\r\n    public setVariables(variables) {\r\n        const names = Object.keys(variables);\r\n        if (names.length === 0) return;\r\n        const nl = names.length;\r\n        let name;\r\n        for (let n = 0; n < nl; n++) {\r\n            name = names[n];\r\n            this.variables[name] = variables[name];\r\n        }\r\n    }\r\n\r\n    public hasVariable(name: string) {\r\n        return this.variables.hasOwnProperty(name);\r\n    }\r\n\r\n    public removeVariable(name: string) {\r\n        if (!this.variables.hasOwnProperty(name))\r\n            return;\r\n        delete this.variables[name];\r\n    }\r\n\r\n    public setHistoryIndex(index) {\r\n        this._input.setHistoryIndex(index);\r\n    }\r\n\r\n    public clearCommandHistory() {\r\n        this._input.clearCommandHistory();\r\n    }\r\n\r\n    public AddCommandToHistory(txt) {\r\n        this._input.AddCommandToHistory(txt);\r\n    }\r\n\r\n    public loadProfiles() {\r\n        this._profiles = new ProfileCollection();\r\n        this._profiles.load().then(() => {\r\n            //ensure default exist and is loaded\r\n            if (!this.profiles.contains('default')) {\r\n                this.profiles.add(Profile.Default);\r\n                this.saveProfiles();\r\n            }\r\n            this.clearCache();\r\n            this.startAlarms();\r\n            this.emit('profiles-loaded');\r\n        });\r\n    }\r\n\r\n    public removeProfile(profile) {\r\n        if (!profile) return;\r\n        this.profiles.remove(profile);\r\n        this.clearCache();\r\n        this.startAlarms();\r\n        this.emit('profile-removed', profile);\r\n    }\r\n\r\n    public saveProfiles() {\r\n        this._profiles.save();\r\n        this.clearCache();\r\n        this.emit('profiles-updated');\r\n    }\r\n\r\n    public toggleProfile(profile: string) {\r\n        this.profiles.toggle(profile);\r\n        this.saveProfiles();\r\n        this.clearCache();\r\n        this.startAlarms();\r\n        this.emit('profile-toggled', profile, this.profiles[profile].enabled);\r\n    }\r\n\r\n    public startAlarms() {\r\n        const al = this.alarms.length;\r\n        if ((al === 0 || !this.getOption('enableTriggers')) && this._alarm) {\r\n            clearInterval(this._alarm);\r\n            this._alarm = null;\r\n        }\r\n        else if (al && !this._alarm)\r\n            this._alarm = setInterval((client) => { client.process_alarms(); }, 1000, this);\r\n    }\r\n\r\n    public setAlarmState(idx, state: boolean) {\r\n        if (typeof idx === 'object')\r\n            idx = this.alarms.indexOf(idx);\r\n        if (idx === -1 || idx >= this.alarms.length)\r\n            return;\r\n        let pattern = this._itemCache.alarmPatterns[idx];\r\n        if (!pattern) {\r\n            //use an object to store to prevent having to loop over large array\r\n            pattern = {};\r\n            if (this.alarms[idx].type === TriggerType.Alarm)\r\n                pattern[0] = Alarm.parse(this.alarms[idx]);\r\n            for (let s = 0, sl = this.alarms[idx].triggers.length; s < sl; s++) {\r\n                //enabled and is alarm\r\n                if (this.alarms[idx].triggers[s].enabled && this.alarms[idx].triggers[s].type === TriggerType.Alarm)\r\n                    pattern[s] = Alarm.parse(this.alarms[idx].triggers[s]);\r\n            }\r\n            this._itemCache.alarmPatterns[idx] = pattern;\r\n        }\r\n        for (const p in pattern) {\r\n            if (!pattern.hasOwnProperty(p)) continue;\r\n            if (state) {\r\n                pattern[p].startTime += Date.now() - pattern[p].suspended;\r\n                pattern[p].prevTime += Date.now() - pattern[p].suspended;\r\n                if (pattern[p].tempTime)\r\n                    pattern[p].tempTime += Date.now() - pattern[p].suspended;\r\n                pattern[p].suspended = 0;\r\n            }\r\n            else\r\n                pattern[p].suspended = Date.now();\r\n        }\r\n    }\r\n\r\n    public setAlarmTempTime(idx, temp: number) {\r\n        if (typeof idx === 'object')\r\n            idx = this.alarms.indexOf(idx);\r\n        if (idx === -1 || idx >= this.alarms.length)\r\n            return;\r\n        let pattern = this._itemCache.alarmPatterns[idx];\r\n        if (!pattern) {\r\n            //use an object to store to prevent having to loop over large array\r\n            pattern = {};\r\n            if (this.alarms[idx].type === TriggerType.Alarm)\r\n                pattern[0] = Alarm.parse(this.alarms[idx]);\r\n            for (let s = 0, sl = this.alarms[idx].triggers.length; s < sl; s++) {\r\n                //enabled and is alarm\r\n                if (this.alarms[idx].triggers[s].enabled && this.alarms[idx].triggers[s].type === TriggerType.Alarm)\r\n                    pattern[s] = Alarm.parse(this.alarms[idx].triggers[s]);\r\n            }\r\n            this._itemCache.alarmPatterns[idx] = pattern;\r\n        }\r\n        if (pattern[0])\r\n            pattern[0].setTempTime(temp);\r\n    }\r\n\r\n    public restartAlarmState(idx, oldState, newState) {\r\n        if (oldState === newState)\r\n            return;\r\n        if (typeof idx === 'object')\r\n            idx = this.alarms.indexOf(idx);\r\n        if (idx === -1 || idx >= this.alarms.length)\r\n            return;\r\n        let pattern = this._itemCache.alarmPatterns[idx];\r\n        if (!pattern) {\r\n            //use an object to store to prevent having to loop over large array\r\n            pattern = {};\r\n            if (this.alarms[idx].type === TriggerType.Alarm)\r\n                pattern[0] = Alarm.parse(this.alarms[idx]);\r\n            for (let s = 0, sl = this.alarms[idx].triggers.length; s < sl; s++) {\r\n                //enabled and is alarm\r\n                if (this.alarms[idx].triggers[s].enabled && this.alarms[idx].triggers[s].type === TriggerType.Alarm)\r\n                    pattern[s] = Alarm.parse(this.alarms[idx].triggers[s]);\r\n            }\r\n            this._itemCache.alarmPatterns[idx] = pattern;\r\n        }\r\n        if (pattern[oldState])\r\n            pattern[oldState].restart = Date.now();\r\n        if (pattern[newState])\r\n            pattern[newState].restart = Date.now();\r\n    }\r\n\r\n    public getRemainingAlarmTime(idx) {\r\n        if (typeof idx === 'object')\r\n            idx = this.alarms.indexOf(idx);\r\n        if (idx === -1 || idx >= this.alarms.length)\r\n            return 0;\r\n        if (!this.alarms[idx].enabled)\r\n            return 0;\r\n        let pattern = this._itemCache.alarmPatterns[idx];\r\n        if (!pattern) {\r\n            //use an object to store to prevent having to loop over large array\r\n            pattern = {};\r\n            if (this.alarms[idx].type === TriggerType.Alarm)\r\n                pattern[0] = Alarm.parse(this.alarms[idx]);\r\n            for (let s = 0, sl = this.alarms[idx].triggers.length; s < sl; s++) {\r\n                //enabled and is alarm\r\n                if (this.alarms[idx].triggers[s].enabled && this.alarms[idx].triggers[s].type === TriggerType.Alarm)\r\n                    pattern[s] = Alarm.parse(this.alarms[idx].triggers[s]);\r\n            }\r\n            this._itemCache.alarmPatterns[idx] = pattern;\r\n        }\r\n        if (pattern[0]) {\r\n            const alarm = pattern[0];\r\n            const now = Date.now();\r\n            const dNow = new Date();\r\n            let future = now;\r\n            let fend = future + 90000000;\r\n            let mod = 1000;\r\n            if (alarm.seconds !== -1)\r\n                mod = 1000;\r\n            else if (alarm.minutes !== -1)\r\n                mod = 60000;\r\n            else if (alarm.hours !== -1)\r\n                mod = 3600000;\r\n            if (alarm.tempTime) {\r\n                if (alarm.tempTime - now > 0)\r\n                    return alarm.tempTime - now;\r\n                return 0;\r\n            }\r\n            else {\r\n                while (future < fend) {\r\n                    if (this.alarm_match(alarm, future, dNow))\r\n                        return future - now;\r\n                    future += mod;\r\n                    dNow.setTime(dNow.getTime() + mod);\r\n                }\r\n                return -1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public updateAlarms() {\r\n        if (this._itemCache.alarmPatterns) {\r\n            const old = this._itemCache.alarmPatterns;\r\n            const oAlarms = this.alarms;\r\n            this._itemCache.alarmPatterns = [];\r\n            this._itemCache.alarms = null;\r\n            const al = this.alarms.length;\r\n            let idx = -1;\r\n            for (let a = 0; a < al; a++) {\r\n                idx = oAlarms.indexOf(this.alarms[a]);\r\n                if (idx !== -1)\r\n                    this._itemCache.alarmPatterns[a] = old[idx];\r\n            }\r\n        }\r\n        this.startAlarms();\r\n    }\r\n\r\n    private process_alarms() {\r\n        if (!this.getOption('enableTriggers'))\r\n            return;\r\n        let a = 0;\r\n        let changed = false;\r\n        const al = this.alarms.length;\r\n        if (al === 0 && this._alarm) {\r\n            clearInterval(this._alarm);\r\n            this._alarm = null;\r\n            return;\r\n        }\r\n        const patterns = this._itemCache.alarmPatterns;\r\n        const now = Date.now();\r\n        const alarms = this.alarms;\r\n        const dNow = new Date();\r\n        for (a = al - 1; a >= 0; a--) {\r\n            let trigger = alarms[a];\r\n            const parent = trigger;\r\n            //not enabled skip\r\n            if (!trigger.enabled) continue;\r\n            //safety check in case a state was deleted\r\n            if (trigger.state > trigger.triggers.length)\r\n                trigger.state = 0;\r\n            //get sub state\r\n            if (trigger.state !== 0 && trigger.triggers && trigger.triggers.length) {\r\n                //trigger states are 1 based as 0 is parent trigger\r\n                trigger = trigger.triggers[trigger.state - 1];\r\n                //skip disabled states\r\n                while (!trigger.enabled && parent.state !== 0) {\r\n                    //advance state\r\n                    parent.state++;\r\n                    //if no more states start over and stop\r\n                    if (parent.state > parent.triggers.length) {\r\n                        parent.state = 0;\r\n                        //reset to first state\r\n                        trigger = trigger.triggers[parent.state - 1];\r\n                        //stop checking\r\n                        break;\r\n                    }\r\n                    if (parent.state)\r\n                        trigger = trigger.triggers[parent.state - 1];\r\n                    else\r\n                        trigger = parent;\r\n                    changed = true;\r\n                }\r\n                if (changed) {\r\n                    if (this.getOption('saveTriggerStateChanges'))\r\n                        this.saveProfiles();\r\n                    this.emit('item-updated', 'trigger', parent.profile.name, parent.profile.triggers.indexOf(parent));\r\n                }\r\n                //last check to be 100% sure enabled\r\n                if (!trigger.enabled) continue;\r\n            }\r\n            //reparse type\r\n            if (trigger.type === SubTriggerTypes.ReParse || trigger.type === SubTriggerTypes.ReParsePattern) {\r\n                const val = this._input.adjustLastLine(this.display.lines.length, true);\r\n                const line = this.display.lines[val];\r\n                a = this._input.TestTrigger(trigger, parent, a, line, this.display.lines[val].raw || line, val === this.display.lines.length - 1);\r\n                continue;\r\n            }\r\n            //not an alarm either has sub alarms or was updated\r\n            if (trigger.type !== TriggerType.Alarm) continue;\r\n            let alarm = patterns[a];\r\n            //not found build cache\r\n            if (!alarm) {\r\n                try {\r\n                    patterns[a] = {};\r\n                    if (trigger.type === TriggerType.Alarm)\r\n                        patterns[a][0] = Alarm.parse(trigger);\r\n                    for (let s = 0, sl = trigger.triggers.length; s < sl; s++) {\r\n                        if (trigger.triggers[s].type === TriggerType.Alarm)\r\n                            patterns[a][s] = Alarm.parse(trigger.triggers[s]);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    patterns[a] = null;\r\n                    if (this.getOption('disableTriggerOnError')) {\r\n                        trigger.enabled = false;\r\n                        setTimeout(() => {\r\n                            this.saveProfiles();\r\n                            this.emit('item-updated', 'trigger', parent.profile, parent.profile.triggers.indexOf(parent), parent);\r\n                        });\r\n                    }\r\n                    throw e;\r\n                }\r\n                alarm = patterns[a];\r\n                //what ever reason the alarm failed to create so move on to next alarm\r\n                if (!alarm) continue;\r\n            }\r\n            //we want to sub state pattern\r\n            alarm = alarm[trigger.state];\r\n            if (alarm.restart) {\r\n                alarm.startTime = Date.now();\r\n                alarm.prevTime = alarm.startTime;\r\n                if (alarm.tempTime)\r\n                    alarm.tempTime += Date.now() - alarm.restart;\r\n                alarm.restart = 0;\r\n            }\r\n            let match: boolean = true;\r\n            //a temp time was set so it overrides all matches as once the temp time has been reached end\r\n            if (alarm.tempTime) {\r\n                match = now >= alarm.tempTime;\r\n                if (match)\r\n                    alarm.tempTime = 0;\r\n            }\r\n            else\r\n                match = this.alarm_match(alarm, now, dNow);\r\n            if (match && !alarm.suspended) {\r\n                alarm.prevTime = now;\r\n                //save as if temp alarm as execute trigger advances state and temp alarms will need different state shifts\r\n                const state = parent.state;\r\n                this._input.lastTriggered = alarm.pattern;\r\n                //_Triggered = string.Format(\"{0}:{1}:{2}\", Fired.Hour, Fired.Minute, Fired.Second);\r\n                this._input.ExecuteTrigger(trigger, [alarm.pattern], false, -a, null, null, parent);\r\n                if (state !== parent.state)\r\n                    alarm.restart = Date.now();\r\n                if (alarm.temp) {\r\n                    //has sub state so only remove the temp alarm state\r\n                    if (parent.triggers.length) {\r\n                        if (state === 0) {\r\n                            const item = parent.triggers.shift();\r\n                            //restore previous state as shifted state may have skipped next state\r\n                            item.state = state;\r\n                            item.priority = parent.priority;\r\n                            item.name = parent.name;\r\n                            item.profile = parent.profile;\r\n                            //if removed temp shift state adjust\r\n                            if (item.state > item.triggers.length)\r\n                                item.state = 0;\r\n                            item.triggers = parent.triggers;\r\n                            alarms[a] = item;\r\n                            patterns[a] = null;\r\n                            this.saveProfiles();\r\n                            const idx = parent.profile.triggers.indexOf(parent)\r\n                            parent.profile.triggers[idx] = item;\r\n                            this.emit('item-updated', 'trigger', parent.profile.name, idx, item);\r\n                        }\r\n                        else {\r\n                            parent.triggers.splice(state - 1, 1);\r\n                            patterns[a].splice(state - 1, 1);\r\n                            //restore previous state as shifted state may have skipped next state\r\n                            parent.state = state;\r\n                            //if removed temp shift state adjust\r\n                            if (parent.state > parent.triggers.length)\r\n                                parent.state = 0;\r\n                            this.saveProfiles();\r\n                            const idx = parent.profile.triggers.indexOf(parent);\r\n                            this.emit('item-updated', 'trigger', parent.profile.name, idx, parent);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._input.clearTriggerState(a);\r\n                        this.removeTrigger(parent);\r\n                    }\r\n                }\r\n                //remove after temp as temp requires old index\r\n                a = -this._input.cleanUpTriggerState(-a);\r\n            }\r\n        }\r\n    }\r\n\r\n    private alarm_match(alarm, now, dNow) {\r\n        if (!alarm || alarm.suspended) return false;\r\n        let match: boolean = true;\r\n        let ts;\r\n        let sec;\r\n        let min;\r\n        let hr;\r\n        let hours;\r\n        let minutes;\r\n        let seconds;\r\n        //no moment fall back to simple math\r\n        if (!moment || this.simpleAlarms) {\r\n            ts = now - this.connectTime;\r\n            if (ts < 1000)\r\n                return false;\r\n            sec = Math.round(ts / 1000);\r\n            min = Math.floor(sec / 60);\r\n            hr = Math.floor(min / 60);\r\n            hours = hr;\r\n            minutes = Math.floor(min % 60);\r\n            seconds = Math.floor(sec % 60);\r\n        }\r\n        else {\r\n            if (alarm.start)\r\n                ts = moment.duration(now - this.connectTime);\r\n            else\r\n                ts = moment.duration(now - alarm.startTime);\r\n            if (ts.asMilliseconds() < 1000)\r\n                return false;\r\n            sec = Math.round(ts.asMilliseconds() / 1000);\r\n            min = Math.floor(sec / 60);\r\n            hr = Math.floor(min / 60);\r\n            hours = ts.hours();\r\n            minutes = ts.minutes();\r\n            seconds = ts.seconds();\r\n        }\r\n        if (alarm.hoursWildCard) {\r\n            if (alarm.hours === 0)\r\n                match = match && hours === 0;\r\n            else if (alarm.hours !== -1)\r\n                match = match && hr !== 0 && hr % alarm.hours === 0;\r\n        }\r\n        else if (alarm.hours !== -1)\r\n            match = match && alarm.hours === (alarm.start ? hours : dNow.getHours());\r\n        if (alarm.minutesWildcard) {\r\n            if (alarm.minutes === 0)\r\n                match = match && minutes === 0;\r\n            else if (alarm.minutes !== -1)\r\n                match = match && min !== 0 && min % alarm.minutes === 0;\r\n        }\r\n        else if (alarm.minutes !== -1)\r\n            match = match && alarm.minutes === (alarm.start ? minutes : dNow.getMinutes());\r\n        if (alarm.secondsWildcard) {\r\n            if (alarm.seconds === 0)\r\n                match = match && seconds === 0;\r\n            else if (alarm.seconds !== -1)\r\n                match = match && sec % alarm.seconds === 0;\r\n        }\r\n        else if (alarm.seconds !== -1)\r\n            match = match && alarm.seconds === (alarm.start ? seconds : dNow.getSeconds());\r\n        return match;\r\n    }\r\n\r\n    constructor(options?: ClientOptions) {\r\n        super();\r\n        window.client = this;\r\n        window.oiMUD = this;\r\n        this._plugins = [];\r\n        options = Object.assign({ display: '#display', commandInput: '#commandInput' }, options || {});\r\n        if (!('display' in options) || typeof options.display === undefined)\r\n            options.display = '#display';\r\n        if (!('commandInput' in options) || typeof options.commandInput === undefined)\r\n            options.commandInput = '#commandInput';\r\n\r\n        this._display = new Display(options.display);\r\n\r\n        this.display.on('click', e => {\r\n            if (this.getOption('CommandonClick'))\r\n                this._commandInput.focus();\r\n        });\r\n        this.display.on('update-window', (width, height) => {\r\n            this.telnet.updateWindow(width, height);\r\n        });\r\n\r\n        this.display.on('update-window', (width, height) => {\r\n            this.telnet.updateWindow(width, height);\r\n        });\r\n\r\n        this.display.on('debug', (msg) => { this.debug(msg); });\r\n        this.display.on('add-line', data => {\r\n            this.emit('add-line', data);\r\n        });\r\n        this.display.on('add-line-done', data => {\r\n            this.emit('add-line-done', data);\r\n        });\r\n        this.display.on('MXP-tag-reply', (tag, args) => {\r\n            const e = { tag: tag, args: args, preventDefault: false };\r\n            this.emit('MXP-tag-reply', e);\r\n            if (e.preventDefault)\r\n                return;\r\n            switch (tag) {\r\n                case 'VERSION':\r\n                    if (this.display.MXPStyleVersion && this.display.MXPStyleVersion.length) {\r\n                        this.debug(`MXP Tag REPLY: <VERSION MXP=1.0 STYLE=${this.display.MXPStyleVersion} CLIENT=jiMUD VERSION=${this.version} REGISTERED=no>`);\r\n                        this.send(`\\x1b[1z<VERSION MXP=1.0 STYLE=${this.display.MXPStyleVersion} CLIENT=jiMUD VERSION=${this.version} REGISTERED=no>\\r\\n`);\r\n                    }\r\n                    else {\r\n                        this.debug(`MXP Tag REPLY: <VERSION MXP=1.0 CLIENT=jiMUD VERSION=${this.version} REGISTERED=no>`);\r\n                        this.send(`\\x1b[1z<VERSION MXP=1.0 CLIENT=jiMUD VERSION=${this.version} REGISTERED=no>\\r\\n`);\r\n                    }\r\n                    break;\r\n                case 'SUPPORT':\r\n                    this.debug(`MXP Tag REPLY: <SUPPORTS ${args.join(' ')}>`);\r\n                    this.send(`\\x1b[1z<SUPPORTS ${args.join(' ')}>\\r\\n`);\r\n                    break;\r\n                case 'USER':\r\n                    this.emit('sendUsername', e);\r\n                    break;\r\n                case 'PASSWORD':\r\n                    this.emit('sendPassword', e);\r\n                    break;\r\n            }\r\n        });\r\n        this.display.on('expire-links', (args) => {\r\n            this.emit('expire-links', args);\r\n        });\r\n\r\n        this.display.on('parse-done', () => {\r\n            this.emit('parse-done');\r\n        });\r\n        this.display.on('set-title', (title, type) => {\r\n            if (typeof title === 'undefined' || title == null || title.length === 0)\r\n                window.document.title = this.getOption('defaultTitle');\r\n            else if (type !== 1)\r\n                window.document.title = this.getOption('title').replace('$t', title);\r\n\r\n        });\r\n        this.display.on('music', (data) => {\r\n            this.emit('music', data);\r\n        });\r\n        this.display.on('sound', (data) => {\r\n            this.emit('sound', data);\r\n        });\r\n\r\n        this.display.on('bell', () => {\r\n            this.emit('bell');\r\n        });\r\n\r\n        if (typeof options.commandInput === 'string') {\r\n            this._commandInput = document.querySelector(options.commandInput) as HTMLInputElement;\r\n            if (!this._commandInput)\r\n                throw new Error('Invalid selector for command input.');\r\n        }\r\n        else if (options.commandInput instanceof $)\r\n            this._commandInput = options.commandInput[0];\r\n        else if (options.commandInput instanceof HTMLElement)\r\n            this._commandInput = options.commandInput as HTMLInputElement;\r\n        else\r\n            throw new Error('Command input must be a selector, element or jquery object');\r\n\r\n        this._telnet = new Telnet({ protocol: options.protocol, scheme: options.scheme });\r\n        this._telnet.terminal = 'oiMUD';\r\n        this._telnet.version = this.version;\r\n        this._telnet.GMCPSupports.push('oMUD 1');\r\n        this._telnet.GMCPSupports.push('Client.Media 1');\r\n\r\n        this._telnet.on('error', (err) => {\r\n            if (err) {\r\n                if (err.type == 'close' && err.code == 1006)\r\n                    return;\r\n                var msg = [];\r\n                if (err.type)\r\n                    msg.push(err.type);\r\n                if (err.text)\r\n                    msg.push(err.text);\r\n                if (err.message)\r\n                    msg.push(err.message);\r\n                if (err.reason)\r\n                    msg.push(err.reason);\r\n                if (err.code)\r\n                    this.error(err.code + ' - ' + msg.join(', '));\r\n                else\r\n                    this.error(msg.join(', '));\r\n            }\r\n            else\r\n                this.error('Unknown telnet error.');\r\n            if (this.getOption('autoConnect') && !this._telnet.connected)\r\n                setTimeout(() => { this.connect(); }, 600);\r\n        });\r\n        this.telnet.on('connecting', () => {\r\n            this.connecting = true;\r\n            this.echo('Trying to connect to ' + this.host + ':' + this.port, AnsiColorCode.InfoText, AnsiColorCode.InfoBackground, true, true);\r\n        });\r\n        this.telnet.on('connect', () => {\r\n            this.connecting = false;\r\n            this.echo('Connected...', AnsiColorCode.InfoText, AnsiColorCode.InfoBackground, true, true);\r\n            this.connectTime = Date.now();\r\n            this.disconnectTime = 0;\r\n            this.lastSendTime = Date.now();\r\n            this.emit('connected');\r\n            this.raise('connected');\r\n        });\r\n\r\n        this.telnet.on('debug', msg => {\r\n            this.debug(msg);\r\n        });\r\n        this.telnet.on('receive-option', data => {\r\n            this.emit('received-option', data);\r\n        });\r\n        this._telnet.on('close', () => {\r\n            this.connecting = false;\r\n            this.echo('Connection closed to ' + this.host + ':' + this.port, AnsiColorCode.InfoText, AnsiColorCode.InfoBackground, true, true);\r\n            this.disconnectTime = Date.now();\r\n            this.emit('closed');\r\n            this.raise('disconnected');\r\n            //clear after in case events need the times\r\n            this.connectTime = 0;\r\n            this.lastSendTime = 0;\r\n        });\r\n        this.telnet.on('received-data', data => {\r\n            data = { value: data };\r\n            this.emit('received-data', data);\r\n            if (data === null || typeof data == 'undefined' || data.value === null || typeof data.value == 'undefined')\r\n                return;\r\n            this.printInternal(data.value, false, true);\r\n            this.debug('Latency: ' + this.telnet.latency + 'ms');\r\n            this.debug('Latency: ' + (this.telnet.latency / 1000) + 's');\r\n        });\r\n        this.telnet.on('received-MSDP', data => {\r\n            this.emit('received-MSDP', data);\r\n        });\r\n        this.telnet.on('received-GMCP', data => {\r\n            let val: string = data.value;\r\n            let mod: string;\r\n            let idx: number = 0;\r\n            const dl: number = val.length;\r\n            let c;\r\n            if (dl === 0) return;\r\n            for (idx = 0; idx < dl; idx++) {\r\n                c = val.charAt(idx);\r\n                if (c === ' ' || c === '{' || c === '[')\r\n                    break;\r\n            }\r\n            mod = val.substr(0, idx).trim();\r\n            val = val.substr(idx).trim();\r\n            this.debug('GMCP Module: ' + mod);\r\n            this.debug('GMCP Data: ' + val);\r\n            let obj;\r\n            if (mod.toLowerCase() === 'client.gui') {\r\n                obj = val.split('/n');\r\n                if (val.length >= 2) {\r\n                    obj = {\r\n                        version: parseInt(obj[0], 10),\r\n                        url: obj[1]\r\n                    };\r\n                }\r\n                else if (val.length > 0) {\r\n                    obj = {\r\n                        version: parseInt(obj[0], 10),\r\n                        url: obj[1]\r\n                    };\r\n                }\r\n                else\r\n                    obj = { version: obj, url: '' };\r\n                this.emit('received-GMCP', mod, obj);\r\n                return;\r\n            }\r\n            try {\r\n                if (val.length > 0)\r\n                    obj = JSON.parse(val);\r\n            }\r\n            catch (e) {\r\n                this.error('Invalid GMCP');\r\n                return;\r\n            }\r\n            this.emit('received-GMCP', mod, obj);\r\n        });\r\n        this.telnet.on('windowSize', () => { this.UpdateWindow(); });\r\n\r\n        let tmp: any = getParameterByName('host');\r\n        if (tmp !== null && tmp.length)\r\n            this.host = tmp;\r\n        else if (options && 'host' in options)\r\n            this.host = options.host;\r\n        else\r\n            this.host = '127.0.0.1';\r\n        tmp = +getParameterByName('port');\r\n        if (!isNaN(tmp) && tmp > 0)\r\n            this.port = tmp;\r\n        else if (options && 'port' in options)\r\n            this.port = options.port;\r\n        else\r\n            this.port = 23;\r\n\r\n        this._input = new Input(this);\r\n        this._input.on('scroll-lock', (lock) => {\r\n            this.display.scrollLock = lock;\r\n            this.emit('scroll-lock', lock);\r\n        });\r\n        this._input.on('command-history-changed', history => this.emit('command-history-changed', history));\r\n\r\n        this._input.on('item-added', (type, profile, item) => {\r\n            this.emit('item-added', type, profile, item);\r\n        });\r\n\r\n        this._input.on('item-updated', (type, profile, idx, item) => {\r\n            this.emit('item-updated', type, profile, idx, item);\r\n        });\r\n\r\n        this._input.on('item-removed', (type, profile, idx) => {\r\n            this.emit('item-removed', type, profile, idx);\r\n        });\r\n        this.loadOptions();\r\n        this._commandInput.value = '';\r\n        this._commandInput.focus();\r\n        window.addEventListener('blur', () => {\r\n            this.active = false;\r\n            this.emit('blur');\r\n            this.raise('blur');\r\n        });\r\n        window.addEventListener('focus', () => {\r\n            this.active = true;\r\n            this.emit('focus');\r\n            this.raise('focus');\r\n        });\r\n        window.addEventListener('beforeunload', e => {\r\n            if (this.connected) {\r\n                if (e)\r\n                    e.returnValue = 'Closing or reloading will disconnect you from the mud.';\r\n                return 'Closing or reloading will disconnect you from the mud.';\r\n            }\r\n            this.raise('closed');\r\n        });\r\n        window.addEventListener('unload', () => {\r\n            if (this.connected)\r\n                this.close();\r\n        })\r\n        //Add core plugins\r\n        this.addPlugin(new MSP(this));\r\n        if (DEBUG || TEST)\r\n            this.addPlugin(new Test(this));\r\n        if (this.options.autoConnect)\r\n            setTimeout(() => { this.connect(); }, 600);\r\n        this.emit('initialized');\r\n    }\r\n\r\n    public loadOptions() {\r\n        this._options = new Settings();\r\n        this.loadProfiles();\r\n\r\n        this.enableDebug = this._options.enableDebug;\r\n        this.display.maxLines = this._options.bufferSize;\r\n        this.display.enableFlashing = this._options.flashing;\r\n        this.display.enableMXP = this._options.enableMXP;\r\n        this.display.showInvalidMXPTags = this._options['display.showInvalidMXPTags'];\r\n        this.display.enableURLDetection = this._options.enableURLDetection;\r\n        this.display.enableMSP = this._options.enableMSP;\r\n        this.display.enableColors = this._options['display.enableColors'];\r\n        this.display.enableBackgroundColors = this._options['display.enableBackgroundColors'];\r\n\r\n        if (this._options.colors && this._options.colors?.length > 0) {\r\n            var clrs = this._options.colors;\r\n            for (var c = 0, cl = clrs.length; c < cl; c++) {\r\n                if (!clrs[c] || clrs[c].length === 0) continue;\r\n                this.display.SetColor(c, clrs[c]);\r\n            }\r\n        }\r\n\r\n        if (this._telnet) {\r\n            this._telnet.options.MCCP = this._options.enableMCCP;\r\n            this._telnet.options.MXP = this._options.enableMXP;\r\n            this._telnet.UTF8 = this._options.enableUTF8;\r\n            this._telnet.options.ECHO = this._options.enableEcho;\r\n            this._telnet.enableLatency = this._options.lagMeter;\r\n            this._telnet.enablePing = this._options.enablePing;\r\n        }\r\n        this._input.scrollLock = this._options.scrollLocked;\r\n        this._input.enableParsing = this._options.enableParsing;\r\n        this._input.enableTriggers = this._options.enableTriggers;\r\n        this.display.scrollLock = this._options.scrollLocked;\r\n        this.display.hideTrailingEmptyLine = this._options['display.hideTrailingEmptyLine'];\r\n\r\n        if (this.UpdateFonts) this.UpdateFonts();\r\n        this.display.scrollDisplay();\r\n        this.emit('options-loaded');\r\n    }\r\n\r\n    public setOption(name, value) {\r\n        if (name === -1 || name === '-1')\r\n            return;\r\n        this._options[name] = value;\r\n        Settings.setValue(name, value);\r\n        this.emit('option=changed', name, value);\r\n    }\r\n\r\n    public getOption(name: string): any {\r\n        if (this._options && name in this._options)\r\n            return this._options[name];\r\n        return this._options[name] = Settings.getValue(name);\r\n    }\r\n\r\n    public UpdateFonts() {\r\n        //can only update if display has been setup\r\n        if (!this.display) return;\r\n        this.display.updateFont(this._options.font, this._options.fontSize);\r\n        this._commandInput.style.fontSize = this._options.cmdfontSize;\r\n        this._commandInput.style.fontFamily = this._options.cmdfont + ', monospace';\r\n    }\r\n\r\n    public parse(txt: string) {\r\n        this.parseInternal(txt, false, false, true);\r\n    }\r\n\r\n    private parseInternal(txt: string, remote: boolean, force?: boolean, prependSplit?: boolean) {\r\n        this.display.append(txt, remote, force, prependSplit);\r\n    }\r\n\r\n    public error(err: any) {\r\n        if (this.enableDebug) this.debug(err);\r\n        let msg = '';\r\n        if (err == null || typeof err === 'undefined')\r\n            err = new Error('Unknown');\r\n        else if (typeof err === 'string' && err.length === 0)\r\n            err = new Error('Unknown');\r\n        if (err.stack && this.getOption('showErrorsExtended'))\r\n            msg = err.stack;\r\n        else if (err instanceof Error || err instanceof TypeError)\r\n            msg = err.name + ': ' + err.message;\r\n        else if (err.message)\r\n            msg = err.message;\r\n        else\r\n            msg = '' + err;\r\n\r\n        if (msg.match(/^.*Error: /g) || msg.match(/^.*Error - /g))\r\n            this.echo(msg, AnsiColorCode.ErrorText, AnsiColorCode.ErrorBackground, true, true);\r\n        else\r\n            this.echo('Error: ' + msg, AnsiColorCode.ErrorText, AnsiColorCode.ErrorBackground, true, true);\r\n\r\n        if (this.getOption('logErrors')) {\r\n            if (!this.getOption('showErrorsExtended')) {\r\n                if (err.stack)\r\n                    msg = err.stack;\r\n                else {\r\n                    err = new Error(err || msg);\r\n                    msg = err.stack;\r\n                }\r\n            }\r\n            else if (!err.stack) {\r\n                err = new Error(err || msg);\r\n                msg = err.stack;\r\n            }\r\n            window.console.log(new Date().toLocaleString());\r\n            window.console.log(msg);\r\n            /*\r\n            localforage.getItem('oiMUDErrorLog', function (err, value) {\r\n                localforage.setItem('oiMUDErrorLog', value = (value || '') + new Date().toLocaleString() + '\\n' + msg + '\\n');\r\n            });\r\n            */\r\n        }\r\n        if (err === 'Error: ECONNRESET - read ECONNRESET.' && this.telnet.connected)\r\n            this.close();\r\n        this.raise('error', msg);\r\n    }\r\n\r\n    public echo(str: string, fore?: number, back?: number, newline?: boolean, forceLine?: boolean) {\r\n        if (str == null) str = '';\r\n        if (newline == null) newline = false;\r\n        if (forceLine == null) forceLine = false;\r\n        if (fore == null) fore = AnsiColorCode.LocalEcho;\r\n        if (back == null) back = AnsiColorCode.LocalEchoBack;\r\n        const codes = '\\x1b[0m' + this.display.CurrentAnsiCode() + '\\n';\r\n        //make its a string in case raw js passes number or something else\r\n        str = '' + str;\r\n        if (str.endsWith('\\n'))\r\n            str = str.substr(0, str.length - 1);\r\n        if (this.telnet.prompt && forceLine) {\r\n            this.print('\\n\\x1b[' + fore + ';' + back + 'm' + str + codes, newline);\r\n            this.telnet.prompt = false;\r\n        }\r\n        else\r\n            this.print('\\x1b[' + fore + ';' + back + 'm' + str + codes, newline);\r\n    }\r\n\r\n    public print(txt: string, newline?: boolean) {\r\n        this.printInternal(txt, newline, false, true);\r\n    }\r\n\r\n    private printInternal(txt: string, newline?: boolean, remote?: boolean, prependSplit?: boolean) {\r\n        if (txt == null || typeof txt === 'undefined') return;\r\n        if (newline == null) newline = false;\r\n        if (remote == null) remote = false;\r\n        if (newline && this.display.textLength > 0 && !this.display.EndOfLine && this.display.EndOfLineLength !== 0 && !this.telnet.prompt && !this.display.parseQueueEndOfLine)\r\n            txt = '\\n' + txt;\r\n        this.parseInternal(txt, remote, false, prependSplit);\r\n    }\r\n\r\n    public send(data, echo?: boolean) {\r\n        this.telnet.sendData(data);\r\n        this.lastSendTime = Date.now();\r\n        if (echo && this.telnet.echo && this.getOption('commandEcho'))\r\n            this.echo(data);\r\n        else if (echo)\r\n            this.echo('\\n');\r\n    }\r\n\r\n    public sendRaw(data) {\r\n        this.telnet.sendData(data, true);\r\n        this.lastSendTime = Date.now();\r\n    }\r\n\r\n    public sendGMCP(data) {\r\n        this.telnet.sendGMCP(data);\r\n        this.lastSendTime = Date.now();\r\n    }\r\n\r\n    public debug(str: string, style?) {\r\n        const data = { value: str };\r\n        this.emit('debug', data);\r\n        if (!this._enableDebug || data == null || typeof data === 'undefined' || data.value == null || typeof data.value === 'undefined' || data.value.length === 0)\r\n            return;\r\n        if (window.console) {\r\n            if (style)\r\n                window.console.log('%c' + str, style);\r\n            else\r\n                window.console.log(data.value);\r\n        }\r\n    }\r\n\r\n    public sendCommand(txt?: string, noEcho?: boolean, comments?: boolean) {\r\n        if (txt == null) {\r\n            txt = this._commandInput.value;\r\n            if (!this.telnet.echo)\r\n                this._commandInput.value = '';\r\n            else\r\n                this._input.AddCommandToHistory(txt);\r\n        }\r\n        //make its a string in case raw js passes number or something else\r\n        txt = '' + txt;\r\n        if (!txt.endsWith('\\n'))\r\n            txt = txt + '\\n';\r\n        const data = { value: txt, handled: false, comments: comments };\r\n        this.emit('parse-command', data);\r\n        if (data == null || typeof data === 'undefined') return;\r\n        if (data.handled || data.value == null || typeof data.value === 'undefined') return;\r\n        if (data.value.length > 0)\r\n            this.send(data.value, !noEcho);\r\n        if (this.getOption('keepLastCommand'))\r\n            selectAll(this._commandInput);\r\n        else\r\n            this._commandInput.value = '';\r\n    }\r\n\r\n    public sendBackground(txt: string, noEcho?: boolean, comments?: boolean) {\r\n        if (txt == null) {\r\n            txt = this._commandInput.value;\r\n            if (!this.telnet.echo)\r\n                this._commandInput.value = '';\r\n            else\r\n                this._input.AddCommandToHistory(txt);\r\n        }\r\n        //make its a string in case raw js passes number or something else\r\n        txt = '' + txt;\r\n        if (!txt.endsWith('\\n'))\r\n            txt = txt + '\\n';\r\n        const data = { value: txt, handled: false, comments: comments };\r\n        this.emit('parse-command', data);\r\n        if (data == null || typeof data === 'undefined') return;\r\n        if (data.value == null || typeof data.value === 'undefined') return;\r\n        if (!data.handled && data.value.length > 0)\r\n            this.send(data.value, !noEcho);\r\n    }\r\n\r\n    get scrollLock(): boolean {\r\n        return this._input.scrollLock;\r\n    }\r\n\r\n    set scrollLock(enabled: boolean) {\r\n        this._input.scrollLock = enabled;\r\n    }\r\n\r\n    public toggleScrollLock() {\r\n        this._input.toggleScrollLock();\r\n    }\r\n\r\n    public UpdateWindow() {\r\n        this.display.updateWindow();\r\n    }\r\n\r\n    public close() {\r\n        this.telnet.close();\r\n    }\r\n\r\n    public connect() {\r\n        this.errored = false;\r\n        this.emit('connecting');\r\n        this.display.ClearMXP();\r\n        this.display.ResetMXPLine();\r\n        this.telnet.connect();\r\n        this.emit('connect');\r\n        this._commandInput.focus();\r\n    }\r\n\r\n    public receivedData(data) {\r\n        this.telnet.receivedData(data);\r\n    }\r\n\r\n    public notify(title: string, message: string, options?: NotificationOptions) {\r\n        if (this.enableDebug) {\r\n            this.emit('debug', 'notify title: ' + title);\r\n            this.emit('debug', 'notify msg: ' + message);\r\n        }\r\n        this.emit('notify', title, message, options);\r\n    }\r\n\r\n    public clear() {\r\n        this.display.clear();\r\n        this.emit('cleared');\r\n    }\r\n\r\n    public parseInline(text: string) {\r\n        return this._input.parseInline(text);\r\n    }\r\n\r\n    public parseOutgoing(text: string, eAlias?: boolean, stacking?: boolean, noFunction?: boolean) {\r\n        return this._input.parseOutgoing(text, eAlias, stacking, noFunction);\r\n    }\r\n\r\n    public clearCache() {\r\n        this._input.clearCaches();\r\n        this._itemCache = {\r\n            triggers: null,\r\n            aliases: null,\r\n            macros: null,\r\n            buttons: null,\r\n            alarms: null,\r\n            alarmPatterns: []\r\n        };\r\n    };\r\n\r\n    public beep() {\r\n        this.emit('bell');\r\n    }\r\n\r\n    public raise(event: string, args?, delay?: number) {\r\n        if (!delay || delay < 1)\r\n            this._input.triggerEvent(event, args);\r\n        else\r\n            setTimeout(() => {\r\n                this._input.triggerEvent(event, args);\r\n            }, delay);\r\n    }\r\n\r\n    public show() {\r\n        this.emit('show');\r\n    }\r\n\r\n    public hide() {\r\n        this.emit('hide');\r\n    }\r\n\r\n    public toggle() {\r\n        this.emit('toggle');\r\n    }\r\n}\r\nwindow.Client = Client;\r\nwindow.Display = Display;", "declare let client;\r\ndeclare let bootstrap;\r\n\r\nexport function closeMenu() {\r\n    bootstrap.Offcanvas.getInstance(document.getElementById('clientMenu')).hide();\r\n}\r\n\r\nexport function showMenu() {\r\n    bootstrap.Offcanvas.getOrCreateInstance(document.getElementById('clientMenu')).show();\r\n}\r\n\r\nexport function initMenu() {\r\n    document.getElementById('btn-menu').addEventListener('click', showMenu);\r\n    client.on('connected', () => {\r\n        let el = document.getElementById('menu-connect');\r\n        let text = document.querySelector('#menu-connect a span');\r\n        let icon = document.querySelector('#menu-connect svg') || document.querySelector('#menu-connect i');\r\n        el.title = 'Disconnect';\r\n        el.classList.add('active');\r\n        text.textContent = 'Disconnect';\r\n        icon.classList.add('fa-plug-circle-xmark');\r\n        icon.classList.remove('fa-plug');\r\n    });\r\n    client.on('closed', () => {\r\n        let el = document.getElementById('menu-connect');\r\n        let text = document.querySelector('#menu-connect a span');\r\n        let icon = document.querySelector('#menu-connect svg') || document.querySelector('#menu-connect i');\r\n        el.title = 'Connect';\r\n        el.classList.remove('active');\r\n        text.textContent = 'Connect';\r\n        icon.classList.remove('fa-plug-circle-xmark');\r\n        icon.classList.add('fa-plug');\r\n    })\r\n    client.on('scroll-lock', updateScrollLock);\r\n    document.querySelector('#menu-connect a').addEventListener('click', e => {\r\n        if (client.connected)\r\n            client.close();\r\n        else {\r\n            client.connect();\r\n            closeMenu();\r\n        }\r\n    });\r\n    document.querySelector('#menu-clear a').addEventListener('click', e => {\r\n        client.clear();\r\n        closeMenu()\r\n    });\r\n    document.querySelector('#menu-lock a').addEventListener('click', e => {\r\n        client.toggleScrollLock();\r\n        closeMenu();\r\n    });\r\n    document.querySelector('#menu-editor a').addEventListener('click', e => {\r\n        closeMenu();\r\n        document.getElementById('btn-adv-edit').click();\r\n    });\r\n    document.querySelector('#menu-fullscreen a').addEventListener('click', e => {\r\n        var doc: any = window.document;\r\n        var docEl: any = doc.documentElement;\r\n\r\n        var requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\r\n        var cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\r\n        let el = document.getElementById('menu-fullscreen');\r\n        let icon = document.querySelector('#menu-fullscreen svg') || document.querySelector('#menu-fullscreen i');\r\n        let text = document.querySelector('#menu-fullscreen a span');\r\n        if (!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n            el.title = 'Exit fullscreen';\r\n            text.textContent = 'Exit fullscreen';\r\n            requestFullScreen.call(docEl);\r\n            icon.classList.add('fa-minimize');\r\n            icon.classList.remove('fa-maximize');\r\n        }\r\n        else {\r\n            el.title = 'Enter fullscreen';\r\n            text.textContent = 'Enter fullscreen';\r\n            cancelFullScreen.call(doc);\r\n            icon.classList.add('fa-maximize');\r\n            icon.classList.remove('fa-minimize');            \r\n        }\r\n        closeMenu();\r\n    });\r\n    updateScrollLock();\r\n}\r\n\r\nfunction updateScrollLock() {\r\n    let el = document.getElementById('menu-lock');\r\n    let text = document.querySelector('#menu-lock a span');\r\n    let icon = document.querySelector('#menu-lock svg') || document.querySelector('#menu-lock i');\r\n    if (client.scrollLock) {\r\n        el.title = 'Unlock display';\r\n        el.classList.add('active');\r\n        text.textContent = 'Unlock display';\r\n        icon.classList.add('fa-unlock');\r\n        icon.classList.remove('fa-lock');\r\n    }\r\n    else {\r\n        el.title = 'Lock display';\r\n        el.classList.remove('active');\r\n        text.textContent = 'Lock display';\r\n        icon.classList.remove('fa-unlock');\r\n        icon.classList.add('fa-lock');\r\n    }\r\n}", "import { EventEmitter } from \"./events\";\r\nimport { debounce } from \"./library\";\r\n\r\nexport interface DialogOptions {\r\n    title?: string;\r\n    width?: string | number;\r\n    height?: string | number;\r\n    minWidth?: string | number;\r\n    minHeight?: string | number;\r\n    x?: string | number;\r\n    y?: string | number;\r\n    id?: string;\r\n    buttons?: boolean;\r\n    resizable?: boolean;\r\n    moveable?: boolean;\r\n    maximizable?: boolean;\r\n    noAdaptive?: boolean;\r\n    maximized?: boolean;\r\n    showModal?: boolean;\r\n    show?: boolean | number;\r\n    center?: boolean;\r\n    noFooter?: boolean;\r\n    position?: Position;\r\n}\r\n\r\nenum ResizeType {\r\n    None = 0,\r\n    Right = 1 << 0,\r\n    Bottom = 1 << 1,\r\n    Left = 1 << 2,\r\n    Top = 1 << 3,\r\n}\r\n\r\nenum Position {\r\n    Left = 1 << 0,\r\n    Right = 1 << 1,\r\n    Top = 1 << 2,\r\n    Bottom = 1 << 3,\r\n    CenterVertical = 1 << 4,\r\n    CenterHorizontal = 1 << 5,\r\n    Center = Position.CenterHorizontal | Position.CenterVertical\r\n}\r\n\r\nexport class Dialog extends EventEmitter {\r\n    private _dialog;\r\n    private _body;\r\n    private _footer;\r\n    private _header;\r\n    private _title;\r\n    private _id;\r\n    private _state = { x: 0, y: 0, height: 0, width: 0, zIndex: 100, maximized: false, show: 0 };\r\n    private _resize = { x: 0, y: 0, height: 0, width: 0, type: ResizeType.None, minHeight: 150, minWidth: 300, borderHeight: 1, borderWidth: 1 };\r\n    private _dragPosition = { x: 0, y: 0 };\r\n    private _windowResize = () => {\r\n        //if window resized ensure top left corner is visible\r\n        debounce(() => {\r\n            const styles = document.defaultView.getComputedStyle(this._dialog);\r\n            if (this._state.x > window.innerWidth - 16) {\r\n                this._state.x = (window.innerWidth - 16);\r\n                this._dialog.style.left = this._state.x + \"px\";\r\n            }\r\n            if (this._state.y > window.innerHeight - 16) {\r\n                this._state.y = (window.innerHeight - 16);\r\n                this._dialog.style.top = this._state.y + \"px\";\r\n            }\r\n            this.emit('moved', this._state);\r\n        }, 250, this._id + 'dialogResize');\r\n    };\r\n\r\n    private resizeDoDrag = e => {\r\n        let t;\r\n        if ((this._resize.type & ResizeType.Right) === ResizeType.Right) {\r\n            t = this._resize.width + e.clientX - this._resize.x;\r\n            if (t > window.innerWidth) t = window.innerWidth;\r\n            this._dialog.style.width = t + \"px\";\r\n        }\r\n        if ((this._resize.type & ResizeType.Bottom) === ResizeType.Bottom) {\r\n            t = this._resize.height + e.clientY - this._resize.y;\r\n            if (t > window.innerWidth - 16) t = window.innerHeight - 16;\r\n            this._dialog.style.height = t + \"px\";\r\n        }\r\n        if ((this._resize.type & ResizeType.Top) === ResizeType.Top) {\r\n            t = this._resize.height - e.clientY + this._resize.y - this._resize.borderHeight;\r\n            if (t + this._resize.borderHeight > window.innerHeight) t = window.innerHeight;\r\n            if (t + this._resize.borderHeight <= this._resize.minHeight) {\r\n                this._dialog.style.height = this._resize.minHeight + \"px\";\r\n                return;\r\n            }\r\n            this._dialog.style.height = t + \"px\";\r\n            t = e.clientY;\r\n            if (t > window.innerHeight) t = window.innerHeight;\r\n            this._dialog.style.top = t + \"px\";\r\n        }\r\n        if ((this._resize.type & ResizeType.Left) === ResizeType.Left) {\r\n            t = this._resize.width - e.clientX + this._resize.x - this._resize.borderWidth;\r\n            if (t + this._resize.borderWidth > window.innerWidth) t = window.innerWidth;\r\n            if (t + this._resize.borderWidth <= this._resize.minWidth) {\r\n                this._dialog.style.width = this._resize.minWidth + \"px\";\r\n                return;\r\n            }\r\n            this._dialog.style.width = t + \"px\";\r\n            t = e.clientX;\r\n            if (t > window.innerWidth) t = window.innerWidth;\r\n            this._dialog.style.left = t + \"px\";\r\n        }\r\n    };\r\n\r\n    private resizeTouchDrag = e => {\r\n        if (!e.touches.length) return;\r\n        let t;\r\n        if ((this._resize.type & ResizeType.Right) === ResizeType.Right) {\r\n            t = this._resize.width + e.touches[0].clientX - this._resize.x;\r\n            if (t > window.innerWidth) t = window.innerWidth;\r\n            this._dialog.style.width = t + \"px\";\r\n        }\r\n        if ((this._resize.type & ResizeType.Bottom) === ResizeType.Bottom) {\r\n            t = this._resize.height + e.touches[0].clientY - this._resize.y;\r\n            if (t > window.innerWidth) t = window.innerHeight;\r\n            this._dialog.style.height = t + \"px\";\r\n        }\r\n        if ((this._resize.type & ResizeType.Top) === ResizeType.Top) {\r\n            t = this._resize.height - e.touches[0].clientY + this._resize.y - this._resize.borderHeight;\r\n            if (t + this._resize.borderHeight > window.innerHeight) t = window.innerHeight;\r\n            if (t + this._resize.borderHeight <= this._resize.minHeight) {\r\n                this._dialog.style.height = this._resize.minHeight + \"px\";\r\n                return;\r\n            }\r\n            this._dialog.style.height = t + \"px\";\r\n            t = e.touches[0].clientY;\r\n            if (t > window.innerHeight) t = window.innerHeight;\r\n            this._dialog.style.top = t + \"px\";\r\n        }\r\n        if ((this._resize.type & ResizeType.Left) === ResizeType.Left) {\r\n            t = this._resize.width - e.touches[0].clientX + this._resize.x - this._resize.borderWidth;\r\n            if (t + this._resize.borderWidth > window.innerWidth) t = window.innerWidth;\r\n            if (t + this._resize.borderWidth <= this._resize.minWidth) {\r\n                this._dialog.style.width = this._resize.minWidth + \"px\";\r\n                return;\r\n            }\r\n            this._dialog.style.width = t + \"px\";\r\n            t = e.touches[0].clientX;\r\n            if (t > window.innerWidth) t = window.innerWidth;\r\n            this._dialog.style.left = t + \"px\";\r\n        }\r\n    };\r\n\r\n    private resizeStopDrag = e => {\r\n        document.documentElement.removeEventListener(\"mousemove\", this.resizeDoDrag);\r\n        document.documentElement.removeEventListener(\"mouseup\", this.resizeStopDrag);\r\n        document.documentElement.removeEventListener(\"touchmove\", this.resizeTouchDrag);\r\n        document.documentElement.removeEventListener(\"touchend\", this.resizeStopDrag);\r\n        const styles = document.defaultView.getComputedStyle(this._dialog);\r\n        this._state.x = parseInt(styles.left, 10);;\r\n        this._state.width = parseInt(styles.width, 10);\r\n        this._state.y = parseInt(styles.top, 10);;\r\n        this._state.height = parseInt(styles.height, 10);\r\n        this._body.style.pointerEvents = '';\r\n        this.emit('resized', this._state);\r\n    }\r\n\r\n    private dragMouseDown = e => {\r\n        if (this.maximized) return;\r\n        this._dragPosition.x = e.clientX;\r\n        this._dragPosition.y = e.clientY;\r\n        document.documentElement.addEventListener('mouseup', this.dragMouseUp);\r\n        document.documentElement.addEventListener('mousemove', this.dragMouseMove);\r\n        this._header.style.cursor = 'move';\r\n    };\r\n\r\n    private dragTouchStart = e => {\r\n        if (this.maximized) return;\r\n        this._dragPosition.x = e.clientX;\r\n        this._dragPosition.y = e.clientY;\r\n        document.documentElement.addEventListener('touchend', this.dragMouseUp);\r\n        document.documentElement.addEventListener('touchmove', this.dragTouchMove);\r\n        this._header.style.cursor = 'move';\r\n    };\r\n\r\n    private dragMouseMove = e => {\r\n        let x = this._dragPosition.x - e.clientX;\r\n        let y = this._dragPosition.y - e.clientY;\r\n        this._dragPosition.x = e.clientX;\r\n        this._dragPosition.y = e.clientY;\r\n        this._state.x = this._dialog.offsetLeft - x;\r\n        this._state.y = this._dialog.offsetTop - y;\r\n        if (this._state.x > window.innerWidth - 16)\r\n            this._state.x = window.innerWidth - 16;\r\n        if (this._state.y > window.innerHeight - 16)\r\n            this._state.y = window.innerHeight - 16;\r\n        if (this._state.x < 16 - this._dialog.clientWidth)\r\n            this._state.x = 16 - this._dialog.clientWidth;\r\n        if (this._state.y < 16 - this._dialog.clientHeight)\r\n            this._state.y = 16 - this._dialog.clientHeight;\r\n        this._dialog.style.left = this._state.x + 'px'\r\n        this._dialog.style.top = this._state.y + 'px'\r\n    };\r\n\r\n    private dragTouchMove = e => {\r\n        if (!e.touches.length) return;\r\n        let x = this._dragPosition.x - e.touches[0].clientX;\r\n        let y = this._dragPosition.y - e.touches[0].clientY;\r\n        this._dragPosition.x = e.touches[0].clientX;\r\n        this._dragPosition.y = e.touches[0].clientY;\r\n        this._state.x = this._dialog.offsetLeft - x;\r\n        this._state.y = this._dialog.offsetTop - y;\r\n        if (this._state.x > window.innerWidth - 16)\r\n            this._state.x = window.innerWidth - 16;\r\n        if (this._state.y > window.innerHeight - 16)\r\n            this._state.y = window.innerHeight - 16;\r\n        if (this._state.x < 16 - this._dialog.clientWidth)\r\n            this._state.x = 16 - this._dialog.clientWidth;\r\n        if (this._state.y < 16 - this._dialog.clientHeight)\r\n            this._state.y = 16 - this._dialog.clientHeight;\r\n        this._dialog.style.left = this._state.x + 'px'\r\n        this._dialog.style.top = this._state.y + 'px'\r\n    };\r\n\r\n    private dragMouseUp = () => {\r\n        document.documentElement.removeEventListener('mouseup', this.dragMouseUp);\r\n        document.documentElement.removeEventListener('mousemove', this.dragMouseMove);\r\n        document.documentElement.removeEventListener('touchend', this.dragMouseUp);\r\n        document.documentElement.removeEventListener('touchmove', this.dragTouchMove);\r\n        this._header.style.cursor = '';\r\n        const styles = document.defaultView.getComputedStyle(this._dialog);\r\n        this._state.x = parseInt(styles.left, 10);;\r\n        this._state.width = parseInt(styles.width, 10);\r\n        this._state.y = parseInt(styles.top, 10);;\r\n        this._state.height = parseInt(styles.height, 10);\r\n        this.emit('moved', this._state);\r\n    };\r\n\r\n    public moveable: boolean = true;\r\n    public resizable: boolean = true;\r\n    private _maximizable: boolean = true;\r\n\r\n    public get maximizable() { return this._maximizable; }\r\n    public set maximizable(value) {\r\n        if (value === this._maximizable) return;\r\n        this._maximizable = value;\r\n        if (this.maximizable)\r\n            this._dialog.querySelector(`#${this._id}-max`).style.display = '';\r\n        else\r\n            this._dialog.querySelector(`#${this._id}-max`).style.display = 'none';\r\n    }\r\n\r\n    public set maximized(value: boolean) {\r\n        if (this._state.maximized === value) return;\r\n        this._state.maximized = value;\r\n    }\r\n    public get maximized(): boolean {\r\n        return this._state.maximized;\r\n    }\r\n\r\n    constructor(options?: DialogOptions) {\r\n        super();\r\n        if (options && 'type' in options && options.type == 1) {\r\n            this._dialog = document.createElement('div');\r\n            this._dialog.open = false;\r\n        }\r\n        else\r\n            this._dialog = document.createElement('dialog');\r\n\r\n        if (typeof this._dialog.showModal !== \"function\") {\r\n            this._dialog.showModal = () => {\r\n                if (this._dialog.open) return;\r\n                this._dialog.style.display = 'block';\r\n                this._dialog.style.visibility = 'visible';\r\n                this._dialog.open = true;\r\n                this._state.show = 2;\r\n                this._dialog.dataset.show = '' + this._state.show;\r\n                this._dialog.focus();\r\n                if (!this._dialog._keydown) {\r\n                    this._dialog._keydown = e => {\r\n                        if (e.key === 'Escape' && e.srcElement.tagName !== 'TEXTAREA' && e.srcElement.tagName !== 'INPUT' && e.srcElement.tagName !== 'SELECT')\r\n                            this.close();\r\n                    }\r\n                }\r\n                if (!this._dialog.backdrop_) {\r\n                    this._dialog.backdrop_ = document.createElement('div');\r\n                    this._dialog.backdrop_.className = 'backdrop';\r\n                    this._dialog.backdrop_MouseEvent = function (e) {\r\n                        if (!this.hasAttribute('tabindex')) {\r\n                            var fake = document.createElement('div');\r\n                            this.insertBefore(fake, this.firstChild);\r\n                            fake.tabIndex = -1;\r\n                            fake.focus();\r\n                            this.removeChild(fake);\r\n                        }\r\n                        else\r\n                            this.focus();\r\n                        var redirectedEvent = document.createEvent('MouseEvents');\r\n                        redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\r\n                            e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\r\n                            e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\r\n                        this.dispatchEvent(redirectedEvent);\r\n                        e.stopPropagation();\r\n                    }\r\n                    this._dialog.backdrop_.addEventListener('mouseup', this._dialog.backdrop_MouseEvent.bind(this._dialog));\r\n                    this._dialog.backdrop_.addEventListener('mousedown', this._dialog.backdrop_MouseEvent.bind(this._dialog));\r\n                    this._dialog.backdrop_.addEventListener('click', this._dialog.backdrop_MouseEvent.bind(this._dialog));\r\n                }\r\n                this._dialog.parentNode.insertBefore(this._dialog.backdrop_, this._dialog.nextSibling);\r\n                window.document.addEventListener('keydown', this._dialog._keydown);\r\n                this.getMaxZIndex();\r\n                this._dialog.backdrop_.style.zIndex = '' + ++this._state.zIndex;\r\n            };\r\n        }\r\n        //poly fill functions if not found to fake dialog\r\n        if (typeof this._dialog.show !== \"function\") {\r\n            this._dialog.show = () => {\r\n                if (this._dialog.open) return;\r\n                this._dialog.style.display = 'block';\r\n                this._dialog.style.visibility = 'visible';\r\n                this._dialog.open = true;\r\n                this._state.show = 1;\r\n                this._dialog.dataset.show = '' + this._state.show;\r\n                this._dialog.focus();\r\n            };\r\n        }\r\n        if (typeof this._dialog.close !== \"function\") {\r\n            this._dialog.close = () => {\r\n                this._dialog.style.display = '';\r\n                this._dialog.style.visibility = '';\r\n                this._dialog.open = false;\r\n                this._state.show = 0;\r\n                this._dialog.dataset.show = '' + this._state.show;\r\n                window.removeEventListener('resize', this._windowResize);\r\n                this.emit('closed');\r\n            };\r\n        }\r\n        this._dialog.dialog = this;\r\n        if (options && 'id' in options && options.id && options.id.length)\r\n            this._id = options.id;\r\n        else if (!this._id || !this._id.length)\r\n            this._id = 'dialog' + new Date().getTime();\r\n        this._dialog.id = this._id;\r\n        this._dialog.style.zIndex = '100';\r\n        this._dialog.style.margin = '0';\r\n        this._dialog.classList.add('dialog');\r\n        if (!options || !options.noAdaptive)\r\n            this._dialog.classList.add('adaptive');\r\n        if (options && 'moveable' in options)\r\n            this.moveable = options.moveable;\r\n        if (options && 'resizable' in options)\r\n            this.resizable = options.resizable;\r\n        if (options && 'maximizable' in options)\r\n            this._maximizable = options.maximizable;\r\n        if (typeof options?.height === 'number')\r\n            this._dialog.style.height = options.height + 'px';\r\n        else if (options?.height && options?.height.length > 0)\r\n            this._dialog.style.height = options.height;\r\n        else\r\n            this._dialog.style.height = '480px';\r\n\r\n        if (typeof options?.minHeight === 'number')\r\n            this._dialog.style.minHeight = options.minHeight + 'px';\r\n        else if (options?.minHeight && options?.minHeight.length > 0)\r\n            this._dialog.style.minHeight = options.minHeight;\r\n        else\r\n            this._dialog.style.minHeight = '150px';\r\n\r\n        if (typeof options?.minWidth === 'number')\r\n            this._dialog.style.minWidth = options.minWidth + 'px';\r\n        else if (options?.minWidth && options?.minWidth.length > 0)\r\n            this._dialog.style.minWidth = options.minWidth;\r\n        else\r\n            this._dialog.style.minWidth = '300px';\r\n\r\n        if (typeof options?.width === 'number')\r\n            this._dialog.style.width = options.width + 'px';\r\n        else if (options?.width && options?.width.length > 0)\r\n            this._dialog.style.width = options.width;\r\n        else\r\n            this._dialog.style.width = '640px';\r\n        if (typeof options?.y === 'number')\r\n            this._dialog.style.top = options.y + 'px';\r\n        else if (options?.y && options?.y.length > 0)\r\n            this._dialog.style.top = options.y;\r\n        else\r\n            this._dialog.style.top = '0';\r\n        if (typeof options?.x === 'number')\r\n            this._dialog.style.left = options.x + 'px';\r\n        else if (options?.x && options?.x.length > 0)\r\n            this._dialog.style.left = options.x;\r\n        else\r\n            this._dialog.style.left = '0';\r\n        let footer = '';\r\n        if (options?.buttons)\r\n            footer += `<button id=\"${this._id}-cancel\" type=\"button\" class=\"float-end btn btn-light\" title=\"Cancel dialog\">Cancel</button>\r\n            <button id=\"${this._id}-ok\" type=\"button\" class=\"float-end btn btn-primary\" title=\"Confirm dialog\">Ok</button>`;\r\n        this._dialog.innerHTML = `<div class=\"dialog-header\">\r\n        <button id=\"${this._id}-header-close\" style=\"padding: 4px;\" type=\"button\" class=\"btn btn-close float-end btn-danger\" data-dismiss=\"modal\" title=\"Close window\"></button>\r\n        <button type=\"button\" class=\"btn btn-light float-end maximize\" id=\"${this._id}-max\" title=\"Maximize window\" style=\"padding: 0 4px;margin-top: -1px;\"><i class=\"bi-arrows-fullscreen\"></i></button>\r\n        <div>${options?.title || ''}</div>\r\n    </div>\r\n    <div class=\"dialog-body\"></div>\r\n    <div class=\"dialog-footer\">${footer}</div>`;\r\n        this._dialog.querySelector(`#${this._id}-header-close`).addEventListener('click', () => {\r\n            this.close();\r\n        });\r\n        this._dialog.querySelector(`#${this._id}-max`).addEventListener('click', () => {\r\n            if (!this.maximized)\r\n                this.maximize();\r\n            else\r\n                this.restore();\r\n        });\r\n        this._dialog.addEventListener('close', e => {\r\n            if (e.target !== this._dialog) return;\r\n            const ec = { preventDefault: false };\r\n            this.emit('closing', ec);\r\n            if (ec.preventDefault) {\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            document.body.removeChild(this._dialog);\r\n            this._state.show = 0;\r\n            this._dialog.dataset.show = '' + this._state.show;\r\n            if (this._dialog.backdrop_)\r\n                this._dialog.parentNode.removeChild(this._dialog.backdrop_);\r\n            if (this._dialog._keydown)\r\n                window.document.removeEventListener('keydown', this._dialog._keydown);\r\n            window.removeEventListener('resize', this._windowResize);\r\n            this.emit('closed');\r\n        });\r\n        this._dialog.addEventListener('cancel', e => {\r\n            if (e.target !== this._dialog) return;\r\n            const ec = { preventDefault: false };\r\n            this.emit('canceling', ec);\r\n            if (ec.preventDefault) {\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            //prevent closing ig in edit field, note this does not stop chrome from closing dialog if esc is pressed multiple times\r\n            if (document.activeElement && (document.activeElement.tagName === 'TEXTAREA' ||\r\n                document.activeElement.tagName === 'iNPUT' ||\r\n                document.activeElement.tagName === 'SELECT')\r\n            ) {\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            //left true sometimes so lets just always make it false to ensure modal dialogs open right\r\n            this._dialog.open = false;\r\n            document.body.removeChild(this._dialog);\r\n            this._state.show = 0;\r\n            this._dialog.dataset.show = '' + this._state.show;\r\n            if (this._dialog.backdrop_)\r\n                this._dialog.parentNode.removeChild(this._dialog.backdrop_);\r\n            if (this._dialog._keydown)\r\n                window.document.removeEventListener('keydown', this._dialog._keydown);\r\n            window.removeEventListener('resize', this._windowResize);\r\n            if (this._dialog.returnValue !== 'ok')\r\n                this.emit('canceled');\r\n        });\r\n        document.body.appendChild(this._dialog);\r\n\r\n        if (this._maximizable)\r\n            this._dialog.querySelector(`#${this._id}-max`).style.display = '';\r\n        else\r\n            this._dialog.querySelector(`#${this._id}-max`).style.display = 'none';\r\n        if (options?.buttons) {\r\n            this._dialog.querySelector(`#${this._id}-cancel`).addEventListener('click', () => {\r\n                this.close();\r\n            });\r\n            this._dialog.querySelector(`#${this._id}-ok`).addEventListener('click', () => {\r\n                const e = { preventDefault: false };\r\n                this.emit('ok', e);\r\n                if (e.preventDefault) return;\r\n                this._dialog.returnValue = 'ok';\r\n                this._dialog.close();\r\n            });\r\n        }\r\n        this._body = this._dialog.querySelector('[class=\"dialog-body\"]');\r\n        this._title = this._dialog.querySelector('[class=\"dialog-header\"] div');\r\n        this._footer = this._dialog.querySelector('[class=\"dialog-footer\"]');\r\n        this._header = this._dialog.querySelector('[class=\"dialog-header\"]');\r\n\r\n        if (this.resizable) {\r\n            this._dialog.classList.add('resizable');\r\n            var right = document.createElement(\"div\");\r\n            right.className = \"resizer-right\";\r\n            this._dialog.appendChild(right);\r\n            right.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Right) }, false);\r\n            right.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Right) }, { passive: true });\r\n\r\n            var bottom = document.createElement(\"div\");\r\n            bottom.className = \"resizer-bottom\";\r\n            this._dialog.appendChild(bottom);\r\n            bottom.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Bottom) }, false);\r\n            bottom.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Bottom) }, { passive: true });\r\n\r\n            var corner = document.createElement(\"div\");\r\n            corner.className = \"resizer-se\";\r\n            this._dialog.appendChild(corner);\r\n            corner.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Right | ResizeType.Bottom) }, false);\r\n            corner.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Right | ResizeType.Bottom) }, { passive: true });\r\n\r\n            corner = document.createElement(\"div\");\r\n            corner.className = \"resizer-ne\";\r\n            this._dialog.appendChild(corner);\r\n            corner.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Right | ResizeType.Top) }, false);\r\n            corner.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Right | ResizeType.Top) }, { passive: true });\r\n\r\n            corner = document.createElement(\"div\");\r\n            corner.className = \"resizer-nw\";\r\n            this._dialog.appendChild(corner);\r\n            corner.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Left | ResizeType.Top) }, false);\r\n            corner.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Left | ResizeType.Top) }, { passive: true });\r\n\r\n            corner = document.createElement(\"div\");\r\n            corner.className = \"resizer-sw\";\r\n            this._dialog.appendChild(corner);\r\n            corner.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Left | ResizeType.Bottom) }, false);\r\n            corner.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Left | ResizeType.Bottom) }, { passive: true });\r\n\r\n            var left = document.createElement(\"div\");\r\n            left.className = \"resizer-left\";\r\n            this._dialog.appendChild(left);\r\n            left.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Left) }, false);\r\n            left.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Left) }, { passive: true });\r\n\r\n            var top = document.createElement(\"div\");\r\n            top.className = \"resizer-top\";\r\n            this._dialog.appendChild(top);\r\n            top.addEventListener(\"mousedown\", e => { this.initResize(e, ResizeType.Top) }, false);\r\n            top.addEventListener(\"touchstart\", e => { this.initResizeTouch(e, ResizeType.Top) }, { passive: true });\r\n        }\r\n\r\n        if (this.moveable) {\r\n            this._dialog.addEventListener('mousedown', () => {\r\n                this.getMaxZIndex();\r\n                this._dialog.style.zIndex = '' + ++this._state.zIndex;\r\n            })\r\n            this._header.addEventListener('mousedown', this.dragMouseDown);\r\n            this._header.addEventListener('touchstart', this.dragTouchStart, { passive: true });\r\n        }\r\n\r\n        const styles = document.defaultView.getComputedStyle(this._dialog);\r\n        this._state.x = this._resize.x = parseInt(styles.left, 10);;\r\n        this._state.width = this._resize.width = parseInt(styles.width, 10);\r\n        this._state.y = this._resize.y = parseInt(styles.top, 10);;\r\n        this._state.height = this._resize.height = parseInt(styles.height, 10);\r\n\r\n        if (options && 'noFooter' in options && options.noFooter)\r\n            this.hideFooter();\r\n        if (options && 'maximized' in options && options.maximized)\r\n            this.maximize();\r\n        if (options && 'showModal' in options && options.showModal)\r\n            this.showModal();\r\n        else if (options && 'show' in options && options.show) {\r\n            if (options.show === 2)\r\n                this.showModal();\r\n            else\r\n                this.show();\r\n        }\r\n        if (options && 'center' in options && options.center)\r\n            this.center();\r\n        if (options && 'position' in options && options.position > 0)\r\n            this.position(options.position);\r\n    }\r\n\r\n    private initResize(e, type) {\r\n        if (this.maximized) return;\r\n        const styles = document.defaultView.getComputedStyle(this._dialog);\r\n        this._resize.x = e.clientX;\r\n        this._resize.width = parseInt(styles.width, 10);\r\n        this._resize.y = e.clientY;\r\n        this._resize.height = parseInt(styles.height, 10);\r\n        this._resize.type = type;\r\n        this._resize.minHeight = parseInt(styles.minHeight, 10);\r\n        this._resize.minWidth = parseInt(styles.minWidth, 10);\r\n        this._resize.borderHeight = e.offsetY + parseInt(styles.borderTopWidth);\r\n        this._resize.borderWidth = e.offsetX + parseInt(styles.borderLeftWidth);\r\n        this._body.style.pointerEvents = 'none';\r\n        document.documentElement.addEventListener(\"mousemove\", this.resizeDoDrag, false);\r\n        document.documentElement.addEventListener(\"mouseup\", this.resizeStopDrag, false);\r\n    }\r\n\r\n    private initResizeTouch(e, type) {\r\n        if (!e.touches.length || this.maximized) return;\r\n        const styles = document.defaultView.getComputedStyle(this._dialog);\r\n        this._resize.x = e.touches[0].clientX;\r\n        this._resize.width = parseInt(styles.width, 10);\r\n        this._resize.y = e.touches[0].clientY;\r\n        this._resize.height = parseInt(styles.height, 10);\r\n        this._resize.type = type;\r\n        this._resize.minHeight = parseInt(styles.minHeight, 10);\r\n        this._resize.minWidth = parseInt(styles.minWidth, 10);\r\n        var rect = e.target.getBoundingClientRect();\r\n        var x = e.targetTouches[0].clientX - rect.x;\r\n        var y = e.targetTouches[0].clientY - rect.y;\r\n        this._resize.borderHeight = y + parseInt(styles.borderTopWidth);\r\n        this._resize.borderWidth = x + parseInt(styles.borderLeftWidth);\r\n        this._body.style.pointerEvents = 'none';\r\n        document.documentElement.addEventListener(\"touchmove\", this.resizeTouchDrag, false);\r\n        document.documentElement.addEventListener(\"touchend\", this.resizeStopDrag, false);\r\n    }\r\n\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(value) {\r\n        if (this._id === value) return;\r\n        this._id = value;\r\n        if (this._dialog) {\r\n            const old = this._dialog.id;\r\n            this._dialog.id = this._id;\r\n            let el = this._dialog.querySelector(`#${this._id}-cancel`);\r\n            if (el) el.id = this._id + '-cancel';\r\n            el = this._dialog.querySelector(`#${this._id}-ok`);\r\n            if (el) el.id = this._id + '-ok';\r\n            el = this._dialog.querySelector(`#${this._id}-max`);\r\n            if (el) el.id = this._id + '-max';\r\n            el = this._dialog.querySelector(`#${this._id}-header-close`);\r\n            if (el) el.id = this._id + '-header-close';\r\n        }\r\n    }\r\n\r\n    public get title() {\r\n        return this._title.innerHTML;\r\n    }\r\n    public set title(value) {\r\n        this._title.innerHTML = value;\r\n    }\r\n\r\n    public showModal() {\r\n        if (!this._dialog.parentElement)\r\n            document.body.appendChild(this._dialog);\r\n        if (this._dialog.open) return;\r\n        this._dialog.showModal();\r\n        this._state.show = 2;\r\n        this._dialog.dataset.show = '' + this._state.show;\r\n        window.addEventListener('resize', this._windowResize);\r\n        this.emit('shown', true);\r\n        this.getMaxZIndex();\r\n        this._dialog.style.zIndex = '' + ++this._state.zIndex;\r\n    }\r\n\r\n    public show() {\r\n        if (!this._dialog.parentElement)\r\n            document.body.appendChild(this._dialog);\r\n        if (this._dialog.open) return;\r\n        this._dialog.show();\r\n        this._state.show = 1;\r\n        this._dialog.dataset.show = '' + this._state.show;\r\n        window.addEventListener('resize', this._windowResize);\r\n        this.emit('shown', false);\r\n        this.getMaxZIndex();\r\n        this._dialog.style.zIndex = '' + ++this._state.zIndex;\r\n    }\r\n\r\n    public get opened() {\r\n        return this._dialog.open;\r\n    }\r\n\r\n    public close() {\r\n        if (!this._dialog.open) return;\r\n        if (this._dialog.backdrop_)\r\n            this._dialog.parentNode.removeChild(this._dialog.backdrop_);\r\n        if (this._dialog._keydown)\r\n            window.document.removeEventListener('keydown', this._dialog._keydown);\r\n        this._dialog.close();\r\n    }\r\n\r\n    public get header() {\r\n        return this._header;\r\n    }\r\n    public get body() {\r\n        return this._body;\r\n    }\r\n    public get footer() {\r\n        return this._footer;\r\n    }\r\n    public get dialog() {\r\n        return this._dialog;\r\n    }\r\n\r\n    public get left() {\r\n        return this._dialog.style.left;\r\n    }\r\n    public set left(value) {\r\n        this._dialog.style.left = value;\r\n    }\r\n\r\n    public get top() {\r\n        return this._dialog.style.top;\r\n    }\r\n    public set top(value) {\r\n        this._dialog.style.top = value;\r\n    }\r\n\r\n    public get width() {\r\n        return this._dialog.style.width;\r\n    }\r\n    public set width(value) {\r\n        this._dialog.style.width = value;\r\n    }\r\n\r\n    public get height() {\r\n        return this._dialog.style.height;\r\n    }\r\n    public set height(value) {\r\n        this._dialog.style.top = value;\r\n    }\r\n\r\n    public get windowState() {\r\n        return this._state;\r\n    }\r\n\r\n    public center() {\r\n        this.position(Position.Center);\r\n    }\r\n\r\n    public position(position: Position) {\r\n        if (position < 1) return;\r\n        //styles2.width\r\n        let w = this._dialog.clientWidth;\r\n        let h = this._dialog.clientHeight;\r\n        if (!w || !h) {\r\n            const styles = document.defaultView.getComputedStyle(this._dialog);\r\n            w = w || parseInt(styles.width, 10);\r\n            h = h || parseInt(styles.height, 10);\r\n        }\r\n        if ((position & Position.Top) === Position.Top)\r\n            this._state.y = 0;\r\n        else if ((position & Position.Bottom) === Position.Bottom)\r\n            this._state.y = window.innerHeight - h;\r\n        else if ((position & Position.CenterVertical) === Position.CenterVertical)\r\n            this._state.y = (window.innerHeight / 2 - h / 2);\r\n\r\n        if ((position & Position.Left) === Position.Left)\r\n            this._state.x = 0;\r\n        else if ((position & Position.Right) === Position.Right)\r\n            this._state.x = window.innerWidth - w;\r\n        else if ((position & Position.CenterHorizontal) === Position.CenterHorizontal)\r\n            this._state.x = (window.innerWidth / 2 - w / 2);\r\n\r\n        this._dialog.style.left = this._state.x + 'px';\r\n        this._dialog.style.top = this._state.y + 'px';\r\n        this._state.width = this._dialog.clientWidth;\r\n        this._state.height = this._dialog.clientHeight;\r\n        this.emit('moved', this._state);\r\n    }\r\n\r\n    public maximize() {\r\n        if (this.maximized) return;\r\n        this.maximized = true;\r\n        this._dialog.classList.add('maximized');\r\n        this._dialog.querySelector(`#${this._id}-max`).firstElementChild.classList.remove('bi-arrows-fullscreen');\r\n        this._dialog.querySelector(`#${this._id}-max`).firstElementChild.classList.add('bi-arrows-angle-contract');\r\n        this.emit('maximized');\r\n    }\r\n\r\n    public restore() {\r\n        if (!this.maximized) return;\r\n        this.maximized = false;\r\n        this._dialog.classList.remove('maximized');\r\n        this._dialog.querySelector(`#${this._id}-max`).firstElementChild.classList.add('bi-arrows-fullscreen');\r\n        this._dialog.querySelector(`#${this._id}-max`).firstElementChild.classList.remove('bi-arrows-angle-contract');\r\n        this.emit('restored');\r\n    }\r\n\r\n    private getMaxZIndex(forceReset?: boolean) {\r\n        const dialogs = document.getElementsByTagName('dialog');\r\n        let d = 0;\r\n        const dl = dialogs.length;\r\n        let i = parseInt(this._dialog.style.zIndex, 10);;\r\n        const order = [];\r\n        for (; d < dl; d++) {\r\n            if (!dialogs[d].style.zIndex || !dialogs[d].style.zIndex.length) continue;\r\n            let z = parseInt(dialogs[d].style.zIndex, 10);\r\n            if (z > i)\r\n                i = z;\r\n            order.push({ z: z, idx: d, show: parseInt(dialogs[d].dataset.show || '', 10) || 0 });\r\n        }\r\n        this._state.zIndex = i;\r\n        if (forceReset || this._state.zIndex > 1000) {\r\n            this._state.zIndex = 100;\r\n            d = 0;\r\n            //show by show type then old z-index, we do this to ensure modal style dialogs are on top\r\n            order.sort((a, b) => ((a.show > b.show) ? 1 : (a.z < b.z) ? -1 : (a.z > b.z ? 1 : 0)))\r\n            for (; d < dl; d++) {\r\n                if ((<any>dialogs[order[d]]).backdrop_)\r\n                    (<any>dialogs[order[d]]).backdrop_.style.zIndex = '' + (this._state.zIndex++);\r\n                dialogs[order[d].idx].style.zIndex = '' + (this._state.zIndex++);\r\n            }\r\n        }\r\n    }\r\n\r\n    public showFooter() {\r\n        this._footer.style.display = '';\r\n        this._body.bottom = '';\r\n    }\r\n\r\n    public hideFooter() {\r\n        this._footer.style.display = 'none';\r\n        this._body.style.bottom = '0';\r\n    }\r\n}", "import \"../css/tinymce.css\";\r\nimport { EventEmitter } from \"../events\";\r\nimport { RGBColor } from '../lib/rgbcolor';\r\nimport { insertValue, stripHTML, htmlEncode, invert, getColors, copyText, openFileDialog, readFile, pasteText, pinkfishToHTML } from '../library'\r\nimport { Dialog } from \"../dialog\";\r\n\r\nexport class AdvEditor extends EventEmitter {\r\n    private _element;\r\n    private _simple = true;\r\n    private _colors;\r\n    private _ColorTable;\r\n    //private _colorCodes;\r\n    private colorNames = {\r\n        'No color': 'Default',\r\n        'BLACK': 'Black',\r\n        'RED': 'Maroon',\r\n        'GREEN': 'Green',\r\n        'ORANGE': 'Olive',\r\n        'BLUE': 'Navy',\r\n        'MAGENTA': 'Purple',\r\n        'WHITE': 'Silver',\r\n        'CYAN': 'Teal',\r\n        'BOLD BLACK': 'Grey',\r\n        'BOLD RED': 'Red',\r\n        'BOLD GREEN': 'Lime',\r\n        'YELLOW': 'Yellow',\r\n        'BOLD YELLOW': 'Yellow',\r\n        'BOLD BLUE': 'Blue',\r\n        'BOLD MAGENTA': 'Fuchsia',\r\n        'BOLD CYAN': 'Aqua',\r\n        'BOLD': 'White',\r\n        'BOLD WHITE': 'White',\r\n        'RGB000': 'Black',\r\n        'RGB001': 'Navy Blue',\r\n        'RGB002': 'Dark Blue',\r\n        'RGB003': 'Blue',\r\n        'RGB004': 'Blue',\r\n        'RGB005': 'Blue',\r\n        'RGB010': 'Dark Green',\r\n        'RGB011': 'Deep Sky Blue',\r\n        'RGB012': 'Deep Sky Blue',\r\n        'RGB013': 'Deep Sky Blue',\r\n        'RGB014': 'Cobalt/Dodger Blue',\r\n        'RGB015': 'Dodger Blue',\r\n        'RGB020': 'Green',\r\n        'RGB021': 'Spring Green',\r\n        'RGB022': 'Turquoise',\r\n        'RGB023': 'Deep Sky Blue',\r\n        'RGB024': 'Deep Sky Blue',\r\n        'RGB025': 'Dodger Blue',\r\n        'RGB030': 'Green',\r\n        'RGB031': 'Spring Green',\r\n        'RGB032': 'Dark Cyan',\r\n        'RGB033': 'Light Sea Green',\r\n        'RGB034': 'Deep Sky Blue',\r\n        'RGB035': 'Deep Sky Blue',\r\n        'RGB040': 'Green',\r\n        'RGB041': 'Spring Green',\r\n        'RGB042': 'Spring Green',\r\n        'RGB043': 'Cyan',\r\n        'RGB044': 'Dark Turquoise',\r\n        'RGB045': 'Turquoise',\r\n        'RGB050': 'Green',\r\n        'RGB051': 'Spring Green',\r\n        'RGB052': 'Spring Green',\r\n        'RGB053': 'Medium Spring Green',\r\n        'RGB054': 'Cyan',\r\n        'RGB055': 'Cyan',\r\n        'RGB100': 'Dark Red',\r\n        'RGB101': 'Deep Pink',\r\n        'RGB102': 'Purple',\r\n        'RGB103': 'Purple',\r\n        'RGB104': 'Purple',\r\n        'RGB105': 'Blue Violet',\r\n        'RGB110': 'Orange',\r\n        'RGB111': 'Dark Grey',\r\n        'RGB112': 'Medium Purple',\r\n        'RGB113': 'Slate Blue',\r\n        'RGB114': 'Slate Blue',\r\n        'RGB115': 'Royal Blue',\r\n        'RGB120': 'Chartreuse',\r\n        'RGB121': 'Dark Sea Green',\r\n        'RGB122': 'Pale Turquoise',\r\n        'RGB123': 'Steel Blue',\r\n        'RGB124': 'Steel Blue',\r\n        'RGB125': 'Cornflower Blue',\r\n        'RGB130': 'Chartreuse',\r\n        'RGB131': 'Dark Sea Green',\r\n        'RGB132': 'Cadet Blue',\r\n        'RGB133': 'Cadet Blue',\r\n        'RGB134': 'Sky Blue',\r\n        'RGB135': 'Steel Blue',\r\n        'RGB140': 'Chartreuse',\r\n        'RGB141': 'Pale Green',\r\n        'RGB142': 'Sea Green',\r\n        'RGB143': 'Aquamarine',\r\n        'RGB144': 'Medium Turquoise',\r\n        'RGB145': 'Steel Blue',\r\n        'RGB150': 'Chartreuse',\r\n        'RGB151': 'Sea Green',\r\n        'RGB152': 'Sea Green',\r\n        'RGB153': 'Sea Green',\r\n        'RGB154': 'Aquamarine',\r\n        'RGB155': 'Dark Slate Gray',\r\n        'RGB200': 'Dark Red',\r\n        'RGB201': 'Deep Pink',\r\n        'RGB202': 'Dark Magenta',\r\n        'RGB203': 'Dark Magenta',\r\n        'RGB204': 'Dark Violet',\r\n        'RGB205': 'Purple',\r\n        'RGB210': 'Orange',\r\n        'RGB211': 'Light Pink',\r\n        'RGB212': 'Plum',\r\n        'RGB213': 'Medium Purple',\r\n        'RGB214': 'Medium Purple',\r\n        'RGB215': 'Slate Blue',\r\n        'RGB220': 'Yellow',\r\n        'RGB221': 'Wheat',\r\n        'RGB222': 'Grey',\r\n        'RGB223': 'Light Slate Grey',\r\n        'RGB224': 'Medium Purple',\r\n        'RGB225': 'Light Slate Blue',\r\n        'RGB230': 'Yellow',\r\n        'RGB231': 'Dark Olive Green',\r\n        'RGB232': 'Dark Sea Green',\r\n        'RGB233': 'Light Sky Blue',\r\n        'RGB234': 'Light Sky Blue',\r\n        'RGB235': 'Sky Blue',\r\n        'RGB240': 'Chartreuse',\r\n        'RGB241': 'Dark Olive Green',\r\n        'RGB242': 'Pale Green',\r\n        'RGB243': 'Dark Sea Green',\r\n        'RGB244': 'Dark Slate Gray',\r\n        'RGB245': 'Sky Blue',\r\n        'RGB250': 'Chartreuse',\r\n        'RGB251': 'Light Green',\r\n        'RGB252': 'Light Green',\r\n        'RGB253': 'Pale Green',\r\n        'RGB254': 'Aquamarine',\r\n        'RGB255': 'Dark Slate Gray',\r\n        'RGB300': 'Red',\r\n        'RGB301': 'Deep Pink',\r\n        'RGB302': 'Medium Violet Red',\r\n        'RGB303': 'Magenta',\r\n        'RGB304': 'Dark Violet',\r\n        'RGB305': 'Purple',\r\n        'RGB310': 'Dark Orange',\r\n        'RGB311': 'Indian Red',\r\n        'RGB312': 'Hot Pink',\r\n        'RGB313': 'Medium Orchid',\r\n        'RGB314': 'Medium Orchid',\r\n        'RGB315': 'Medium Purple',\r\n        'RGB320': 'Dark Goldenrod',\r\n        'RGB321': 'Light Salmon',\r\n        'RGB322': 'Rosy Brown',\r\n        'RGB323': 'Grey',\r\n        'RGB324': 'Medium Purple',\r\n        'RGB325': 'Medium Purple',\r\n        'RGB330': 'Gold',\r\n        'RGB331': 'Dark Khaki',\r\n        'RGB332': 'Navajo White',\r\n        'RGB333': 'Grey',\r\n        'RGB334': 'Light Steel Blue',\r\n        'RGB335': 'Light Steel Blue',\r\n        'RGB340': 'Yellow',\r\n        'RGB341': 'Dark Olive Green',\r\n        'RGB342': 'Dark Sea Green',\r\n        'RGB343': 'Dark Sea Green',\r\n        'RGB344': 'Light Cyan',\r\n        'RGB345': 'Light Sky Blue',\r\n        'RGB350': 'Green Yellow',\r\n        'RGB351': 'Dark Olive Green',\r\n        'RGB352': 'Pale Green',\r\n        'RGB353': 'Dark Sea Green',\r\n        'RGB354': 'Dark Sea Green',\r\n        'RGB355': 'Pale Turquoise',\r\n        'RGB400': 'Crimson/Red',\r\n        'RGB401': 'Deep Pink',\r\n        'RGB402': 'Deep Pink',\r\n        'RGB403': 'Magenta',\r\n        'RGB404': 'Magenta',\r\n        'RGB405': 'Magenta',\r\n        'RGB410': 'Dark Orange',\r\n        'RGB411': 'Indian Red',\r\n        'RGB412': 'Hot Pink',\r\n        'RGB413': 'Hot Pink',\r\n        'RGB414': 'Orchid',\r\n        'RGB415': 'Medium Orchid',\r\n        'RGB420': 'Orange',\r\n        'RGB421': 'Light Salmon/Bronze',\r\n        'RGB422': 'Light Pink',\r\n        'RGB423': 'Pink',\r\n        'RGB424': 'Plum',\r\n        'RGB425': 'Violet',\r\n        'RGB430': 'Gold',\r\n        'RGB431': 'Light Goldenrod',\r\n        'RGB432': 'Tan',\r\n        'RGB433': 'Misty Rose',\r\n        'RGB434': 'Thistle',\r\n        'RGB435': 'Plum',\r\n        'RGB440': 'Yellow',\r\n        'RGB441': 'Khaki',\r\n        'RGB442': 'Light Goldenrod',\r\n        'RGB443': 'Light Yellow',\r\n        'RGB444': 'Grey',\r\n        'RGB445': 'Light Steel Blue',\r\n        'RGB450': 'Yellow',\r\n        'RGB451': 'Dark Olive Green',\r\n        'RGB452': 'Dark Olive Green',\r\n        'RGB453': 'Dark Sea Green',\r\n        'RGB454': 'Honeydew',\r\n        'RGB455': 'Light Cyan',\r\n        'RGB500': 'Red',\r\n        'RGB501': 'Deep Pink',\r\n        'RGB502': 'Deep Pink',\r\n        'RGB503': 'Deep Pink',\r\n        'RGB504': 'Magenta',\r\n        'RGB505': 'Magenta',\r\n        'RGB510': 'Orangered',\r\n        'RGB511': 'Indian Red',\r\n        'RGB512': 'Indian Red',\r\n        'RGB513': 'Hot Pink',\r\n        'RGB514': 'Hot Pink',\r\n        'RGB515': 'Medium Orchid',\r\n        'RGB520': 'Dark Orange',\r\n        'RGB521': 'Salmon',\r\n        'RGB522': 'Light Coral',\r\n        'RGB523': 'Pale Violet Red',\r\n        'RGB524': 'Orchid',\r\n        'RGB525': 'Orchid',\r\n        'RGB530': 'Orange',\r\n        'RGB531': 'Sandy Brown',\r\n        'RGB532': 'Light Salmon',\r\n        'RGB533': 'Light Pink',\r\n        'RGB534': 'Pink',\r\n        'RGB535': 'Plum',\r\n        'RGB540': 'Gold',\r\n        'RGB541': 'Light Goldenrod',\r\n        'RGB542': 'Light Goldenrod',\r\n        'RGB543': 'Navajo White',\r\n        'RGB544': 'Misty Rose',\r\n        'RGB545': 'Thistle',\r\n        'RGB550': 'Yellow',\r\n        'RGB551': 'Light Goldenrod',\r\n        'RGB552': 'Khaki',\r\n        'RGB553': 'Wheat',\r\n        'RGB554': 'Corn Silk',\r\n        'RGB555': 'White',\r\n        'mono00': 'Grey 3',\r\n        'mono01': 'Grey 7',\r\n        'mono02': 'Grey 11',\r\n        'mono03': 'Grey 15',\r\n        'mono04': 'Grey 19',\r\n        'mono05': 'Grey 23',\r\n        'mono06': 'Grey 27',\r\n        'mono07': 'Grey 30',\r\n        'mono08': 'Grey 35',\r\n        'mono09': 'Grey 39',\r\n        'mono10': 'Grey 32',\r\n        'mono11': 'Grey 46',\r\n        'mono12': 'Grey 50',\r\n        'mono13': 'Grey 54',\r\n        'mono14': 'Grey 58',\r\n        'mono15': 'Grey 62',\r\n        'mono16': 'Grey 66',\r\n        'mono17': 'Grey 70',\r\n        'mono18': 'Grey 74',\r\n        'mono19': 'Grey 78',\r\n        'mono20': 'Grey 82',\r\n        'mono21': 'Grey 85',\r\n        'mono22': 'Grey 89',\r\n        'mono23': 'Grey 93'\r\n    };\r\n\r\n    private _colorDialog: Dialog;\r\n\r\n    constructor(element: string | JQuery | HTMLElement, enabledAdvanced?: boolean) {\r\n        super();\r\n        if (!element)\r\n            throw new Error('AdvEditor must be a selector, element or jquery object');\r\n        if (typeof element === 'string') {\r\n            this._element = document.querySelector(element);\r\n            if (!this._element)\r\n                throw new Error('Invalid selector for AdvEditor.');\r\n        }\r\n        else if (element instanceof $)\r\n            this._element = element[0];\r\n        else if (element instanceof HTMLElement)\r\n            this._element = element;\r\n        else\r\n            throw new Error('AdvEditor must be a selector, element or jquery object');\r\n        this.simple = !enabledAdvanced;\r\n    }\r\n\r\n    get id() {\r\n        if (this._element) return this._element.id;\r\n        return '';\r\n    }\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    get simple() { return this._simple; }\r\n    set simple(value) {\r\n        if (value === this._simple) return;\r\n        this._simple = value;\r\n        if (TINYMCE && !this.tinymceExist) return;\r\n        //was disabled\r\n        if (value)\r\n            this.remove();\r\n        else\r\n            this.initialize();\r\n    }\r\n    public clear() {\r\n        if (TINYMCE && !this.isSimple)\r\n            tinymce.activeEditor.setContent('');\r\n        else\r\n            this._element.value = '';\r\n    }\r\n    public get value() {\r\n        if (!this.isSimple)\r\n            return this.getFormattedText().replace(/(?:\\r)/g, '')\r\n        return this._element.value;\r\n    }\r\n    public set value(value) {\r\n        if (this.isSimple)\r\n            this._element.value = value;\r\n        else\r\n            tinymce.activeEditor.setContent(value);\r\n    }\r\n\r\n    public insert(value) {\r\n        if (!this.isSimple) {\r\n            value = htmlEncode(value);\r\n            value = value.replace(/ /g, '&nbsp;');\r\n            value = value.replace(/\\t/g, '&nbsp;&nbsp;&nbsp;');\r\n            value = value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n            var content = this.getText();\r\n            if (content === '\\n') {\r\n                tinymce.activeEditor.undoManager.transact(() => {\r\n                    tinymce.activeEditor.setContent(value);\r\n                });\r\n            }\r\n            else {\r\n                if (!content.endsWith('\\n'))\r\n                    value = '<br>' + value;\r\n                tinymce.activeEditor.undoManager.transact(() => {\r\n                    tinymce.activeEditor.dom.add(tinymce.activeEditor.getBody(), 'span', {}, value);\r\n                });\r\n            }\r\n\r\n        }\r\n        else\r\n            insertValue(this._element, value); {\r\n        }\r\n\r\n    }\r\n\r\n    get tinymceExist() {\r\n        return TINYMCE && typeof (tinymce) !== 'undefined';\r\n    }\r\n\r\n    get isSimple(): boolean {\r\n        return this._simple || !this.tinymceExist;\r\n    }\r\n\r\n    private loadColors() {\r\n        var _dColors = getColors();\r\n        var c, color, r, g, b, idx, _bold = [], bl;\r\n        this._ColorTable = [];\r\n        this._colors = {};\r\n        var clientColors = client.getOption('colors') || [];\r\n        color = new RGBColor(clientColors[0] || _dColors[0]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BLACK';\r\n        this._ColorTable.push(color, 'BLACK');\r\n\r\n        color = new RGBColor(clientColors[1] || _dColors[1]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'RED';\r\n        this._ColorTable.push(color, 'RED');\r\n\r\n        color = new RGBColor(clientColors[2] || _dColors[2]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'GREEN';\r\n        this._ColorTable.push(color, 'GREEN');\r\n\r\n        color = new RGBColor(clientColors[3] || _dColors[3]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'ORANGE';\r\n        this._ColorTable.push(color, 'ORANGE');\r\n\r\n        color = new RGBColor(clientColors[4] || _dColors[4]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BLUE';\r\n        this._ColorTable.push(color, 'BLUE');\r\n        color = new RGBColor(clientColors[5] || _dColors[5]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'MAGENTA';\r\n        this._ColorTable.push(color, 'MAGENTA');\r\n        color = new RGBColor(clientColors[6] || _dColors[6]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'CYAN';\r\n        this._ColorTable.push(color, 'CYAN');\r\n        color = new RGBColor(clientColors[7] || _dColors[7]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'WHITE';\r\n        this._ColorTable.push(color, 'WHITE');\r\n\r\n        color = new RGBColor(clientColors[8] || _dColors[8]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'mono11';\r\n        this._ColorTable.push(color, 'BOLD BLACK');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[9] || _dColors[9]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BOLD%^%^RED';\r\n        this._ColorTable.push(color, 'BOLD RED');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[10] || _dColors[10]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BOLD%^%^GREEN';\r\n        this._ColorTable.push(color, 'BOLD GREEN');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[11] || _dColors[11]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BOLD%^%^YELLOW';\r\n        this._ColorTable.push(color, 'BOLD YELLOW');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[11] || _dColors[11]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'YELLOW';\r\n        this._ColorTable.push(color, 'YELLOW');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[12] || _dColors[12]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BOLD%^%^BLUE';\r\n        this._ColorTable.push(color, 'BOLD BLUE');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[13] || _dColors[13]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BOLD%^%^MAGENTA';\r\n        this._ColorTable.push(color, 'BOLD MAGENTA');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[14] || _dColors[14]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BOLD%^%^CYAN';\r\n        this._ColorTable.push(color, 'BOLD CYAN');\r\n        _bold.push(color);\r\n        color = new RGBColor(clientColors[15] || _dColors[15]).toHex().substr(1).toUpperCase();\r\n        this._colors[color] = 'BOLD%^%^WHITE';\r\n        this._ColorTable.push(color, 'BOLD WHITE');\r\n        //_bold.push(color);\r\n\r\n        for (r = 0; r < 6; r++) {\r\n            for (g = 0; g < 6; g++) {\r\n                for (b = 0; b < 6; b++) {\r\n                    idx = `RGB${r}${g}${b}`;\r\n                    color = '';\r\n                    c = 0;\r\n                    c = r * 40 + 55;\r\n                    if (c < 16)\r\n                        color += '0';\r\n                    color += c.toString(16);\r\n                    c = 0;\r\n                    c = g * 40 + 55;\r\n                    if (c < 16)\r\n                        color += '0';\r\n                    color += c.toString(16);\r\n                    c = 0;\r\n                    c = b * 40 + 55;\r\n                    if (c < 16)\r\n                        color += '0';\r\n                    color += c.toString(16);\r\n                    color = color.toUpperCase();\r\n                    //_ColorTable.push(color);\r\n                    //_ColorTable.push(idx);\r\n                    if (!this._colors[color])\r\n                        this._colors[color] = idx;\r\n                    this.colorList.push({ color: idx, hex: '#' + color, rgb: { r: r * 40 + 55, g: g * 40 + 55, b: b * 40 + 55 } });\r\n                }\r\n            }\r\n        }\r\n\r\n        for (r = 232; r <= 255; r++) {\r\n            g = (r - 232) * 10 + 8;\r\n            if (g < 16)\r\n                g = '0' + g.toString(16).toUpperCase();\r\n            else\r\n                g = g.toString(16).toUpperCase();\r\n            g = g + g + g;\r\n            //_ColorTable.push(g);\r\n            if (r < 242) {\r\n                //_ColorTable.push(\"mono0\" + (r - 232));\r\n                if (!this._colors[g])\r\n                    this._colors[g] = 'mono0' + (r - 232);\r\n            }\r\n            else {\r\n                //_ColorTable.push(\"mono\" + (r - 232));\r\n                if (!this._colors[g])\r\n                    this._colors[g] = 'mono' + (r - 232);\r\n            }\r\n        }\r\n        //this._colorCodes = invert(this._colors);\r\n        for (b = 0, bl = _bold.length; b < bl; b++) {\r\n            this._colors['B' + _bold[b]] = this._colors[this.nearestHex('#' + _bold[b]).substr(1)].toUpperCase();\r\n        }\r\n        this._colors['BFFFFFF'] = 'RGB555';\r\n        tinymce.activeEditor.options.set('color_map', this._ColorTable);\r\n    }\r\n\r\n    private initPlugins() {\r\n        if (!TINYMCE) return\r\n        const _editor = this;\r\n        tinymce.PluginManager.add('pinkfishtextcolor', function (editor, url) {\r\n            type ColorFormat = 'forecolor' | 'hilitecolor';\r\n\r\n            const fallbackColor = '#000000';\r\n            const _colors = ['000000', 'BLACK', '800000', 'RED', '008000', 'GREEN', '808000', 'ORANGE', '0000EE', 'BLUE', '800080', 'MAGENTA', '008080', 'CYAN', 'BBBBBB', 'WHITE', '808080', 'BOLD BLACK', 'FF0000', 'BOLD RED', '00FF00', 'BOLD GREEN', 'FFFF00', 'YELLOW', '5C5CFF', 'BOLD YELLOW', '5C5CFF', 'BOLD BLUE', 'FF00FF', 'BOLD MAGENTA', '00FFFF', 'BOLD CYAN', 'FFFFFF', 'BOLD WHITE'];\r\n\r\n            let _lastButton;\r\n\r\n            interface Cell<T> {\r\n                get: () => T;\r\n                set: (value: T) => void;\r\n            }\r\n\r\n            const Cell = <T>(initial: T): Cell<T> => {\r\n                let value = initial;\r\n\r\n                const get = () => {\r\n                    return value;\r\n                };\r\n\r\n                const set = (v: T) => {\r\n                    value = v;\r\n                };\r\n\r\n                return {\r\n                    get,\r\n                    set\r\n                };\r\n            };\r\n\r\n            let _forecolor = Cell(fallbackColor);\r\n            let _backcolor = Cell(fallbackColor);\r\n\r\n            const getCurrentColor = (editor, format: ColorFormat) => {\r\n                let color: string | undefined;\r\n\r\n                editor.dom.getParents(editor.selection.getStart(), (elm) => {\r\n                    let value;\r\n\r\n                    if ((value = elm.style[format === 'forecolor' ? 'color' : 'background-color'])) {\r\n                        color = color ? color : value;\r\n                    }\r\n                });\r\n\r\n                return color;\r\n            };\r\n\r\n            const applyFormat = (editor, format, value) => {\r\n                editor.undoManager.transact(() => {\r\n                    editor.focus();\r\n                    editor.formatter.apply(format, { value });\r\n                    editor.nodeChanged();\r\n                });\r\n            };\r\n\r\n            const removeFormat = (editor, format) => {\r\n                editor.undoManager.transact(() => {\r\n                    editor.focus();\r\n                    editor.formatter.remove(format, { value: null }, null, true);\r\n                    editor.nodeChanged();\r\n                });\r\n            };\r\n\r\n            const registerCommands = (editor) => {\r\n                editor.addCommand('mceApplyTextcolor', (format, value) => {\r\n                    applyFormat(editor, format, value);\r\n                });\r\n\r\n                editor.addCommand('mceRemoveTextcolor', (format) => {\r\n                    removeFormat(editor, format);\r\n                });\r\n\r\n                editor.addCommand('mceSetTextcolor', (name, color) => {\r\n                    if (_lastButton) {\r\n                        setIconColor(_lastButton, name === 'forecolor' ? 'pinkfishforecolor' : name, color);\r\n                        (name === 'forecolor' ? _forecolor : _backcolor).set(color);\r\n                    }\r\n                });\r\n            };\r\n\r\n            const getAdditionalColors = (hasCustom: boolean) => {\r\n                const type: 'choiceitem' = 'choiceitem';\r\n                const remove = {\r\n                    type,\r\n                    text: 'Remove color',\r\n                    icon: 'color-swatch-remove-color',\r\n                    value: 'remove'\r\n                };\r\n                const custom = {\r\n                    type,\r\n                    text: 'Custom color',\r\n                    icon: 'color-picker',\r\n                    value: 'custom'\r\n                };\r\n                return hasCustom ? [\r\n                    remove,\r\n                    custom\r\n                ] : [remove];\r\n            };\r\n\r\n            const applyColor = (editor, format, value, onChoice: (v: string) => void) => {\r\n                if (value === 'custom') {\r\n                    _editor.openColorDialog(format, '');\r\n                } else if (value === 'remove') {\r\n                    onChoice('');\r\n                    editor.execCommand('mceRemoveTextcolor', format);\r\n                } else {\r\n                    onChoice(value);\r\n                    editor.execCommand('mceApplyTextcolor', format, value);\r\n                }\r\n            };\r\n\r\n            const mapColors = (colorMap: string[]) => {\r\n                const colors = [];\r\n\r\n                for (let i = 0; i < colorMap.length; i += 2) {\r\n                    colors.push({\r\n                        text: colorMap[i + 1],\r\n                        value: '#' + colorMap[i],\r\n                        type: 'choiceitem'\r\n                    });\r\n                }\r\n\r\n                return colors;\r\n            }\r\n\r\n            const getColors = (colors, hasCustom: boolean) => mapColors(_colors).concat(getAdditionalColors(hasCustom));\r\n\r\n            const getFetch = (colors, hasCustom: boolean) => (callback) => {\r\n                callback(getColors(colors, hasCustom));\r\n            };\r\n\r\n            const setIconColor = (splitButtonApi, name: string, newColor: string) => {\r\n                const id = name === 'pinkfishforecolor' ? 'tox-icon-text-color__color' : 'tox-icon-highlight-bg-color__color';\r\n                splitButtonApi.setIconFill(id, newColor);\r\n            };\r\n\r\n            const registerTextColorButton = (editor, name: string, format: ColorFormat, tooltip: string, lastColor) => {\r\n                editor.ui.registry.addSplitButton(name, {\r\n                    tooltip,\r\n                    presets: 'color',\r\n                    icon: name === 'pinkfishforecolor' ? 'text-color' : 'highlight-bg-color',\r\n                    select: (value) => {\r\n                        const optCurrentRgb = new RGBColor(getCurrentColor(editor, format) || '').toHex();\r\n                        return optCurrentRgb.toLowerCase() === value.toLowerCase();\r\n                    },\r\n                    columns: 5,\r\n                    fetch: getFetch(_colors, true),\r\n                    onAction: (_splitButtonApi) => {\r\n                        _lastButton = _splitButtonApi;\r\n                        applyColor(editor, format, lastColor.get(), () => { });\r\n                    },\r\n                    onItemAction: (_splitButtonApi, value) => {\r\n                        _lastButton = _splitButtonApi;\r\n                        applyColor(editor, format, value, (newColor) => {\r\n                            lastColor.set(newColor);\r\n                            editor.fire('TextColorChange', {\r\n                                name,\r\n                                color: newColor\r\n                            });\r\n                        });\r\n                    },\r\n                    onSetup: (splitButtonApi) => {\r\n                        setIconColor(splitButtonApi, name, lastColor.get());\r\n\r\n                        const handler = (e) => {\r\n                            if (e.name === name) {\r\n                                setIconColor(splitButtonApi, e.name, e.color);\r\n                            }\r\n                        };\r\n\r\n                        editor.on('TextColorChange', handler);\r\n\r\n                        return () => {\r\n                            editor.off('TextColorChange', handler);\r\n                        };\r\n                    }\r\n                });\r\n            };\r\n\r\n            const registerTextColorMenuItem = (editor, name: string, format: ColorFormat, text: string) => {\r\n                editor.ui.registry.addNestedMenuItem(name, {\r\n                    text,\r\n                    icon: name === 'pinkfishforecolor' ? 'text-color' : 'highlight-bg-color',\r\n                    getSubmenuItems: () => [\r\n                        {\r\n                            type: 'fancymenuitem',\r\n                            fancytype: 'colorswatch',\r\n                            onAction: (data) => {\r\n                                applyColor(editor, format, data.value, () => { });\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n            };\r\n\r\n            registerCommands(editor);\r\n            registerTextColorButton(editor, 'pinkfishforecolor', 'forecolor', 'Text color', _forecolor);\r\n            registerTextColorButton(editor, 'pinkfishbackcolor', 'hilitecolor', 'Background color', _backcolor);\r\n\r\n            registerTextColorMenuItem(editor, 'pinkfishforecolor', 'forecolor', 'Text color');\r\n            registerTextColorMenuItem(editor, 'pinkfishbackcolor', 'hilitecolor', 'Background color');\r\n        });\r\n        tinymce.PluginManager.add('pinkfish', function (editor) {\r\n\r\n            editor.addCommand('mceApplyFormat', (format, value) => {\r\n                editor.undoManager.transact(() => {\r\n                    editor.focus();\r\n                    _editor.clearReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                    if (value)\r\n                        editor.formatter.apply(format, { value: value });\r\n                    else\r\n                        editor.formatter.apply(format);\r\n                    _editor.addReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                    editor.nodeChanged();\r\n                });\r\n            });\r\n\r\n            editor.addCommand('mceRemoveFormat', (format) => {\r\n                editor.undoManager.transact(() => {\r\n                    editor.focus();\r\n                    _editor.clearReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                    editor.formatter.remove(format, { value: null }, null, true);\r\n                    _editor.addReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                    editor.nodeChanged();\r\n                });\r\n            });\r\n\r\n            function buttonPostRender(buttonApi, format) {\r\n                editor.on('init', () => {\r\n                    editor.formatter.formatChanged(format, function (state) {\r\n                        buttonApi.setActive(state);\r\n                    });\r\n                });\r\n            }\r\n\r\n            function toggleFormat(format) {\r\n                if (!format || typeof format !== 'string') format = this.settings.format;\r\n                tinymce.activeEditor.undoManager.transact(() => {\r\n                    $('#tinymce', tinymce.activeEditor.getDoc()).removeClass('animate');\r\n                    this.clearReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                    editor.execCommand('mceToggleFormat', false, format);\r\n                    this.addReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                    $('#tinymce', tinymce.activeEditor.getDoc()).addClass('animate');\r\n                });\r\n            }\r\n\r\n\r\n            editor.ui.registry.addIcon('overline', '<i class=\"mce-i-overline\"></i>');\r\n            editor.ui.registry.addIcon('dblunderline', '<i class=\"mce-i-dblunderline\"></i>');\r\n            editor.ui.registry.addIcon('flash', '<i class=\"mce-i-flash\"></i>');\r\n            editor.ui.registry.addIcon('reverse', '<i class=\"mce-i-reverse\"></i>');\r\n            editor.ui.registry.addIcon('pasteformatted', '<i class=\"mce-i-pasteformatted\"></i>');\r\n            editor.ui.registry.addIcon('copyformatted', '<i class=\"mce-i-copyformatted\"></i>');\r\n\r\n            editor.ui.registry.addSplitButton('send', {\r\n                icon: 'arrow-right',\r\n                tooltip: 'Send to mud',\r\n                onAction: () => {\r\n                    client.sendCommand(_editor.getFormattedText().replace(/(?:\\r)/g, ''));\r\n                    if (client.getOption('editorClearOnSend'))\r\n                        tinymce.activeEditor.setContent('');\r\n                    if (client.getOption('editorCloseOnSend'))\r\n                        _editor.emit('close');\r\n                },\r\n                onItemAction: (api, value) => {\r\n                    switch (value) {\r\n                        case 'formatted':\r\n                            client.sendCommand(_editor.getFormattedText().replace(/(?:\\r)/g, ''));\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                        case 'text':\r\n                            client.sendCommand(_editor.getText().replace(/(?:\\r)/g, ''));\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                        case 'formattednoecho':\r\n                            client.sendBackground(_editor.getFormattedText().replace(/(?:\\r)/g, ''), true);\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                        case 'textnoecho':\r\n                            client.sendBackground(_editor.getText().replace(/(?:\\r)/g, ''), true);\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                        case 'formattedverbatim':\r\n                            client.send(_editor.getFormattedText().replace(/(?:\\r)/g, ''));\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                        case 'textverbatim':\r\n                            client.send(_editor.getText().replace(/(?:\\r)/g, ''));\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                        case 'rawformatted':\r\n                            client.sendRaw(_editor.getFormattedText().replace(/(?:\\r)/g, ''));\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                        case 'rawtext':\r\n                            client.sendRaw(_editor.getText().replace(/(?:\\r)/g, ''));\r\n                            if (client.getOption('editorClearOnSend'))\r\n                                tinymce.activeEditor.setContent('');\r\n                            if (client.getOption('editorCloseOnSend'))\r\n                                _editor.emit('close');\r\n                            break;\r\n                    }\r\n                },\r\n                fetch: callback => {\r\n                    callback([\r\n                        {\r\n                            text: 'Formatted as commands',\r\n                            value: 'formatted',\r\n                            type: 'choiceitem'\r\n                        },\r\n                        {\r\n                            text: 'Text as commands',\r\n                            value: 'text',\r\n                            type: 'choiceitem'\r\n                        },\r\n                        {\r\n                            text: 'Formatted as commands (No echo)',\r\n                            value: 'formattednoecho',\r\n                            type: 'choiceitem'\r\n                        },\r\n                        {\r\n                            text: 'Text as commands (No echo)',\r\n                            value: 'textnoecho',\r\n                            type: 'choiceitem'\r\n                        },\r\n                        {\r\n                            text: 'Formatted verbatim (No echo)',\r\n                            value: 'formattedverbatim',\r\n                            type: 'choiceitem'\r\n                        },\r\n                        {\r\n                            text: 'Text verbatim (No echo)',\r\n                            value: 'textverbatim',\r\n                            type: 'choiceitem'\r\n                        },\r\n                        {\r\n                            text: 'Raw formatted (No echo)',\r\n                            value: 'rawformatted',\r\n                            type: 'choiceitem'\r\n                        },\r\n                        {\r\n                            text: 'Raw text (No echo)',\r\n                            value: 'rawtext',\r\n                            type: 'choiceitem'\r\n                        }\r\n                    ]);\r\n                }\r\n            });\r\n            editor.ui.registry.addButton('append', {\r\n                icon: 'browse',\r\n                tooltip: 'Append file...',\r\n                onAction: () => _editor.appendFile()\r\n            });\r\n            editor.ui.registry.addButton('clear', {\r\n                icon: 'remove',\r\n                tooltip: 'Clear',\r\n                onAction: () => _editor.clear()\r\n            });\r\n            editor.ui.registry.addButton('pasteformatted', {\r\n                icon: 'pasteformatted',\r\n                tooltip: 'Paste formatted',\r\n                onAction: buttonApi => {\r\n                    pasteText().then(text => {\r\n                        _editor.insertFormatted(text || '');\r\n                    }).catch(err => {\r\n                        if (client.enableDebug)\r\n                            client.debug(err);\r\n                        if (err.message && err.message === 'Permission not granted!')\r\n                            alert('Paste permission not granted.');\r\n                        else\r\n                            alert('Paste not supported.');\r\n                    });\r\n                }\r\n            });\r\n            editor.ui.registry.addButton('pasteastext', {\r\n                icon: 'paste-text',\r\n                tooltip: 'Paste as text',\r\n                onAction: buttonApi => {\r\n                    pasteText().then(text => {\r\n                        tinymce.activeEditor.execCommand('mceInsertContent', false, (text || '').replace(/(\\r\\n|\\r|\\n)/g, '<br/>').replaceAll('  ', '&nbsp;&nbsp;'));\r\n                    }).catch(err => {\r\n                        if (client.enableDebug)\r\n                            client.debug(err);\r\n                        if (err.message && err.message === 'Permission not granted!')\r\n                            alert('Paste permission not granted.');\r\n                        else\r\n                            alert('Paste not supported.');\r\n                    });\r\n                }\r\n            });\r\n\r\n            editor.ui.registry.addButton('copyformatted', {\r\n                icon: 'copyformatted',\r\n                tooltip: 'Copy formatted',\r\n                onAction: buttonApi => copyText(_editor.getFormattedSelection().replace(/(?:\\r)/g, ''))\r\n            });\r\n\r\n            editor.ui.registry.addToggleButton('overline', {\r\n                icon: 'overline',\r\n                tooltip: 'Overline',\r\n                format: 'overline',\r\n                onAction: buttonApi => toggleFormat('overline'),\r\n                onSetup: buttonApi => buttonPostRender(buttonApi, 'overline')\r\n            });\r\n            editor.ui.registry.addToggleButton('dblunderline', {\r\n                icon: 'dblunderline',\r\n                tooltip: 'Double Underline',\r\n                format: 'dblunderline',\r\n                onAction: buttonApi => toggleFormat('dblunderline'),\r\n                onSetup: buttonApi => buttonPostRender(buttonApi, 'dblunderline')\r\n            });\r\n            editor.ui.registry.addToggleButton('flash', {\r\n                tooltip: 'Flash',\r\n                format: 'flash',\r\n                icon: 'flash',\r\n                onAction: buttonApi => toggleFormat('flash'),\r\n                onSetup: buttonApi => buttonPostRender(buttonApi, 'flash')\r\n            });\r\n            editor.ui.registry.addToggleButton('reverse', {\r\n                icon: 'reverse',\r\n                tooltip: 'Reverse',\r\n                format: 'reverse',\r\n                onAction: buttonApi => toggleFormat('reverse'),\r\n                onSetup: buttonApi => buttonPostRender(buttonApi, 'reverse')\r\n            });\r\n\r\n            editor.ui.registry.addMenuItem('style', {\r\n                text: 'Style',\r\n                menu: [\r\n                    {\r\n                        image: 'overline',\r\n                        text: 'Overline',\r\n                        format: 'overline',\r\n                        onclick: toggleFormat,\r\n                        onpostrender: buttonPostRender\r\n                    }, {\r\n                        image: 'dblunderline',\r\n                        text: 'Double Underline',\r\n                        format: 'dblunderline',\r\n                        onclick: toggleFormat,\r\n                        onpostrender: buttonPostRender\r\n                    },\r\n                    {\r\n                        text: 'Flash',\r\n                        format: 'flash',\r\n                        image: 'flash',\r\n                        onclick: toggleFormat,\r\n                        onpostrender: buttonPostRender\r\n                    },\r\n                    {\r\n                        image: 'reverse',\r\n                        text: 'Reverse',\r\n                        format: 'reverse',\r\n                        onclick: toggleFormat,\r\n                        onpostrender: buttonPostRender\r\n                    }\r\n                ]\r\n            });\r\n\r\n            editor.ui.registry.addMenuItem('overline', {\r\n                image: 'overline',\r\n                text: 'Overline',\r\n                format: 'overline',\r\n                onclick: toggleFormat,\r\n                onpostrender: buttonPostRender\r\n            });\r\n\r\n            editor.ui.registry.addMenuItem('dblunderline', {\r\n                image: 'dblunderline',\r\n                text: 'Double Underline',\r\n                format: 'dblunderline',\r\n                onclick: toggleFormat,\r\n                onpostrender: buttonPostRender\r\n            });\r\n\r\n            editor.ui.registry.addMenuItem('flash', {\r\n                text: 'Flash',\r\n                format: 'flash',\r\n                image: 'flash',\r\n                onclick: toggleFormat,\r\n                onpostrender: buttonPostRender\r\n            });\r\n            editor.ui.registry.addMenuItem('reverse', {\r\n                image: 'reverse',\r\n                text: 'Reverse',\r\n                format: 'reverse',\r\n                onclick: toggleFormat,\r\n                onpostrender: buttonPostRender\r\n            });\r\n\r\n            editor.on('Change', () => {\r\n                _editor.addReverse($('.reverse', $(editor.getDoc()).contents()));\r\n            });\r\n            editor.addShortcut('ctrl+s', 'Strikethrough', () => {\r\n                toggleFormat('strikethrough');\r\n            });\r\n            editor.addShortcut('ctrl+o', 'Overline', () => {\r\n                toggleFormat('overline');\r\n            });\r\n            editor.addShortcut('ctrl+d', 'Double Underline', () => {\r\n                toggleFormat('dblunderline');\r\n            });\r\n            editor.addShortcut('ctrl+f', 'Flash', () => {\r\n                toggleFormat('flash');\r\n            });\r\n            editor.addShortcut('ctrl+r', 'Reverse', () => {\r\n                toggleFormat('reverse');\r\n            });\r\n        });\r\n    }\r\n\r\n    private clearReverse(els, c?) {\r\n        els.each(\r\n            function () {\r\n                if (!$(this).data('reverse'))\r\n                    return;\r\n                if (c && $(this).hasClass('reverse'))\r\n                    return;\r\n                var back, fore;\r\n                if (c) {\r\n                    back = $(this).css('color');\r\n                    fore = $(this).css('background-color');\r\n                }\r\n                else {\r\n                    fore = $(this).parent().css('color');\r\n                    back = $(this).parent().css('background-color');\r\n                }\r\n                if (back === 'black')\r\n                    back = '';\r\n                if (fore === 'rgba(0, 0, 0, 0)')\r\n                    fore = 'black';\r\n                $(this).css('color', fore);\r\n                $(this).css('background-color', back);\r\n                if ($(this).children().length)\r\n                    this.clearReverse($(this).children(), true);\r\n            }\r\n        );\r\n    }\r\n\r\n    private addReverse(els, c?) {\r\n        els.each(\r\n            function () {\r\n                if (c && $(this).hasClass('reverse'))\r\n                    return;\r\n                var back, fore;\r\n                if (c) {\r\n                    back = $(this).css('color');\r\n                    fore = $(this).css('background-color');\r\n                }\r\n                else {\r\n                    back = $(this).parent().css('color');\r\n                    fore = $(this).parent().css('background-color');\r\n                }\r\n                if (back === 'rgba(0, 0, 0, 0)')\r\n                    back = 'black';\r\n                if (fore === 'rgba(0, 0, 0, 0)')\r\n                    fore = 'black';\r\n                if ($(this).children().length) {\r\n                    this.clearReverse($(this).children(), true);\r\n                    this.addReverse($(this).children(), true);\r\n                }\r\n                $(this).css('color', fore);\r\n                $(this).css('background-color', back);\r\n                $(this).data('reverse', true);\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    private colorCell(color, idx) {\r\n        var cell = '<td class=\"mce-grid-cell' + (color === 'transparent' ? ' mce-colorbtn-trans' : '') + '\">';\r\n        cell += '<div id=\"' + idx + '\"';\r\n        cell += ' data-mce-color=\"' + color + '\"';\r\n        cell += ' role=\"option\"';\r\n        cell += ' tabIndex=\"-1\"';\r\n        cell += ' style=\"background-color: ' + (color === 'transparent' ? color : '#' + color) + '\"';\r\n        if (this.colorNames[idx])\r\n            cell += ' title=\"' + idx + ', ' + this.colorNames[idx] + '\">';\r\n        else\r\n            cell += ' title=\"' + idx + '\">';\r\n        if (color === 'transparent') cell += '&#215;';\r\n        cell += '</div>';\r\n        cell += '</td>';\r\n        return cell;\r\n    }\r\n\r\n    private openColorDialog(type, color) {\r\n        if (!this._colorDialog) {\r\n            this._colorDialog = new Dialog({ noFooter: true, title: '<i class=\"fas fa-palette\"></i> Pick color', center: true, resizable: false, moveable: false, maximizable: false, width: 380, height: 340 });\r\n            this._colorDialog.body.style.alignItems = 'center';\r\n            this._colorDialog.body.style.display = 'flex';\r\n            let c;\r\n            let cl;\r\n            let r;\r\n            let g;\r\n            let b;\r\n            let idx;\r\n            var html = '<table style=\"margin : auto !important;\" class=\"mce-grid mce-grid-border mce-colorbutton-grid\" role=\"list\" cellspacing=\"0\"><tbody><tr>';\r\n            for (c = 0, cl = this._ColorTable.length; c < cl; c += 2) {\r\n                html += this.colorCell(this._ColorTable[c], this._ColorTable[c + 1]);\r\n                if (c / 2 % 6 === 5)\r\n                    html += '<td class=\"mce-grid-cell\"></td>';\r\n            }\r\n            html += '<td class=\"mce-grid-cell\"></td>';\r\n            html += this.colorCell('transparent', 'No color');\r\n            html += '</tr><tr><td></td></tr>';\r\n            var html2 = '';\r\n            for (r = 0; r < 6; r++) {\r\n                if (g < 3)\r\n                    html += '<tr>';\r\n                else\r\n                    html2 += '<tr>';\r\n                for (g = 0; g < 6; g++) {\r\n                    for (b = 0; b < 6; b++) {\r\n                        idx = `RGB${r}${g}${b}`;\r\n                        color = '';\r\n                        c = 0;\r\n                        c = r * 40 + 55;\r\n                        if (c < 16)\r\n                            color += '0';\r\n                        color += c.toString(16);\r\n                        c = 0;\r\n                        c = g * 40 + 55;\r\n                        if (c < 16)\r\n                            color += '0';\r\n                        color += c.toString(16);\r\n                        c = 0;\r\n                        c = b * 40 + 55;\r\n                        if (c < 16)\r\n                            color += '0';\r\n                        color += c.toString(16);\r\n                        color = color.toUpperCase();\r\n                        if (g < 3)\r\n                            html += this.colorCell(color, idx);\r\n                        else\r\n                            html2 += this.colorCell(color, idx);\r\n                    }\r\n                    if (g === 2)\r\n                        html += '</tr>';\r\n                    else if (g < 3)\r\n                        html += '<td class=\"mce-grid-cell\"></td>';\r\n                    else if (g < 5)\r\n                        html2 += '<td class=\"mce-grid-cell\"></td>';\r\n                }\r\n                if (g < 3)\r\n                    html += '</tr>';\r\n                else\r\n                    html2 += '</tr>';\r\n            }\r\n            html += html2;\r\n            html += '<tr><td></td></tr><tr>';\r\n            for (r = 232; r <= 255; r++) {\r\n                g = (r - 232) * 10 + 8;\r\n                if (g < 16)\r\n                    g = '0' + g.toString(16).toUpperCase();\r\n                else\r\n                    g = g.toString(16).toUpperCase();\r\n                g = g + g + g;\r\n                html += this.colorCell(g, color);\r\n                if (r === 237 || r === 249)\r\n                    html += '<td class=\"mce-grid-cell\"></td>';\r\n                if (r === 243)\r\n                    html += '</tr><tr>';\r\n            }\r\n            html += '</tr></tbody></table>';\r\n            html += `<style>\r\n.mce-colorbtn-trans div {line-height: 14px;overflow: hidden;}\r\n.mce-grid td.mce-grid-cell div{border:1px solid #c5c5c5;width:15px;height:15px;margin:0;cursor:pointer}.mce-grid td.mce-grid-cell div:focus{border-color:#91bbe9}.mce-grid td.mce-grid-cell div[disabled]{cursor:not-allowed}            \r\n.mce-grid{border-spacing:2px;border-collapse:separate}.mce-grid a{display:block;border:1px solid transparent}.mce-grid a:hover,.mce-grid a:focus{border-color:#91bbe9}.mce-grid-border{margin:0 4px 0 4px}.mce-grid-border a{border-color:#c5c5c5;width:13px;height:13px}.mce-grid-border a:hover,.mce-grid-border a.mce-active{border-color:#91bbe9;background:#bdd6f2}            \r\n            </style>`;\r\n            this._colorDialog.body.innerHTML = html;\r\n            let cells = this._colorDialog.body.querySelectorAll('div');\r\n            for (c = 0, cl = cells.length; c < cl; c++)\r\n                cells[c].addEventListener('click', e => {\r\n                    color = (e.currentTarget as HTMLElement).dataset.mceColor;\r\n                    if (color === 'transparent')\r\n                        tinymce.activeEditor.execCommand('mceRemoveFormat', this._colorDialog.dialog.dataset.type);\r\n                    else\r\n                        tinymce.activeEditor.execCommand('mceApplyFormat', this._colorDialog.dialog.dataset.type, '#' + color);\r\n                    tinymce.activeEditor.execCommand('mceSetTextcolor', this._colorDialog.dialog.dataset.type, '#' + color);\r\n                    this._colorDialog.close();\r\n                });\r\n        }\r\n        this._colorDialog.dialog.dataset.type = type;\r\n        this._colorDialog.showModal();\r\n    }\r\n\r\n    private appendFile() {\r\n        openFileDialog('Append file(s)', true).then(files => {\r\n            for (var f = 0, fl = files.length; f < fl; f++)\r\n                readFile(files[f]).then((contents: any) => {\r\n                    this.insert(contents);\r\n                }).catch(client.error);\r\n        }).catch(() => { });\r\n    }\r\n\r\n    private insertFormatted(text) {\r\n        if (this.isSimple)\r\n            insertValue(this._element, text);\r\n        else\r\n            tinymce.activeEditor.execCommand('insertHTML', false, pinkfishToHTML(text).replace(/(\\r\\n|\\r|\\n)/g, '<br/>'));\r\n    }\r\n\r\n    public setFormatted(text) {\r\n        if (this.isSimple)\r\n            this._element.value = text;\r\n        else {\r\n            tinymce.activeEditor.setContent(pinkfishToHTML(text).replace(/(\\r\\n|\\r|\\n)/g, '<br/>'), { format: 'html' });\r\n        }\r\n    }\r\n\r\n    private buildHTMLStack(els) {\r\n        var tag, $el, t, tl;\r\n        var stack = [];\r\n        for (var e = 0, el = els.length; e < el; e++) {\r\n            $el = $(els[e]);\r\n            tag = $el.prop('tagName');\r\n            if (tag === 'EM' || tag === 'I')\r\n                tag = 'ITALIC';\r\n            else if (tag === 'STRONG' || tag === 'B')\r\n                tag = 'BOLD';\r\n            if (!tag)\r\n                stack.push('\"' + $el.text() + '\"');\r\n            else if (tag === 'SPAN') {\r\n                if (els[e].className != '') {\r\n                    tag = els[e].className.toUpperCase().split(/\\s+/g);\r\n                    tl = tag.length;\r\n                    for (t = 0; t < tl; t++) {\r\n                        if (tag[t] === 'NOFLASH')\r\n                            stack.push('FLASH');\r\n                        else if (tag[t].length > 0)\r\n                            stack.push(tag[t]);\r\n                    }\r\n                    stack = stack.concat(this.buildHTMLStack($el.contents()));\r\n                    for (t = 0; t < tl; t++) {\r\n                        if (tag[t] === 'NOFLASH')\r\n                            stack.push('FLASH');\r\n                        else if (tag[t].length > 0)\r\n                            stack.push('/' + tag[t]);\r\n                    }\r\n                    continue;\r\n                }\r\n                else if ($el.css('text-decoration') === 'line-through')\r\n                    tag = 'STRIKEOUT';\r\n                else if ($el.css('text-decoration') === 'underline')\r\n                    tag = 'UNDERLINE';\r\n                else if ($el.data('mce-style')) {\r\n                    tag = $el.data('mce-style').toUpperCase().split(';');\r\n                    tl = tag.length;\r\n                    for (t = 0; t < tl; t++) {\r\n                        if (tag[t].endsWith('INHERIT') || tag[t].endsWith('BLACK'))\r\n                            continue;\r\n                        tag[t] = tag[t].trim();\r\n                        tag[t] = tag[t].replace('BACKGROUND:', 'BACKGROUND-COLOR:');\r\n                        if (tag[t].length > 0)\r\n                            stack.push(tag[t]);\r\n                    }\r\n                    stack = stack.concat(this.buildHTMLStack($el.contents()));\r\n                    for (t = 0; t < tl; t++) {\r\n                        if (tag[t].endsWith('INHERIT') || tag[t].endsWith('BLACK'))\r\n                            continue;\r\n                        if (tag[t].length > 0)\r\n                            stack.push('/' + tag[t].trim());\r\n                    }\r\n                    continue;\r\n                }\r\n                else if ($el.css('color') || $el.css('background-color') || $el.css('background')) {\r\n                    tag = [];\r\n                    if ($el.css('color'))\r\n                        tag.push('COLOR: ' + new RGBColor($el.css('color')).toHex().toUpperCase());\r\n                    if ($el.css('background-color'))\r\n                        tag.push('BACKGROUND-COLOR: ' + new RGBColor($el.css('background-color')).toHex().toUpperCase());\r\n                    if ($el.css('background'))\r\n                        tag.push('BACKGROUND-COLOR: ' + new RGBColor($el.css('background')).toHex().toUpperCase());\r\n                    tl = tag.length;\r\n                    for (t = 0; t < tl; t++) {\r\n                        if (tag[t].length > 0)\r\n                            stack.push(tag[t].trim());\r\n                    }\r\n                    stack = stack.concat(this.buildHTMLStack($el.contents()));\r\n                    for (t = 0; t < tl; t++) {\r\n                        if (tag[t].length > 0)\r\n                            stack.push('/' + tag[t].trim());\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                stack.push(tag);\r\n                stack = stack.concat(this.buildHTMLStack($el.contents()));\r\n                stack.push('/' + tag);\r\n            }\r\n            else if (tag == 'BR' && $el.data('mce-bogus'))\r\n                stack.push('RESET');\r\n            else {\r\n                stack.push(tag);\r\n                stack = stack.concat(this.buildHTMLStack($el.contents()));\r\n                stack.push('/' + tag);\r\n            }\r\n        }\r\n        return stack;\r\n    }\r\n\r\n    public getFormattedSelection() {\r\n        //build all previous nodes to ensure all formatting is captures\r\n        var nodes = tinymce.activeEditor.dom.getParents(tinymce.activeEditor.selection.getNode());\r\n        var n = 0, nl = nodes.length;\r\n        var start = '<html>';\r\n        var end = '</html>';\r\n        for (; n < nl; n++) {\r\n            var tag = nodes[n].tagName;\r\n            if (tag === 'EM' || tag === 'I' || tag === 'STRONG' || tag === 'B') {\r\n                start += '<' + tag + '>';\r\n                end = '</' + tag + '>' + end;\r\n            }\r\n            else if (tag === 'SPAN') {\r\n                start += '<' + tag;\r\n                if (nodes[n].className != '')\r\n                    start += ' class=\"' + nodes[n].className + '\"';\r\n                var style = '';\r\n                if (nodes[n].style.textDecoration != '')\r\n                    style += 'text-decoration:' + nodes[n].style.textDecoration + ';';\r\n                if (nodes[n].style.color != '')\r\n                    style += 'color:' + nodes[n].style.color + ';';\r\n                if (nodes[n].style.background != '')\r\n                    style += 'background:' + nodes[n].style.background + ';';\r\n                if (nodes[n].style.backgroundColor != '')\r\n                    style += 'background-color:' + nodes[n].style.backgroundColor + ';';\r\n                if (style.length > 0)\r\n                    start += ' style=\"' + style + '\"';\r\n                if (nodes[n].dataset && nodes[n].dataset.mceStyle)\r\n                    start += ' data-mce-style=\"' + nodes[n].dataset.mceStyle + '\"';\r\n                start += ' >';\r\n                end = '</' + tag + '>' + end;\r\n            }\r\n            else if (tag === 'BODY') {\r\n                start += '<' + tag + '>';\r\n                end = '</' + tag + '>' + end;\r\n                break;\r\n            }\r\n        }\r\n        return this.formatHtml($(start + tinymce.activeEditor.selection.getContent({ format: 'raw' }).replace(/<\\/div><div>/g, '<br>') + end));\r\n    }\r\n\r\n    public getFormattedText() {\r\n        if (this.isSimple)\r\n            return this._element.value;\r\n        return this.formatHtml($('<html>' + this.getRaw().replace(/<\\/div><div>/g, '<br>') + '</html>'));\r\n    }\r\n\r\n    public getText() {\r\n        if (this.isSimple)\r\n            return this._element.value;\r\n        return tinymce.activeEditor.getContent({ format: 'text' });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    public getHTML() {\r\n        if (this.isSimple)\r\n            return this._element.value;\r\n        return tinymce.activeEditor.getContent({ format: 'html' });\r\n    }\r\n\r\n    public getRaw() {\r\n        if (this.isSimple)\r\n            return this._element.value;\r\n        return tinymce.activeEditor.getContent({ format: 'raw' });\r\n    }\r\n\r\n    private formatHtml(text) {\r\n        var data = this.buildHTMLStack(text);\r\n        var buffer = [];\r\n        var codes = [];\r\n        var color, d, dl, rgb;\r\n        if (DEBUG && client.getOption('enableDebug'))\r\n            client.debug('Advanced Editor Get Raw HTML: ' + this.getRaw());\r\n        for (d = data.length - 1; d >= 0; d--) {\r\n            if (!data[d].startsWith('\"') && data[d] != 'BR' && data[d] != 'RESET')\r\n                data.pop();\r\n            else\r\n                break;\r\n        }\r\n        if (data[0] === 'DIV')\r\n            data.shift();\r\n\r\n        for (d = 0, dl = data.length; d < dl; d++) {\r\n            switch (data[d]) {\r\n                case 'BOLD':\r\n                case 'ITALIC':\r\n                case 'UNDERLINE':\r\n                case 'STRIKEOUT':\r\n                case 'DBLUNDERLINE':\r\n                case 'OVERLINE':\r\n                case 'FLASH':\r\n                case 'REVERSE':\r\n                    codes.push('%^' + data[d] + '%^');\r\n                    buffer.push('%^' + data[d] + '%^');\r\n                    break;\r\n                case '/DBLUNDERLINE':\r\n                case '/OVERLINE':\r\n                case '/FLASH':\r\n                case '/REVERSE':\r\n                case '/UNDERLINE':\r\n                case '/BOLD':\r\n                case '/ITALIC':\r\n                case '/STRIKEOUT':\r\n                    codes.pop();\r\n                    this.cleanReset(buffer);\r\n                    buffer.push('%^RESET%^');\r\n                    if (codes.length > 0)\r\n                        buffer.push(codes.join(''));\r\n                    break;\r\n                case 'SPAN':\r\n                case '/SPAN':\r\n                case '/BR':\r\n                case '/DIV':\r\n                    break;\r\n                case 'DIV':\r\n                case 'BR':\r\n                    if (codes.length > 0 && buffer.length > 0 && !buffer[buffer.length - 1].endsWith('%^RESET%^')) {\r\n                        this.cleanReset(buffer);\r\n                        buffer.push('%^RESET%^');\r\n                    }\r\n                    buffer.push('\\n');\r\n                    if (codes.length > 0)\r\n                        buffer.push(codes.join(''));\r\n                    break;\r\n                case 'RESET':\r\n                    if (codes.length > 0 && buffer.length > 0 && !buffer[buffer.length - 1].endsWith('%^RESET%^')) {\r\n                        this.cleanReset(buffer);\r\n                        buffer.push('%^RESET%^');\r\n                    }\r\n                    if (codes.length > 0)\r\n                        buffer.push(codes.join(''));\r\n                    break;\r\n                default:\r\n                    if (data[d].startsWith('COLOR: #')) {\r\n                        color = data[d].substr(8);\r\n                        if (!this._colors[color]) {\r\n                            rgb = new RGBColor(color);\r\n                            color = this.nearestHex(rgb.toHex()).substr(1);\r\n                        }\r\n                        color = this._colors[color];\r\n                        if (color === 'BOLD BLACK' || color === 'BOLD%^%^BLACK')\r\n                            color = 'mono11';\r\n                        codes.push('%^' + color + '%^');\r\n                        buffer.push('%^' + color + '%^');\r\n                    }\r\n                    else if (data[d].startsWith('COLOR: ')) {\r\n                        color = new RGBColor(data[d].substr(7)).toHex().substr(1);\r\n                        if (!this._colors[color])\r\n                            color = this.nearestHex('#' + color).substr(1);\r\n                        color = this._colors[color];\r\n                        if (color === 'BOLD BLACK' || color === 'BOLD%^%^BLACK')\r\n                            color = 'mono11';\r\n                        codes.push('%^' + color + '%^');\r\n                        buffer.push('%^' + color + '%^');\r\n\r\n                    }\r\n                    else if (data[d].startsWith('/COLOR: ')) {\r\n                        codes.pop();\r\n                        this.cleanReset(buffer);\r\n                        buffer.push('%^RESET%^');\r\n                        if (codes.length > 0)\r\n                            buffer.push(codes.join(''));\r\n                    }\r\n                    else if (data[d].startsWith('BACKGROUND-COLOR: #')) {\r\n                        color = data[d].substr(19);\r\n                        if (!this._colors[color]) {\r\n                            rgb = new RGBColor(color);\r\n                            color = this.nearestHex(rgb.toHex()).substr(1);\r\n                        }\r\n                        if (this._colors['B' + color])\r\n                            color = this._colors['B' + color];\r\n                        else\r\n                            color = this._colors[color];\r\n                        color = '%^B_' + color + '%^';\r\n                        codes.push(color);\r\n                        buffer.push(color);\r\n                    }\r\n                    else if (data[d].startsWith('BACKGROUND-COLOR: ')) {\r\n                        color = new RGBColor(data[d].substr(18)).toHex().substr(1);\r\n                        if (!this._colors[color])\r\n                            color = this.nearestHex('#' + color).substr(1);\r\n                        if (this._colors['B' + color])\r\n                            color = this._colors['B' + color];\r\n                        else\r\n                            color = this._colors[color];\r\n                        color = '%^B_' + color + '%^';\r\n                        codes.push(color);\r\n                        buffer.push(color);\r\n                    }\r\n                    else if (data[d].startsWith('/BACKGROUND-COLOR: ')) {\r\n                        codes.pop();\r\n                        this.cleanReset(buffer);\r\n                        buffer.push('%^RESET%^');\r\n                        if (codes.length > 0)\r\n                            buffer.push(codes.join(''));\r\n                    }\r\n                    else if (data[d].startsWith('\"'))\r\n                        buffer.push(data[d].substring(1, data[d].length - 1));\r\n                    break;\r\n            }\r\n        }\r\n        return buffer.join('');\r\n    }\r\n\r\n    private cleanReset(buffer) {\r\n        let b = buffer.length - 1;\r\n        for (; b >= 0; b--) {\r\n            if (buffer[b].startsWith('%^'))\r\n                buffer.pop();\r\n            else\r\n                return buffer;\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    //{ color: 'red', hex: '#EA4235', rgb: { r: 234, g: 66, b: 53 } },\r\n    private colorList = [];\r\n\r\n    private nearestHex(hex) {\r\n        var _editor = this;\r\n        //https://codereview.stackexchange.com/questions/132225/given-hexadecimal-rgb-color-find-the-closest-predefined-color\r\n        var hexToRgb = function (hex) {\r\n            var shortRegEx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n            //hex = hex.replace(shortRegEx, \"$1$1$2$2$3$3\");\r\n            hex = hex.replace(shortRegEx, function (full, r, g, b) {\r\n                return [r, r, g, g, b, b].join();\r\n            });\r\n            var longRegEx = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?/i;\r\n            var rgbArray = longRegEx.exec(hex);\r\n            var rgbObj = rgbArray ? {\r\n                r: parseInt(rgbArray[1], 16),\r\n                g: parseInt(rgbArray[2], 16),\r\n                b: parseInt(rgbArray[3], 16)\r\n            } : null;\r\n            return rgbObj;\r\n        };\r\n\r\n        var closestHexFromRgb = function (rgbObj) {\r\n            if (!rgbObj) {\r\n                throw new Error('The hex you provided is not formatted correctly. Please try in a format such as \\'#FFF\\' or \\'#DDFFDD\\'.');\r\n            }\r\n\r\n            var minDistance = Number.MAX_SAFE_INTEGER;\r\n            var nearestHex = null;\r\n\r\n            for (var i = 0; i < _editor.colorList.length; i++) {\r\n                var currentColor = _editor.colorList[i];\r\n                var distance = Math.sqrt(\r\n                    Math.pow((rgbObj.r - currentColor.rgb.r), 2) +\r\n                    Math.pow((rgbObj.g - currentColor.rgb.g), 2) +\r\n                    Math.pow((rgbObj.b - currentColor.rgb.b), 2)\r\n                );\r\n                if (distance < minDistance) {\r\n                    minDistance = distance;\r\n                    nearestHex = currentColor.hex;\r\n                }\r\n            }\r\n            return nearestHex;\r\n        };\r\n\r\n        return closestHexFromRgb(hexToRgb(hex));\r\n\r\n    }\r\n\r\n    public remove() {\r\n        tinymce.remove(`#${this._element.id}`);\r\n    }\r\n\r\n    public initialize() {\r\n        if (this.isSimple) return;\r\n        this.initPlugins();\r\n        tinymce.init({\r\n            license_key: 'gpl',\r\n            custom_colors: false,\r\n            selector: `textarea#${this._element.id}`,\r\n            height: 500,\r\n            menubar: false,\r\n            browser_spellcheck: true,\r\n            //contextmenu: false,\r\n            resize: true,\r\n            statusbar: false,\r\n            nowrap: true,\r\n            force_br_newlines: true,\r\n            forced_root_block: 'div',\r\n            plugins: 'pinkfish insertdatetime pinkfishtextcolor nonbreaking',\r\n            color_picker_callback: (editor, color, format) => { this.openColorDialog(format, color || ''); },\r\n            color_picker_caption: 'More&hellip;',\r\n            textcolor_rows: '3',\r\n            textcolor_cols: '8',\r\n            toolbar: 'send | append | undo redo | pinkfishforecolor pinkfishbackcolor | italic underline strikethrough overline dblunderline flash reverse | clear | copy copyformatted | insertdatetime',\r\n            toolbar_mode: 'sliding',\r\n            content_css: 'css/tinymce.content.min.css',\r\n            formats: {\r\n                bold: { inline: 'strong', exact: true, links: true, remove_similar: true },\r\n                italic: { inline: 'em', exact: true, links: true, remove_similar: true },\r\n                overline: { inline: 'span', 'classes': 'overline', links: true, remove_similar: true },\r\n                dblunderline: { inline: 'span', 'classes': 'dblunderline', links: true, remove_similar: true },\r\n                flash: { inline: 'span', 'classes': 'flash', links: true, remove_similar: true },\r\n                reverse: { inline: 'span', 'classes': 'reverse', links: true, remove_similar: true },\r\n                underline: { inline: 'span', 'classes': 'underline', links: true, remove_similar: true },\r\n                strikethrough: { inline: 'span', 'classes': 'strikeout', links: true, remove_similar: true },\r\n                forecolor: { inline: 'span', styles: { textDecoration: 'inherit', border: 'inherit', color: '%value' }, exact: true, links: true, remove_similar: true },\r\n                hilitecolor: { inline: 'span', styles: { textDecoration: 'inherit', border: 'inherit', backgroundColor: '%value' }, exact: true, links: true, remove_similar: true }\r\n                //forecolor: { block: 'span', attributes: { 'data-color': '%value' }, styles: { textDecoration: 'inherit', border: 'inherit', color: '%value' }, exact: true, links: true, remove_similar: true },\r\n                //hilitecolor: { block: 'span', attributes: { 'data-backcolor': '%value' }, styles: { textDecoration: 'inherit', border: 'inherit', backgroundColor: '%value' }, exact: true, links: true, remove_similar: true }\r\n            },\r\n            init_instance_callback: (editor) => {\r\n                editor.shortcuts.add('ctrl+shift+c', 'Copy formatted', () => copyText(this.getFormattedSelection().replace(/(?:\\r)/g, '')));\r\n                /*\r\n                editor.shortcuts.add('ctrl+shift+p', 'Paste formatted', () => {\r\n                    //insertFormatted(clipboard.readText('selection') || '');\r\n                });\r\n                editor.shortcuts.add('ctrl+alt+p', 'Paste as text', () => {\r\n                    //tinymce.activeEditor.execCommand('mceInsertContent', false, (clipboard.readText('selection') || '').replace(/(\\r\\n|\\r|\\n)/g, '<br/>').replaceAll('  ', '&nbsp;&nbsp;'));\r\n                });\r\n                */\r\n                editor.on('PastePreProcess', e => {\r\n                    if (client.getOption('enableDebug'))\r\n                        client.debug('Advanced Before Editor PastePreProcess: ' + e.content);\r\n                    this.clearReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                    e.content = e.content.replace(/<\\/p>/g, '<br>');\r\n                    e.content = e.content.replace(/<\\/h[1-6]>/g, '<br>');\r\n                    e.content = e.content.replace(/<\\/li>/g, '<br>');\r\n                    var regex = /<pre(.*?)>((.|\\s)*)<\\/pre>/mgi;\r\n                    var m;\r\n                    while ((m = regex.exec(e.content)) !== null) {\r\n                        if (m.index === regex.lastIndex) {\r\n                            regex.lastIndex++;\r\n                        }\r\n                        e.content = e.content.substring(0, m.index) + e.content.substring(m.index, regex.lastIndex).replace(/(\\r\\n|\\r|\\n)/g, '<br/>').replaceAll('  ', '&nbsp;&nbsp;') + e.content.substring(regex.lastIndex);\r\n                    }\r\n                    if (client.getOption('enableDebug'))\r\n                        client.debug('Advanced After Editor PastePreProcess: ' + e.content);\r\n                });\r\n                editor.on('PastePreProcess', () => {\r\n                    this.addReverse($('.reverse', $(editor.getDoc()).contents()));\r\n                });\r\n                $('.mce-content-body', tinymce.activeEditor.getDoc()).css('font-size', client.getOption('cmdfontSize'));\r\n                $('.mce-content-body', tinymce.activeEditor.getDoc()).css('font-family', client.getOption('cmdfont') + ', monospace');\r\n                if (tinymce.activeEditor.formatter)\r\n                    tinymce.activeEditor.formatter.register('flash', { inline: 'span', 'classes': client.getOption('flashing') ? 'flash' : 'noflash', links: true, remove_similar: true });\r\n                else\r\n                    tinymce.activeEditor.settings.formats['flash'] = { inline: 'span', 'classes': client.getOption('flashing') ? 'flash' : 'noflash', links: true, remove_similar: true };\r\n                this.loadColors();\r\n                this.setFormatted(this.value);\r\n                this.emit('editor-init');\r\n            },\r\n            paste_data_images: false,\r\n            paste_webkit_styles: 'color background background-color text-decoration',\r\n            valid_elements: 'strong/b,em/i,u,span[style],span[class],strike/s,br',\r\n            valid_styles: {\r\n                '*': 'color,background,background-color,text-decoration,font-weight'\r\n            },\r\n            color_map: this._ColorTable,\r\n        });\r\n    }\r\n\r\n    public focus() {\r\n        if (this.isSimple)\r\n            this._element.focus();\r\n        else if (TINYMCE && tinymce.activeEditor)\r\n            tinymce.activeEditor.focus();\r\n    }\r\n}", "\r\nimport \"../css/interface.css\";\r\nimport { initMenu } from './menu';\r\nimport { Client } from '../client';\r\nimport { Dialog } from \"../dialog\";\r\nimport { openFileDialog, readFile, debounce } from '../library';\r\nimport { AdvEditor } from './adv.editor';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        initializeInterface;\r\n    }\r\n    let client: Client;\r\n}\r\n\r\n//cache the objects once made for later use\r\nlet editor: AdvEditor;\r\nlet editorDialog: Dialog;\r\n\r\nexport function initializeInterface() {\r\n    let options;\r\n    initMenu();\r\n    client.input.on('history-navigate', () => {\r\n        if (client.getOption('commandAutoSize') || client.getOption('commandScrollbars'))\r\n            resizeCommandInput();\r\n    });\r\n    client.on('options-loaded', () => {\r\n        client.commandInput.removeEventListener('input', resizeCommandInput);\r\n        client.commandInput.removeEventListener('change', resizeCommandInput);\r\n        initCommandInput();\r\n        updateCommandInput();\r\n        if (client.getOption('commandAutoSize') || client.getOption('commandScrollbars'))\r\n            resizeCommandInput();\r\n    });\r\n    //setup advanced editor footer button\r\n    document.getElementById('btn-adv-edit').addEventListener('click', e => {\r\n        if (!editorDialog) {\r\n            editorDialog = new Dialog(Object.assign({}, client.getOption('windows.editor') || { center: true }, { title: '<i class=\"fas fa-edit\"></i> Advanced editor', id: 'adv-editor' }));\r\n            editorDialog.on('resized', e => {\r\n                client.setOption('windows.editor', e);\r\n            });\r\n            editorDialog.on('moved', e => {\r\n                client.setOption('windows.editor', e);\r\n            })\r\n            editorDialog.on('maximized', () => {\r\n                client.setOption('windows.editor', editorDialog.windowState);\r\n            });\r\n            editorDialog.on('restored', () => {\r\n                client.setOption('windows.editor', editorDialog.windowState);\r\n            });\r\n            editorDialog.on('shown', () => {\r\n                client.setOption('windows.editor', editorDialog.windowState);\r\n                editor.initialize();\r\n            });\r\n            editorDialog.on('closing', () => {\r\n                editor.remove();\r\n            });\r\n            editorDialog.on('closed', () => {\r\n                client.setOption('windows.editor', editorDialog.windowState);\r\n            });\r\n            editorDialog.on('canceling', () => {\r\n                editor.remove();\r\n            });\r\n            editorDialog.on('canceled', () => {\r\n                client.setOption('windows.editor', editorDialog.windowState);\r\n            });\r\n            const textarea = document.createElement('textarea');\r\n            textarea.classList.add('form-control', 'form-control-sm');\r\n            textarea.id = 'txt-adv-editor';\r\n            editorDialog.body.appendChild(textarea);\r\n            editorDialog.body.style.overflow = 'hidden';\r\n            if (!editor) editor = new AdvEditor(textarea, !client.getOption('simpleEditor'));\r\n            editor.on('close', () => {\r\n                editorDialog.close();\r\n            });\r\n            editor.on('editor-init', () => editor.focus());\r\n            editorDialog.dialog.editor = editor;\r\n            if (TINYMCE && tinymce)\r\n                editorDialog.header.querySelector('#adv-editor-max').insertAdjacentHTML('afterend', '<button type=\"button\" class=\"btn btn-light float-end\" id=\"adv-editor-switch\" title=\"Switch to advanced\" style=\"padding: 0 4px;margin-top: -1px;\"><i class=\"bi-shuffle\"></i></button>');\r\n            editorDialog.footer.innerHTML = `<button id=\"btn-adv-edit-clear\" type=\"button\" class=\"float-start btn btn-light\" title=\"Clear editor\">Clear</button>\r\n                <button id=\"btn-adv-edit-append\" type=\"button\" class=\"float-start btn btn-light\" title=\"Append file...\">Append file...</button>\r\n                <button id=\"btn-adv-edit-send\" type=\"button\" class=\"float-end btn btn-primary\" title=\"Send\">Send</button>`;\r\n            if (!editor.isSimple)\r\n                editorDialog.header.querySelector('#adv-editor-switch').title = 'Switch to simple';\r\n            editorDialog.header.querySelector('#adv-editor-switch').addEventListener('click', () => {\r\n                client.setOption('simpleEditor', !editor.simple);\r\n                let value = '';\r\n                if (!editor.isSimple)\r\n                    value = editor.getFormattedText().replace(/(?:\\r)/g, '');\r\n                //else\r\n                //value = editor.value;\r\n                editor.simple = !editor.simple;\r\n                if (!editor.isSimple) {\r\n                    editorDialog.hideFooter();\r\n                    editorDialog.header.querySelector('#adv-editor-switch').title = 'Switch to simple';\r\n                }\r\n                else {\r\n                    editor.value = value;\r\n                    editorDialog.showFooter();\r\n                    editorDialog.header.querySelector('#adv-editor-switch').title = 'Switch to advanced';\r\n                    setTimeout(() => editor.focus(), 100);\r\n                }\r\n                //editor.setFormatted(value);\r\n            });\r\n            document.getElementById('btn-adv-edit-append').addEventListener('click', () => {\r\n                openFileDialog('Append file', false).then(files => {\r\n                    readFile(files[0]).then((contents: any) => {\r\n                        editor.insert(contents);\r\n                    }).catch(client.error);\r\n                }).catch(() => { });\r\n            });\r\n            document.getElementById('btn-adv-edit-send').addEventListener('click', () => {\r\n                client.sendCommand(editor.value());\r\n                if (client.getOption('editorClearOnSend'))\r\n                    editor.clear();\r\n                if (client.getOption('editorCloseOnSend'))\r\n                    editorDialog.close();\r\n            });\r\n            document.getElementById('btn-adv-edit-clear').addEventListener('click', () => {\r\n                editor.clear();\r\n                editor.focus();\r\n            });\r\n            if (!editor.isSimple)\r\n                editorDialog.hideFooter();\r\n        }\r\n        editorDialog.show();\r\n        editor.focus();\r\n    });\r\n    //restore advanced editor\r\n    options = client.getOption('windows.editor');\r\n    if (options && options.show)\r\n        document.getElementById('btn-adv-edit').click();\r\n\r\n    document.getElementById('btn-command-history').addEventListener('show.bs.dropdown', function () {\r\n        document.body.appendChild(document.getElementById('command-history-menu'));\r\n    });\r\n    document.getElementById('btn-command-history').addEventListener('hidden.bs.dropdown', function () {\r\n        document.getElementById('btn-command-history').parentElement.appendChild(document.getElementById('command-history-menu'));\r\n    });\r\n    client.commandInput.removeEventListener('input', resizeCommandInput);\r\n    client.commandInput.removeEventListener('change', resizeCommandInput);\r\n    initCommandInput();\r\n    updateCommandInput();\r\n    if (client.getOption('commandAutoSize') || client.getOption('commandScrollbars'))\r\n        resizeCommandInput();\r\n}\r\n\r\nfunction resizeCommandInput() {\r\n    debounce(() => {\r\n        _resizeCommandInput();\r\n    }, 250, 'resizeCommand');\r\n}\r\n\r\nasync function initCommandInput() {\r\n    if (client.getOption('commandAutoSize') || client.getOption('commandScrollbars')) {\r\n        client.commandInput.addEventListener('input', resizeCommandInput);\r\n        client.commandInput.addEventListener('change', resizeCommandInput);\r\n    }\r\n    if (client.getOption('commandWordWrap')) {\r\n        document.getElementById('commandMeasure').style.whiteSpace = 'pre-wrap';\r\n        document.getElementById('commandMeasure').style.overflowWrap = 'anywhere';\r\n    }\r\n    else {\r\n        document.getElementById('commandMeasure').style.whiteSpace = '';\r\n        document.getElementById('commandMeasure').style.overflowWrap = '';\r\n    }\r\n    if (client.getOption('commandScrollbars')) {\r\n        document.getElementById('commandMeasure').style.overflow = 'auto';\r\n        client.commandInput.style.overflow = 'auto';\r\n    }\r\n    else {\r\n        document.getElementById('commandMeasure').style.overflow = '';\r\n        client.commandInput.style.overflow = '';\r\n    }\r\n}\r\n\r\nlet commandInputResize: any = {};\r\nfunction updateCommandInput() {\r\n    const measure = document.getElementById('commandMeasure');\r\n    document.body.appendChild(measure);\r\n    const cmd = client.commandInput.parentElement;\r\n    const cmdSize = window.getComputedStyle(cmd);\r\n    measure.style.fontSize = client.commandInput.style.fontSize;\r\n    measure.style.fontFamily = client.commandInput.style.fontFamily;\r\n    measure.style.width = client.commandInput.offsetWidth + 'px';\r\n    const oldMeasure = measure.innerHTML;\r\n    measure.innerHTML = 'W';\r\n    let minHeight = client.getOption('commandMinLines');\r\n    const height = measure.offsetHeight;\r\n    minHeight = height * (minHeight < 1 ? 1 : minHeight);\r\n    let padding = parseFloat(cmdSize.borderTopWidth) || 0;\r\n    padding += parseFloat(cmdSize.borderBottomWidth) || 0;\r\n    padding += parseFloat(cmdSize.paddingTop) || 0;\r\n    padding += parseFloat(cmdSize.paddingBottom) || 0;\r\n    let inset = cmdSize.inset.split(' ');\r\n    padding += (parseFloat(inset[0]) || 0) * 2;\r\n    measure.innerHTML = oldMeasure;\r\n    cmd.style.height = (height + padding) + 'px';\r\n    /*\r\n    TODO need to rethink this logic and in _resizeCommandInput, as the current interface has 3 layers the nav group, then input group, then the input itself\r\n    may need to walk the chain up til body or until it finds shared container with display and resize each one based on positions/paddings/margins\r\n    */\r\n    client.commandInput.parentElement.style.height = height + 'px';\r\n    client.commandInput.closest('nav').style.height = height + 6 + 'px';\r\n    client.display.container.style.bottom = (height + padding) + 'px';\r\n\r\n    commandInputResize = {\r\n        measure: measure,\r\n        cmd: cmd,\r\n        cmdSize: cmdSize,\r\n        height: height,\r\n        padding: padding,\r\n        minHeight: minHeight\r\n    }\r\n}\r\n\r\nfunction _resizeCommandInput() {\r\n    const measure = commandInputResize.measure;\r\n    const cmd = commandInputResize.cmd;\r\n    measure.innerHTML = client.commandInput.value + '\\n';\r\n    let height = measure.offsetHeight;\r\n    if (height < commandInputResize.minHeight)\r\n        height = commandInputResize.minHeight;\r\n    const padding = commandInputResize.padding;\r\n    cmd.style.height = (height + padding) + 'px';\r\n    client.commandInput.parentElement.style.height = height + 'px';\r\n    client.commandInput.closest('nav').style.height = height + 6 + 'px';\r\n    client.display.container.style.bottom = (height + padding) + 'px';\r\n}\r\nwindow.initializeInterface = initializeInterface;"],
  "mappings": "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IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,OACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,IACXuD,EAAI,SACCvD,IAAM,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ACd,WAAY,MACZ,aAAc,OACd,OAAU,SACV,cAAe,SACf,YAAa,OACb,eAAgB,UAChB,YAAa,OACb,KAAQ,QACR,aAAc,QACd,OAAU,QACV,OAAU,YACV,OAAU,YACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,aACV,OAAU,gBACV,OAAU,gBACV,OAAU,gBACV,OAAU,qBACV,OAAU,cACV,OAAU,QACV,OAAU,eACV,OAAU,YACV,OAAU,gBACV,OAAU,gBACV,OAAU,cACV,OAAU,QACV,OAAU,eACV,OAAU,YACV,OAAU,kBACV,OAAU,gBACV,OAAU,gBACV,OAAU,QACV,OAAU,eACV,OAAU,eACV,OAAU,OACV,OAAU,iBACV,OAAU,YACV,OAAU,QACV,OAAU,eACV,OAAU,eACV,OAAU,sBACV,OAAU,OACV,OAAU,OACV,OAAU,WACV,OAAU,YACV,OAAU,SACV,OAAU,SACV,OAAU,SACV,OAAU,cACV,OAAU,SACV,OAAU,YACV,OAAU,gBACV,OAAU,aACV,OAAU,aACV,OAAU,aACV,OAAU,aACV,OAAU,iBACV,OAAU,iBACV,OAAU,aACV,OAAU,aACV,OAAU,kBACV,OAAU,aACV,OAAU,iBACV,OAAU,aACV,OAAU,aACV,OAAU,WACV,OAAU,aACV,OAAU,aACV,OAAU,aACV,OAAU,YACV,OAAU,aACV,OAAU,mBACV,OAAU,aACV,OAAU,aACV,OAAU,YACV,OAAU,YACV,OAAU,YACV,OAAU,aACV,OAAU,kBACV,OAAU,WACV,OAAU,YACV,OAAU,eACV,OAAU,eACV,OAAU,cACV,OAAU,SACV,OAAU,SACV,OAAU,aACV,OAAU,OACV,OAAU,gBACV,OAAU,gBACV,OAAU,aACV,OAAU,SACV,OAAU,QACV,OAAU,OACV,OAAU,mBACV,OAAU,gBACV,OAAU,mBACV,OAAU,SACV,OAAU,mBACV,OAAU,iBACV,OAAU,iBACV,OAAU,iBACV,OAAU,WACV,OAAU,aACV,OAAU,mBACV,OAAU,aACV,OAAU,iBACV,OAAU,kBACV,OAAU,WACV,OAAU,aACV,OAAU,cACV,OAAU,cACV,OAAU,aACV,OAAU,aACV,OAAU,kBACV,OAAU,MACV,OAAU,YACV,OAAU,oBACV,OAAU,UACV,OAAU,cACV,OAAU,SACV,OAAU,cACV,OAAU,aACV,OAAU,WACV,OAAU,gBACV,OAAU,gBACV,OAAU,gBACV,OAAU,iBACV,OAAU,eACV,OAAU,aACV,OAAU,OACV,OAAU,gBACV,OAAU,gBACV,OAAU,OACV,OAAU,aACV,OAAU,eACV,OAAU,OACV,OAAU,mBACV,OAAU,mBACV,OAAU,SACV,OAAU,mBACV,OAAU,iBACV,OAAU,iBACV,OAAU,aACV,OAAU,iBACV,OAAU,eACV,OAAU,mBACV,OAAU,aACV,OAAU,iBACV,OAAU,iBACV,OAAU,iBACV,OAAU,cACV,OAAU,YACV,OAAU,YACV,OAAU,UACV,OAAU,UACV,OAAU,UACV,OAAU,cACV,OAAU,aACV,OAAU,WACV,OAAU,WACV,OAAU,SACV,OAAU,gBACV,OAAU,SACV,OAAU,sBACV,OAAU,aACV,OAAU,OACV,OAAU,OACV,OAAU,SACV,OAAU,OACV,OAAU,kBACV,OAAU,MACV,OAAU,aACV,OAAU,UACV,OAAU,OACV,OAAU,SACV,OAAU,QACV,OAAU,kBACV,OAAU,eACV,OAAU,OACV,OAAU,mBACV,OAAU,SACV,OAAU,mBACV,OAAU,mBACV,OAAU,iBACV,OAAU,WACV,OAAU,aACV,OAAU,MACV,OAAU,YACV,OAAU,YACV,OAAU,YACV,OAAU,UACV,OAAU,UACV,OAAU,YACV,OAAU,aACV,OAAU,aACV,OAAU,WACV,OAAU,WACV,OAAU,gBACV,OAAU,cACV,OAAU,SACV,OAAU,cACV,OAAU,kBACV,OAAU,SACV,OAAU,SACV,OAAU,SACV,OAAU,cACV,OAAU,eACV,OAAU,aACV,OAAU,OACV,OAAU,OACV,OAAU,OACV,OAAU,kBACV,OAAU,kBACV,OAAU,eACV,OAAU,aACV,OAAU,UACV,OAAU,SACV,OAAU,kBACV,OAAU,QACV,OAAU,QACV,OAAU,YACV,OAAU,QACV,OAAU,SACV,OAAU,SACV,OAAU,UACV,OAAU,UACV,OAAU,UACV,OAAU,UACV,OAAU,UACV,OAAU,UACV,OAA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",
  "names": ["require_inflate_stream_min", "__commonJSMin", "exports", "k", "l", "aa", "s", "a", "d", "b", "c", "e", "x", "y", "g", "f", "p", "h", "q", "m", "n", "r", "B", "z", "A", "H", "I", "J", "ba", "ca", "V", "K", "W", "w", "D", "E", "C", "u", "t", "X", "O", "L", "Y", "F", "M", "G", "N", "P", "da", "Z", "v", "$", "ea", "fa", "ga", "ha", "ia", "ja", "ka", "la", "ma", "Q", "R", "na", "S", "T", "oa", "U", "require_buzz", "__commonJSMin", "exports", "module", "context", "factory", "AudioContext", "buzz", "src", "options", "doc", "pid", "events", "eventsOnce", "supported", "volume", "value", "time", "set", "percent", "duration", "timerangeToArray", "key", "types", "func", "self", "efunc", "e", "t", "type", "idx", "i", "namespace", "detail", "eventType", "evt", "to", "callback", "from", "delay", "doFade", "sound", "source", "getExt", "timeRange", "array", "length", "filename", "audioCtx", "j", "k", "sounds", "argsToArray", "soundArray", "a", "fn", "speed", "args", "withHours", "h", "m", "splits", "total", "decimal", "r", "EventEmitter", "#events", "type", "listener", "args", "caller", "events", "i", "len", "fun", "len", "res", "thisp", "val", "SortArrayByPriority", "a", "b", "SortMapByPriority", "SortItemArrayByPriority", "list", "map", "el", "i", "FilterArrayByKeyValue", "array", "k", "v", "al", "_edCache", "htmlEncode", "value", "_edCache", "htmlDecode", "stripQuotes", "str", "StringBuffer", "str", "string", "b", "arr", "CharAllowedInURL", "chr", "proto", "i", "keyCodeToChar", "$", "clone", "obj", "replacer", "selectAll", "input", "x", "y", "w", "h", "r", "o", "k", "p", "obj", "str", "idx", "s", "rem", "paddingValue", "newStr", "addSlashes", "string", "all", "sep", "type", "escape", "escapeChar", "quote", "sQuote", "pS", "c", "pC", "sp", "spl", "spC", "tl", "getTimeSpan", "i", "al", "tmp", "splitQuoted", "str", "sep", "ec", "q", "sq", "strings", "ps", "s", "sl", "c", "spl", "sp", "getCursor", "el", "oSel", "_colorCodes", "pinkfishToHTML", "text", "loadColors", "stack", "codes", "t", "tl", "bold", "boldNest", "classes", "cl", "c", "color", "r", "g", "b", "idx", "getColors", "_ColorTable", "formatUnit", "str", "ch", "isValidIdentifier", "str", "insertValue", "input", "value", "active", "arg", "txtDecoder", "ArrayBufferToString", "buffer", "BinaryToString", "BinaryToString", "binary", "error", "_error", "StringToBinary", "string", "chars", "code", "i", "isUCS2", "len", "_i", "txtEncoder", "StringToUint8Array", "binLen", "buffer", "copyText", "text", "resolve", "reject", "blob", "data", "permission", "textarea", "e", "err", "pasteText", "getParameterByName", "name", "url", "regex", "results", "fSaveAs", "DownloadAttributeSupport", "BlobBuilder", "URL", "BrowserSupportedMimeTypes", "mimetype", "builder", "link", "event", "utf8", "intc", "TryGetCharUTF8", "b", "count", "c", "s", "ss", "StringBuffer", "sl", "printArray", "dl", "ba", "idx", "getScrollbarWidth", "outer", "inner", "scrollbarWidth", "openFileDialog", "title", "multiple", "accept", "dialog", "input", "readFile", "file", "reader", "evt", "_timers", "debounce", "mainFunction", "delay", "key", "import_inflate_stream_min", "Telnet", "EventEmitter", "options", "data", "skipDecompress", "prependSplit", "tmp", "StringToUint8Array", "raw", "printArray", "e", "returnRaw", "len", "_sb", "state", "pState", "processed", "StringBuffer", "ga", "verb", "option", "msdp_val", "msdp_var", "_MSSP", "i", "ne", "idx", "debugOp", "uLen", "ArrayBufferToString", "op", "reply", "val", "w", "h", "w1", "w2", "h1", "h2", "mf", "str", "dl", "ba", "c", "host", "port", "_socket", "hasScheme", "evt", "reader", "b", "getAnsiColorCode", "color", "back", "getColorCode", "code", "f", "b", "bold", "isMXPColor", "getAnsiCode", "str", "Size", "width", "height", "SettingList", "Settings", "_Settings", "s", "sl", "SettingList", "setting", "defaultValue", "tmp", "err", "value", "TriggerType", "SubTriggerTypes", "MacroDisplay", "item", "d", "keyCodeToChar", "Alarm", "_Alarm", "data", "pattern", "parent", "readOnly", "t", "parts", "tmp", "value", "Item", "_Item", "profile", "prop", "Button", "_Button", "Macro", "_Macro", "Alias", "_Alias", "Trigger", "_Trigger", "il", "i", "Context", "_Context", "Variable", "_Variable", "splitQuoted", "Profile", "_Profile", "name", "defaults", "m", "dl", "file", "version", "sl", "s", "clone", "key", "type", "field", "SortItemArrayByPriority", "l", "v", "ProfileCollection", "_ProfileCollection", "defaultProfile", "a", "b", "ap", "bp", "idx", "c", "profiles", "p", "pc", "resolve", "reject", "keys", "k", "kl", "convertPattern", "client", "convertPatternState", "state", "stringBuilder", "tl", "arg", "pat", "nest", "isValidIdentifier", "mathjs", "_mathjs", "WindowVariables", "ProperCase", "str", "txt", "fudgeDice", "Input", "EventEmitter", "client", "mathjs", "_mathjs", "event", "data", "state", "insertValue", "start", "end", "cursorPos", "getCursor", "endPos", "startPos", "findStr", "regSearch", "word", "line", "tabCasing", "clone", "scope", "WindowVariables", "a", "ll", "l", "name", "expression", "results", "sl", "obj", "locked", "value", "arg", "fun", "res", "functions", "args", "math", "c", "sides", "mod", "min", "max", "sum", "i", "fudgeDice", "keys", "k", "kl", "SortItemArrayByPriority", "MacroDisplay", "ansiRegex", "getAnsiCode", "getAnsiColorCode", "getColorCode", "alarms", "al", "t", "p", "trigger", "profile", "escape", "m", "controllers", "ct", "cl", "controller", "axes", "bl", "macros", "FilterArrayByKeyValue", "ml", "val", "pressed", "n", "raw", "cmd", "index", "txt", "idx", "tl", "s", "pd", "ps", "cmdChar", "f", "items", "tmp", "item", "reload", "avg", "o", "Trigger", "Button", "pattern", "commands", "gl", "v", "e", "w", "getTimeSpan", "StringToUint8Array", "Alias", "SettingList", "files", "isMXPColor", "match", "out", "isValidIdentifier", "r", "openFileDialog", "readFile", "contents", "text", "eAlias", "stacking", "append", "noFunctions", "noComments", "str", "alias", "AliasesCached", "aliases", "stackingChar", "spChar", "ePaths", "eCmd", "eEscape", "escChar", "verbatimChar", "eVerbatim", "eParamEscape", "paramChar", "eParam", "nParamChar", "eNParam", "eEval", "iEval", "iComments", "bComments", "iCommentsStr", "bCommentsStr", "bTrim", "sTrim", "findAlias", "tmp2", "_neg", "_pos", "_fall", "nest", "ProperCase", "nl", "named", "ret", "keycode", "alt", "ctrl", "shift", "meta", "macro", "replace", "num", "delay", "pPath", "ePath", "cnt", "current", "types", "type", "frag", "subtypes", "changed", "triggers", "states", "rCache", "tType", "parent", "re", "convertPattern", "regex", "pIdx", "reparse", "params", "oldState", "oldFire", "oTrigger", "reParse", "lines", "code", "b", "force", "forceSingle", "sep", "splitQuoted", "options", "subTrigger", "sTrigger", "isNew", "filter", "TriggerType", "SubTriggerTypes", "fore", "back", "xEnd", "xStart", "RGBColor", "color_string", "simple_colors", "key", "color_defs", "bits", "cl", "re", "processor", "channels", "r", "g", "b", "MXPTag", "MXPState", "Entity", "remote", "Element", "Tag", "index", "fore", "back", "MXPStyle", "style", "high", "open", "Parser", "EventEmitter", "options", "Size", "mxp", "f", "b", "fc", "bc", "offset", "colors", "params", "p", "pl", "i", "rgb", "_ColorTable", "r", "g", "idx", "code", "color", "RGBColor", "line", "raw", "fragment", "skip", "formats", "data", "textLen", "l", "nF", "format", "end", "nFormat", "entity", "tag", "custom", "secure", "tmp", "ml", "m", "args", "oTag", "blocks", "arg", "sArg", "sArgs", "x", "xl", "e", "sl", "s", "href", "hint", "expire", "prompt", "MXPTag", "stripQuotes", "cmds", "tt", "caps", "bl", "eType", "n", "type", "tl", "ts", "str", "c", "state", "clr", "il", "cnt", "ansi", "text", "force", "prependSplit", "_TermTitle", "_TermTitleType", "_AnsiParams", "stringBuilder", "formatBuilder", "rawBuilder", "pState", "lineLength", "iTmp", "mOffset", "_MXPTag", "_MXPOTag", "_MXPEntity", "_MXPComment", "_MXPArgs", "lines", "d", "u", "tabWidth", "lnk", "fLnk", "lnkOffset", "lLnk", "lNest", "mt", "j", "htmlDecode", "CharAllowedInURL", "_Tab", "psk", "pFnd", "nl", "ex", "width", "height", "Display", "EventEmitter", "container", "options", "e", "DisplayModel", "debounce", "entries", "observer", "mutationsList", "mutation", "value", "val", "data", "noUpdate", "args", "id", "elLine", "x", "xl", "title", "type", "tag", "idx", "enable", "Size", "getScrollbarWidth", "l", "html", "msg", "y", "amt", "r", "txt", "remote", "force", "prependSplit", "line", "width", "height", "scrollWidth", "font", "size", "pc", "padding", "styles", "start", "len", "inner", "parts", "offset", "style", "fCls", "text", "formats", "fLen", "right", "f", "format", "nFormat", "end", "td", "htmlEncode", "tmp", "formatUnit", "full", "lines", "_html", "fore", "back", "color", "code", "Parser", "expire", "fs", "fl", "fsl", "eType", "n", "percent", "ol", "lineLength", "found", "formatEnd", "nF", "textLen", "version", "buzz", "Plugin", "EventEmitter", "#client", "value", "client", "SoundState", "EventEmitter", "file", "repeats", "volume", "priority", "e", "err", "resolve", "reject", "MSP", "Plugin", "options", "Client", "data", "option", "value", "text", "type", "args", "state", "str", "x", "xl", "c", "arg", "tmp", "stripQuotes", "old", "mod", "sound", "i", "Client", "EventEmitter", "options", "version", "Display", "e", "width", "height", "msg", "data", "tag", "args", "title", "type", "Telnet", "err", "val", "mod", "idx", "dl", "c", "obj", "tmp", "getParameterByName", "Input", "lock", "history", "profile", "item", "MSP", "value", "enable", "host", "port", "keys", "k", "kl", "SortItemArrayByPriority", "trigger", "a", "s", "sl", "plugin", "name", "variables", "names", "nl", "n", "index", "txt", "ProfileCollection", "Profile", "al", "client", "state", "pattern", "Alarm", "p", "temp", "oldState", "newState", "alarm", "now", "dNow", "future", "fend", "old", "oAlarms", "changed", "patterns", "alarms", "parent", "line", "match", "ts", "sec", "min", "hr", "hours", "minutes", "seconds", "Settings", "clrs", "cl", "remote", "force", "prependSplit", "str", "fore", "back", "newline", "forceLine", "codes", "echo", "style", "noEcho", "comments", "selectAll", "enabled", "message", "text", "eAlias", "stacking", "noFunction", "event", "delay", "closeMenu", "showMenu", "initMenu", "el", "text", "icon", "updateScrollLock", "e", "doc", "docEl", "requestFullScreen", "cancelFullScreen", "Dialog", "EventEmitter", "options", "debounce", "styles", "e", "t", "x", "y", "fake", "redirectedEvent", "footer", "ec", "right", "bottom", "corner", "left", "top", "value", "type", "rect", "old", "el", "position", "w", "h", "forceReset", "dialogs", "d", "dl", "i", "order", "z", "a", "b", "AdvEditor", "EventEmitter", "element", "enabledAdvanced", "value", "insertValue", "htmlEncode", "content", "_dColors", "getColors", "c", "color", "r", "g", "b", "idx", "_bold", "bl", "clientColors", "RGBColor", "_editor", "editor", "url", "fallbackColor", "_colors", "_lastButton", "Cell", "initial", "_forecolor", "_backcolor", "getCurrentColor", "format", "elm", "applyFormat", "removeFormat", "registerCommands", "name", "setIconColor", "getAdditionalColors", "hasCustom", "type", "remove", "applyColor", "onChoice", "mapColors", "colorMap", "colors", "i", "getFetch", "callback", "splitButtonApi", "newColor", "id", "registerTextColorButton", "tooltip", "lastColor", "_splitButtonApi", "handler", "e", "registerTextColorMenuItem", "text", "data", "buttonPostRender", "buttonApi", "state", "toggleFormat", "api", "pasteText", "err", "copyText", "els", "back", "fore", "cell", "Dialog", "cl", "html", "html2", "cells", "openFileDialog", "files", "f", "fl", "readFile", "contents", "pinkfishToHTML", "tag", "$el", "t", "tl", "stack", "el", "nodes", "n", "nl", "start", "end", "style", "buffer", "codes", "d", "dl", "rgb", "hex", "hexToRgb", "shortRegEx", "full", "longRegEx", "rgbArray", "rgbObj", "closestHexFromRgb", "minDistance", "nearestHex", "currentColor", "distance", "regex", "m", "editor", "editorDialog", "initializeInterface", "options", "initMenu", "resizeCommandInput", "initCommandInput", "updateCommandInput", "e", "Dialog", "textarea", "AdvEditor", "value", "openFileDialog", "files", "readFile", "contents", "debounce", "_resizeCommandInput", "commandInputResize", "measure", "cmd", "cmdSize", "oldMeasure", "minHeight", "height", "padding", "inset"]
}
